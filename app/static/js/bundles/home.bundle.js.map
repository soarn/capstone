{"version":3,"file":"home.bundle.js","mappings":"yHAKAA,SAASC,iBAAiB,oBAAoBC,UAE5C,MAAMC,EAAoBH,SAASI,eAAe,eAElD,GAAID,EAAmB,CACrB,MAAQE,QAASC,SAAoB,6BAG/BC,EAAiBC,SAASL,EAAkBM,QAAQC,WAAY,KAAO,GAG7E,IAAIC,EAAgB,CAClB,GACA,GACA,GACA,CAAEC,MAAO,MAAOC,OAAQ,IAI1BF,EAAgBA,EAAcG,QAAQC,GAClB,iBAAXA,EACHA,EAAOF,QAAUN,EACjBQ,IAAWR,IAIjBI,EAAcK,QAAQT,GAGtBU,EAAEd,GAAmBG,UAAU,CAC7BY,YAAY,EACZC,YAAY,EACZC,KAAM,CACJC,IAAKlB,EAAkBM,QAAQY,IAC/BC,KAAM,OAERC,WAAYhB,EACZiB,WAAYb,EACZc,QAAS,CACP,CAAEC,KAAM,UACR,CAAEA,KAAM,WACR,CACEA,KAAM,QACNC,OAAQV,EAAEW,GAAGC,UAAUF,OAAOG,OAAO,IAAK,IAAK,EAAG,MAEpD,CAAEJ,KAAM,YACR,CACEA,KAAM,aACNC,OAAQV,EAAEW,GAAGC,UAAUF,OAAOG,OAAO,IAAK,IAAK,EAAG,MAEpD,CACEJ,KAAM,aACNC,OAAQV,EAAEW,GAAGC,UAAUF,OAAOG,OAAO,IAAK,IAAK,EAAG,MAEpD,CACEJ,KAAM,YACNC,OAAQV,EAAEW,GAAGC,UAAUF,OAAOG,OAAO,IAAK,IAAK,EAAG,MAEpD,CACEJ,KAAM,cACNC,OAAQV,EAAEW,GAAGC,UAAUF,OAAOG,OAAO,IAAK,IAAK,EAAG,MAEpD,CAAEJ,KAAM,WAEVK,MAAO,CAAC,CAAC,EAAG,UAEhB,I","sources":["webpack://static/./js/home.js"],"sourcesContent":["\n// Import CSS Files\nimport \"datatables.net-dt/css/dataTables.dataTables.min.css\"; // DataTables CSS\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // Bootstrap CSS\n\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\n  // Retrieve dynamic data from HTML\n  const stockTableElement = document.getElementById(\"stock-table\");\n\n  if (stockTableElement) {\n    const { default: DataTable } = await import(\"datatables.net\"); // Dynamically load DataTables\n\n    // Get user pagination setting from data attributes\n    const userPagination = parseInt(stockTableElement.dataset.pagination, 10) || 10;\n\n    // Define available length options\n    let lengthOptions = [\n      10,\n      25,\n      50,\n      { label: \"All\", value: -1 },\n    ];\n\n    // Filter out user's current setting from length options\n    lengthOptions = lengthOptions.filter((option) =>\n      typeof option === \"object\"\n        ? option.value !== userPagination\n        : option !== userPagination\n    );\n\n    // Add user's pagination setting at the beginning of the menu\n    lengthOptions.unshift(userPagination);\n\n   // Initialize DataTables for the stock table\n    $(stockTableElement).DataTable({\n      processing: true,\n      serverSide: true,\n      ajax: {\n        url: stockTableElement.dataset.url, // Fetch the AJAX URL dynamically\n        type: \"GET\",\n      },\n      pageLength: userPagination,\n      lengthMenu: lengthOptions,\n      columns: [\n        { data: \"symbol\" },\n        { data: \"company\" },\n        {\n          data: \"price\",\n          render: $.fn.dataTable.render.number(\",\", \".\", 2, \"$\"),\n        },\n        { data: \"quantity\" },\n        {\n          data: \"open_price\",\n          render: $.fn.dataTable.render.number(\",\", \".\", 2, \"$\"),\n        },\n        {\n          data: \"high_price\",\n          render: $.fn.dataTable.render.number(\",\", \".\", 2, \"$\"),\n        },\n        {\n          data: \"low_price\",\n          render: $.fn.dataTable.render.number(\",\", \".\", 2, \"$\"),\n        },\n        {\n          data: \"close_price\",\n          render: $.fn.dataTable.render.number(\",\", \".\", 2, \"$\"),\n        },\n        { data: \"volume\" },\n     ],\n      order: [[7, \"desc\"]],\n    });\n  }\n});\n\n"],"names":["document","addEventListener","async","stockTableElement","getElementById","default","DataTable","userPagination","parseInt","dataset","pagination","lengthOptions","label","value","filter","option","unshift","$","processing","serverSide","ajax","url","type","pageLength","lengthMenu","columns","data","render","fn","dataTable","number","order"],"sourceRoot":""}
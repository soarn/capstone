{"version":3,"file":"admin.bundle.js","mappings":"8FAEAA,SAASC,iBAAiB,oBAAoBC,iBAE5C,MAAMC,EAAkBH,SAASI,eAAe,aAChD,GAAID,EAAiB,CACnB,MAAQE,QAASC,SAAkB,6BACnC,IAAIA,EAAQH,EAAiB,CAC3BI,kBAAkB,EAClBC,iBAAkB,oBAEtB,CAGA,MAAMC,EAAiBC,SAASV,SAASW,KAAKC,QAAQH,eAAgB,IAGtE,IAAII,EAAgB,CAClB,GACA,GACA,GACA,CAAEC,MAAO,MAAOC,OAAQ,IAe1B,GAXAF,EAAgBA,EAAcG,QAAQC,GAClB,iBAAXA,EACHA,EAAOF,QAAUN,EACjBQ,IAAWR,IAIjBI,EAAcK,QAAQT,GAGIT,SAASI,eAAe,sBAC3B,CACrB,MAAQC,QAASc,SAAoB,6BACrCC,EAAE,uBAAuBD,UAAU,CAClCE,YAAY,EACXC,YAAY,EACZC,KAAM,CACJC,IAAKxB,SAASW,KAAKC,QAAQa,mBAC3BC,KAAM,OAERC,WAAYlB,EACZmB,WAAYf,EACZgB,QAAS,CACP,CAAEC,KAAM,gBACR,CAAEA,KAAM,YACR,CAAEA,KAAM,UACR,CAAEA,KAAM,QACR,CAAEA,KAAM,YACR,CACEA,KAAM,QACNC,OAAQX,EAAEY,GAAGC,UAAUF,OAAOG,OAAO,IAAK,IAAK,EAAG,MAEpD,CACEJ,KAAM,SACNC,OAAQX,EAAEY,GAAGC,UAAUF,OAAOG,OAAO,IAAK,IAAK,EAAG,MAEpD,CACEJ,KAAM,YACNC,OAAQX,EAAEY,GAAGC,UAAUF,OAAO,SAGlCI,MAAO,CAAC,CAAC,EAAG,UAEhB,CACF,G","sources":["webpack://static/./js/admin.js"],"sourcesContent":["// Import Node.js modules installed via npm\n\ndocument.addEventListener('DOMContentLoaded', async function () {\n  // Initialize Choices.js for day selection\n  const openDaysElement = document.getElementById('open-days');\n  if (openDaysElement) {\n    const { default: Choices } = await import('choices.js'); // Dynamically load Choices.js\n    new Choices(openDaysElement, {\n      removeItemButton: true,\n      placeholderValue: 'Select Open Days',\n    });\n  }\n\n  // Get user pagination setting from data attributes\n  const userPagination = parseInt(document.body.dataset.userPagination, 10);\n\n  // Define the available length options\n  let lengthOptions = [\n    10,\n    25,\n    50,\n    { label: 'All', value: -1 },\n  ];\n\n  // Filter out the user's current setting from length options\n  lengthOptions = lengthOptions.filter((option) =>\n    typeof option === 'object'\n      ? option.value !== userPagination\n      : option !== userPagination\n  );\n\n  // Add the user's setting at the beginning of the menu\n  lengthOptions.unshift(userPagination);\n\n  // Initialize DataTables for transaction history\n  const transactionsTable = document.getElementById('transactions-table');\n  if (transactionsTable) {\n    const { default: DataTable } = await import('datatables.net'); // Dynamically load DataTables\n    $('#transactions-table').DataTable({\n     processing: true,\n      serverSide: true,\n      ajax: {\n        url: document.body.dataset.transactionDataUrl,\n        type: 'GET',\n      },\n      pageLength: userPagination,\n      lengthMenu: lengthOptions,\n      columns: [\n        { data: 'order_number' },\n        { data: 'username' },\n        { data: 'symbol' },\n        { data: 'type' },\n        { data: 'quantity' },\n        {\n          data: 'price',\n          render: $.fn.dataTable.render.number(',', '.', 2, '$'),\n        },\n        {\n          data: 'amount',\n          render: $.fn.dataTable.render.number(',', '.', 2, '$'),\n        },\n        {\n          data: 'timestamp',\n          render: $.fn.dataTable.render('lll'),\n        },\n      ],\n      order: [[7, 'desc']], // Sort by the timestamp column, descending\n    });\n  }\n});\n\n"],"names":["document","addEventListener","async","openDaysElement","getElementById","default","Choices","removeItemButton","placeholderValue","userPagination","parseInt","body","dataset","lengthOptions","label","value","filter","option","unshift","DataTable","$","processing","serverSide","ajax","url","transactionDataUrl","type","pageLength","lengthMenu","columns","data","render","fn","dataTable","number","order"],"sourceRoot":""}
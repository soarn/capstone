{"version":3,"file":"portfolio.bundle.js","mappings":"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","sources":["webpack://static/./js/portfolio.js"],"sourcesContent":["// Import Node.js modules installed via npm\nconst launchConfetti = () => import('canvas-confetti'); // Confetti Library\nimport { createChart, CrosshairMode, LineStyle } from \"lightweight-charts\"; // Chart Library\nimport Popper from \"@popperjs/core\"; // Popper for Bootstrap Popover\n\n// Importing CSS files\nimport 'choices.js/public/assets/styles/choices.min.css'; // Choices.js styles\n\n\n// IMPORTANT: IN THIS FILE, 'VOLUME' REFERS TO THE MARKET CAP!!\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n\n  // Function to get the cookie value\n  function getCookie(name) {\n    const value = `;${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) return parts.pop().split(';').shift();\n  }\n  \n  // 1. INITIALIZATION\n  // -----------------\n  const portfolioDataElement = document.getElementById(\"portfolio-data\");\n  const allStocksDataElement = document.getElementById(\"all-stocks-data\");\n\n  // Get endpoint URLs from HTML\n  const transactionEndpoint = document\n    .getElementById(\"transaction-endpoint\")\n    .getAttribute(\"data-url\");\n  const balanceEndpoint = document\n    .getElementById(\"balance-endpoint\")\n    .getAttribute(\"data-url\");\n\n  // Get market status from HTML\n  const market_status = document\n    .getElementById(\"market-status\")\n    .getAttribute(\"data-status\");\n\n  // Check if data attributes exist and are not empty before parsing\n  const portfolioStocks = portfolioDataElement.getAttribute(\"data-portfolio\")\n    ? JSON.parse(portfolioDataElement.getAttribute(\"data-portfolio\"))\n    : [];\n  const allStocks = allStocksDataElement.getAttribute(\"data-all-stocks\")\n    ? JSON.parse(allStocksDataElement.getAttribute(\"data-all-stocks\"))\n    : [];\n  \n  // Check if the user has confetti enabled\n  const confettiEnabled = document.getElementById(\"confetti-enabled\").getAttribute(\"data-confetti\");\n\n  let isBuyMode = false; // Toggle buy/sell mode\n\n  // DOM elements\n  const stockList = document.getElementById(\"stock-list\");\n  const buyModeBtn = document.getElementById(\"buy-mode\");\n  const sellModeBtn = document.getElementById(\"sell-mode\");\n  const stockListTitle = document.getElementById(\"stock-list-title\");\n  const transactionForm = document.getElementById(\"transaction-form\");\n  const transactionAction = document.getElementById(\"transaction-action\"); // Action input field\n  const buySellModalElement = document.getElementById(\"buySellModal\");\n  const confirmationModalElement = document.getElementById(\"confirmationModal\");\n  const balanceConfirmationModalElement = document.getElementById(\"balConfirmationModal\");\n  const balanceForm = document.getElementById(\"balance-form\");\n  const balanceAction = document.getElementById(\"balance-action\");\n  const depositBtn = document.getElementById(\"depositFundsBtn\");\n  const withdrawBtn = document.getElementById(\"withdrawFundsBtn\");\n  const timePeriodSelector = document.getElementById(\"time-period\");\n\n  // Initialize Bootstrap modals\n  const buySellModal = new bootstrap.Modal(buySellModalElement);\n  const confirmationModal = new bootstrap.Modal(confirmationModalElement);\n\n  // Extract theme colors from CSS variables\n  const primaryColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-primary\")\n    .trim();\n  const secondaryColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-secondary\")\n    .trim();\n  const tertiaryColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-tertiary\")\n    .trim();\n  const successColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-success\")\n    .trim();\n  const dangerColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-danger\")\n    .trim();\n  const warningColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-warning\")\n    .trim();\n  const infoColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-info\")\n    .trim();\n  const textColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-body-color\")\n    .trim();\n  const bodyBgColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-body-bg\")\n    .trim();\n  const redColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-red\")\n    .trim();\n  const greenColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-green\")\n    .trim();\n  const blueColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-blue\")\n    .trim();\n  const yellowColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-yellow\")\n    .trim();\n  const purpleColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-purple\")\n    .trim();\n  const cyanColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-cyan\")\n    .trim();\n  const orangeColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-orange\")\n    .trim();\n  const pinkColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-pink\")\n    .trim();\n  const tealColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-teal\")\n    .trim();\n  const indigoColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-indigo\")\n    .trim();\n  const limeColor = getComputedStyle(document.documentElement)\n    .getPropertyValue(\"--bs-lime\")\n    .trim();\n\n  // 2. CHART HANDLING\n  // -----------------\n\n  const chartContainer = document.getElementById(\"chart-container\");\n  let selectedPeriod = \"1D\"; // Default to 1 day\n  let currentStockId = null;\n\n  // Custom Formatters\n  const usdPriceFormatter = Intl.NumberFormat(getCookie(\"user_locale\"), {\n    style: 'currency',\n    currency: 'USD',\n  }).format;\n\n  // Initialize the chart\n  const chart = createChart(chartContainer, {\n    width: chartContainer.offsetWidth,\n    height: 400,\n    layout: {\n      background: { type: 'solid', color: 'transparent' },\n      textColor: textColor,\n    },\n    grid: {\n      vertLines: { color: secondaryColor },\n      horzLines: { color: secondaryColor },\n    },\n    crosshair: { mode: CrosshairMode.Normal },\n    rightPriceScale: { borderVisible: false },\n    timeScale: { \n      borderVisible: false,\n      timeVisible: true,\n      barSpacing: 10,\n      localization: {\n        timeFormatter: (timestamp) => {\n          const date = new Date(timestamp * 1000);\n          return date.toLocaleString(getCookie(\"user_locale\"), {\n            timeZone: getCookie(\"user_time_zone\")\n          });\n        },\n      },\n    },\n    localization: {\n      timeFormatter: (timestamp) => {\n        const date = new Date(timestamp * 1000);\n        return date.toLocaleString(getCookie(\"user_locale\"), {\n          timeZone: getCookie(\"user_time_zone\")\n        });\n      },\n    },\n  });\n\n  // Set the border color for the vertical axis\n  chart.priceScale().applyOptions({\n    borderColor: infoColor,\n  });\n\n  // Set the border color for the horizontal axis\n  chart.timeScale().applyOptions({\n    borderColor: infoColor,\n    barSpacing: 10,\n  });\n\n  // Apply the custom usdPriceFormatter to the chart\n  chart.applyOptions({\n    localization: {\n      priceFormatter: usdPriceFormatter,\n    },\n  });\n\n  // Customize the Crosshair\n  chart.applyOptions({\n    crosshair: {\n      mode: CrosshairMode.Normal,\n\n      // Vertical crosshair line (showing Date in Label)\n      vertLine: {\n        width: 8,\n        color: purpleColor + '33',\n        style: LineStyle.Solid,\n        labelBackgroundColor: yellowColor,\n      },\n\n      // Horizontal crosshair line (showing Price in Label)\n      horzLine: {\n        color: yellowColor,\n        labelBackgroundColor: yellowColor,\n      },\n    },\n  });\n\n  chart.timeScale().fitContent();\n\n  // Add candlestick series for OHLC data\n  const candlestickSeries = chart.addCandlestickSeries({\n    upColor: successColor,\n    downColor: dangerColor,\n    borderUpColor: successColor,\n    borderDownColor: dangerColor,\n    wickUpColor: successColor,\n    wickDownColor: dangerColor,\n  });\n\n  // Add an area series to the chart,\n  // Adding this before we add the candlestick cghart\n  // so that it will appear beneath the candlesticks\n  const areaSeries = chart.addAreaSeries({\n    lastValueVisible: false, // hide the last value marker for this series\n    crosshairMarkervisible: false, // hide the crosshair marker for this series\n    lineColor: \"transparent\", // hide the line\n    topColor: purpleColor + 33,\n    bottomColor: purpleColor + 11,\n  });\n\n  // Add volume series\n  const volumeSeries = chart.addLineSeries({\n    color: warningColor,\n    priceScaleId: \"\",\n    priceFormat: { type: \"volume\" },\n  });\n\n  // Configure the secondary price scale for volume\n  chart.priceScale(\"volume\").applyOptions({\n    position: \"left\",\n    scaleMargins: {\n      top: 0.8,\n      bottom: 0,\n    },\n  });\n\n  // 3. FETCH AND UPDATE CHART DATA\n  // -----------------\n\n  // Fetch stock data from the API\n  function fetchStockData(stockId, period) {\n    fetch(`/api/v1/stock-history/${period}?stock_id=${stockId}`)\n      .then((response) => {\n        if (!response.ok)\n          throw new Error(\n            `API error: ${response.status} ${response.statusText}`\n          );\n        return response.json();\n      })\n      .then((data) => {\n        console.log(\"Fetched Data:\", data);\n        const history = data.history || [];\n        const transactions = data.transactions || [];\n        updateCandlestickChart(history);\n        updateVolumeChart(history);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching stock data:\", error);\n        chartContainer.textContent = \"Failed to load data. Please try again.\";\n        candlestickSeries.setData([]); // Clear the chart\n        volumeSeries.setData([]);\n      });\n  }\n\n  // Update the candlestick chart with OHLC data\n  function updateCandlestickChart(history) {\n    if (!history || history.length === 0) {\n      console.warn(\"No history data available.\");\n      candlestickSeries.setData([]); // Clear the chart\n      return;\n    }\n\n    const validCandlestickData = history.filter(\n      (entry) =>\n        entry.timestamp_unix &&\n        entry.open_price !== null &&\n        entry.high_price !== null &&\n        entry.low_price !== null &&\n        entry.close_price !== null &&\n        entry.volume !== null\n    );\n\n    // Format the candlestick data\n    const candlestickData = validCandlestickData.map((entry) => ({\n      time: entry.timestamp_unix,\n      open: parseFloat(entry.open_price),\n      high: parseFloat(entry.high_price),\n      low: parseFloat(entry.low_price),\n      close: parseFloat(entry.close_price),\n      volume: entry.volume,\n    }));\n\n    // Format the areaSeries\n    const lineData = validCandlestickData.map((datapoint) => ({\n      time: datapoint.timestamp_unix,\n      value: (parseFloat(datapoint.close_price) + parseFloat(datapoint.open_price)) / 2,\n    }));\n\n    // Set the data for the Area Series\n    areaSeries.setData(lineData)\n\n    console.log(\"Formatted candlestick data:\", candlestickData);\n\n    candlestickSeries.setData(candlestickData);\n  }\n\n  // Update the volume chart\n  function updateVolumeChart(history) {\n    if (!history || history.length === 0) {\n      console.warn(\"No history data available.\");\n      volumeSeries.setData([]); // Clear the chart\n      return;\n    }\n\n    // Format the data for the volume chart\n    const volumeData = history.map((entry) => ({\n      time: entry.timestamp_unix,\n      value: parseInt(entry.volume, 10),\n      color: entry.close_price > entry.open_price ? infoColor : warningColor,\n    }));\n\n    console.log(\"Formatted volume data:\", volumeData);\n\n    volumeSeries.setData(volumeData);\n  }\n\n  // 4. HANDLE USER INTERACTIONS\n  // ---------------------------\n\n  // Time period selector\n  timePeriodSelector.addEventListener(\"click\", function (event) {\n    const button = event.target.closest(\"button[data-period]\");\n    if (button) {\n      const period = button.getAttribute(\"data-period\");\n      selectedPeriod = period;\n      console.log(\"Selected period:\", selectedPeriod);\n      if (currentStockId) fetchStockData(currentStockId, selectedPeriod);\n    }\n  });\n\n  // Resize chart on window resize\n  window.addEventListener(\"resize\", () => {\n    chart.resize(chartContainer.offsetWidth, 400);\n  });\n\n  // 5. STOCK LIST HANDLING\n  // ----------------------\n  // Populate initial list of owned stocks or all stocks if portfolio is empty\n  if (portfolioStocks.length > 0) {\n    populateStockList(portfolioStocks, false);\n    currentStockId = portfolioStocks[0].id; // Default to the first stock\n    fetchStockData(currentStockId, selectedPeriod);\n    sellModeBtn.classList.add(\"disabled\");\n    document.getElementById(\"buySellModalLabel\").textContent = \"Sell Stock\";\n    isBuyMode = false;\n  } else {\n    populateStockList(allStocks, true);\n    currentStockId = allStocks[0].id; // Default to the first stock\n    fetchStockData(currentStockId, selectedPeriod);\n    this.getElementById('stock-list-title').textContent = \"All Stocks\";\n    buyModeBtn.classList.add(\"disabled\");\n    document.getElementById(\"buySellModalLabel\").textContent = \"Buy Stock\";\n    isBuyMode = true;\n  }\n\n  // Toggle between Buy and Sell mode\n  buyModeBtn.addEventListener(\"click\", function () {\n    isBuyMode = true;\n    stockListTitle.textContent = \"All Stocks\";\n    populateStockList(allStocks, true);\n    buyModeBtn.classList.add(\"disabled\");\n    sellModeBtn.classList.remove(\"disabled\");\n    feather.replace();\n  });\n\n  sellModeBtn.addEventListener(\"click\", function () {\n    isBuyMode = false;\n    stockListTitle.textContent = \"Owned Stocks\";\n    populateStockList(portfolioStocks, false);\n    sellModeBtn.classList.add(\"disabled\");\n    buyModeBtn.classList.remove(\"disabled\");\n    feather.replace();\n  });\n\n  function populateStockList(stocks, isBuyMode) {\n    stockList.innerHTML = \"\"; // Clear list\n\n    stocks.forEach((stock) => {\n      const listItem = document.createElement(\"li\");\n      listItem.classList.add(\"list-group-item\");\n\n      // Create the row for layout\n      const row = document.createElement(\"div\");\n      row.classList.add(\"row\", \"w-100\");\n\n      // Column for stock symbol and name\n      const stockInfoCol = document.createElement(\"div\");\n      stockInfoCol.classList.add(\"stock-info\");\n      stockInfoCol.innerHTML = `<strong>$${stock.symbol}</strong><i id=\"themeIcon\" data-feather=\"chevron-right\"></i> ${\n        stock.name || stock.company || \"undefined\"\n      } <i id=\"themeIcon\" data-feather=\"chevron-right\"></i> $${stock.price}`;\n\n      // Column for quantity badge and button (right-aligned)\n      const buttonCol = document.createElement(\"div\");\n      buttonCol.classList.add(\"button-col\");\n\n      // Quantity Badge\n      const badge = document.createElement(\"span\");\n      badge.classList.add(\n        \"badge\",\n        \"bg-primary\",\n        \"rounded-pill\",\n        \"quantity-badge\"\n      );\n      badge.textContent = stock.shares || stock.quantity || \"undefined\";\n\n      // Buy/Sell button\n      const actionButton = document.createElement(\"button\");\n      actionButton.classList.add(\n        \"btn\",\n        \"btn-sm\",\n        \"btn-outline-secondary\",\n        \"buy-sell-btn\"\n      );\n      actionButton.textContent = isBuyMode ? \"BUY\" : \"SELL\";\n      if (market_status === \"closed\") actionButton.classList.add(\"disabled\");\n      else {\n        actionButton.addEventListener(\"click\", (e) => {\n          e.stopPropagation();\n          openTransactionModal(stock.id, stock.symbol);\n        });\n      }\n\n      // Append badge and button to button column\n      buttonCol.appendChild(badge);\n      buttonCol.appendChild(actionButton);\n\n      // Append stock info and button columns to the list item\n      listItem.appendChild(stockInfoCol);\n      listItem.appendChild(buttonCol);\n\n      // Update chart on item click\n      listItem.addEventListener(\"click\", function () {\n        if (stock.id) {\n          currentStockId = stock.id; // Set current stock ID\n          fetchStockData(stock.id, selectedPeriod); // Fetch data\n        } else {\n          console.warn(\"Invalid stock ID:\", stock);\n        }\n      });\n\n      // Append list item to stock list\n      stockList.appendChild(listItem);\n    });\n  }\n\n  // 6. TRANSACTION LOGIC\n  // --------------------\n  // Open transaction modal and set form values\n  if (market_status === \"open\") {\n    function openTransactionModal(stockId, stockSymbol) {\n      document.getElementById(\"transaction-stock-id\").value = stockId;\n      document.getElementById(\"transaction-stock-symbol\").value = stockSymbol;\n      document.getElementById(\"buySellModalLabel\").textContent = isBuyMode ? \"Buy Stock\" : \"Sell Stock\";\n      transactionAction.value = isBuyMode ? \"buy\" : \"sell\"; // Set action type\n      buySellModal.show();\n    }\n\n  // Initialize the popover for the confirm button\n  const confirmButton = document.getElementById('confirm-action');\n  const popoverInstance = new bootstrap.Popover(confirmButton, {\n    html: true,\n    content: `\n      <div class=\"d-flex justify-content-around\">\n        <a class=\"btn btn-success btn-sm confirm-btn\">Yes</a>\n        <a class=\"btn btn-danger btn-sm cancel-btn\">No</a>\n      </div>\n    `,\n    trigger: 'focus',\n    placement: 'top',\n  });\n\n  // Event delegation to handle confirm and cancel actions inside the popover\n  confirmButton.addEventListener('shown.bs.popover', function () {\n    const popoverElement = document.querySelector('.popover');\n    if (popoverElement) {\n      const confirmBtn = popoverElement.querySelector('.confirm-btn');\n      const cancelBtn = popoverElement.querySelector('.cancel-btn');\n\n      confirmBtn.addEventListener('click', function() {\n        // User clicked \"Yes\" - proceed with form submission\n        const formData = new FormData(transactionForm);\n\n        // Submit the form via fetch API\n        fetch(transactionEndpoint, {\n          method: \"POST\",\n          body: formData,\n          headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n        })\n          .then((response) => response.json())\n          .then((data) => {\n            if (data.status === \"success\") {\n              showConfirmationModal(data.details); // Display the success modal\n              if (confettiEnabled) launchConfetti(); // Trigger confetti animation if enabled\n              transactionForm.reset(); // Reset form fields\n              buySellModal.hide(); // Close the modal\n            } else {\n              alert(`Error: ${data.message}`); // Display error message\n            }\n          })\n          .catch((error) => console.error(\"Error:\", error));\n\n          // Hide the popover\n          popoverInstance.hide();\n      });\n\n    cancelBtn.addEventListener('click', function() {\n      // User clicked \"No\" - close the popover\n      popoverInstance.hide();\n      transactionForm.reset(); // Reset form fields\n      buySellModal.hide(); // Close the modal\n    });\n  }\n  });\n\n    // Function to launch confetti animation\n    launchConfetti().then((confetti) => {\n      // Basic confetti burst\n      confetti({\n          particleCount: 100,\n          spread: 70,\n          origin: { y: 0.6 } // Middle of the screen\n      });\n\n      // Add a series of confetti bursts for a better effect\n      setTimeout(function() {\n          confetti({\n              particleCount: 100,\n              spread: 120,\n              origin: { y: 0.6 }\n          });\n      }, 200);\n\n      setTimeout(function() {\n          confetti({\n              particleCount: 150,\n              spread: 100,\n              origin: { y: 0.6 }\n          });\n      }, 400);\n\n      const colors = [redColor, greenColor, blueColor, yellowColor, purpleColor, cyanColor, orangeColor, pinkColor, tealColor, indigoColor, limeColor];\n      confetti({\n          particleCount: 150,\n          spread: 100,\n          origin: { y: 0.6 },\n          colors: colors\n      });\n\n      // Additional bursts for a more exciting effect\n      setTimeout(function() {\n          confetti({\n              particleCount: 100,\n              spread: 70,\n              origin: { y: 0.6 },\n              colors: colors\n          });\n      }, 200);\n    });\n    \n\n    // Show confirmation modal\n    function showConfirmationModal(details) {\n      document.getElementById(\"order-number\").textContent = details.order_number;\n      document.getElementById(\"order-symbol\").textContent = details.symbol;\n      document.getElementById(\"order-action\").textContent = isBuyMode ? \"Buy\" : \"Sell\";\n      document.getElementById(\"order-quantity\").textContent = details.quantity;\n      document.getElementById(\"order-price\").textContent = details.price;\n      document.getElementById(\"order-total\").textContent = details.total_price;\n      confirmationModal.show();\n    }\n\n    // Refresh the page after the modal is closed\n    confirmationModalElement.addEventListener(\"hidden.bs.modal\", function () {\n      location.reload();\n    });\n\n    // 7. BALANCE HANDLING\n    // ----------------\n    function setBalanceAction(action) {\n      document.getElementById(\"balance-action\").value = action;\n    }\n\n    depositBtn.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      setBalanceAction(\"deposit\");\n      submitBalanceForm();\n    });\n\n    withdrawBtn.addEventListener(\"click\", function (e) {\n      e.preventDefault();\n      setBalanceAction(\"withdraw\");\n      submitBalanceForm();\n    });\n\n    function submitBalanceForm() {\n      const formData = new FormData(balanceForm);\n\n      fetch(balanceEndpoint, {\n        // Using the endpoint URL\n        method: \"POST\",\n        body: formData,\n        headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n      })\n        .then((response) => {\n          if (!response.ok) throw new Error(\"Network response was not ok\");\n          return response.json();\n        })\n        .then((data) => {\n          if (data.status === \"success\") {\n            const balanceModal = bootstrap.Modal.getInstance(\n              document.getElementById(\"balanceModal\")\n            );\n            if (balanceModal) balanceModal.hide();\n            document.getElementById(\"balance-display\").textContent =\n              data.details.new_balance.toFixed(2);\n            showBalConfirmationModal(data.details);\n            balanceForm.reset();\n          } else {\n            alert(data.message);\n          }\n        })\n        .catch((error) => console.error(\"Error:\", error));\n    }\n\n    function showBalConfirmationModal(details) {\n      document.getElementById(\"balConfirmationModalLabel\").textContent =\n        details.action === \"deposit\" ? \"Funds Deposited\" : \"Funds Withdrawn\";\n      document.getElementById(\"bal-order-number\").textContent =\n        details.order_number;\n      document.getElementById(\"bal-order-action\").textContent =\n        details.action === \"deposit\" ? \"Deposit\" : \"Withdrawal\";\n      document.getElementById(\"bal-order-amount\").textContent =\n        details.amount.toFixed(2);\n      document.getElementById(\"bal-order-balance\").textContent =\n        details.new_balance.toFixed(2);\n      const modal = new bootstrap.Modal(\n        document.getElementById(\"balConfirmationModal\")\n      );\n      modal.show();\n    }\n\n    // Refresh the page after the modal is closed\n    balanceConfirmationModalElement.addEventListener(\"hidden.bs.modal\", function () {\n      location.reload();\n    });\n  }\n  feather.replace()\n});\n"],"names":["launchConfetti","document","addEventListener","getCookie","name","parts","cookie","split","length","pop","shift","portfolioDataElement","getElementById","allStocksDataElement","transactionEndpoint","getAttribute","balanceEndpoint","market_status","portfolioStocks","JSON","parse","allStocks","confettiEnabled","isBuyMode","stockList","buyModeBtn","sellModeBtn","stockListTitle","transactionForm","buySellModalElement","confirmationModalElement","balanceConfirmationModalElement","balanceForm","depositBtn","withdrawBtn","timePeriodSelector","buySellModal","bootstrap","Modal","confirmationModal","secondaryColor","getComputedStyle","documentElement","getPropertyValue","trim","successColor","dangerColor","warningColor","infoColor","textColor","redColor","greenColor","blueColor","yellowColor","purpleColor","cyanColor","orangeColor","pinkColor","tealColor","indigoColor","limeColor","chartContainer","selectedPeriod","currentStockId","usdPriceFormatter","Intl","NumberFormat","style","currency","format","chart","width","offsetWidth","height","layout","background","type","color","grid","vertLines","horzLines","crosshair","mode","Normal","rightPriceScale","borderVisible","timeScale","timeVisible","barSpacing","localization","timeFormatter","timestamp","Date","toLocaleString","timeZone","priceScale","applyOptions","borderColor","priceFormatter","vertLine","Solid","labelBackgroundColor","horzLine","fitContent","candlestickSeries","addCandlestickSeries","upColor","downColor","borderUpColor","borderDownColor","wickUpColor","wickDownColor","areaSeries","addAreaSeries","lastValueVisible","crosshairMarkervisible","lineColor","topColor","bottomColor","volumeSeries","addLineSeries","priceScaleId","priceFormat","fetchStockData","stockId","period","fetch","then","response","ok","Error","status","statusText","json","data","console","log","history","transactions","warn","setData","validCandlestickData","filter","entry","timestamp_unix","open_price","high_price","low_price","close_price","volume","candlestickData","map","time","open","parseFloat","high","low","close","lineData","datapoint","value","updateCandlestickChart","volumeData","parseInt","updateVolumeChart","catch","error","textContent","populateStockList","stocks","innerHTML","forEach","stock","listItem","createElement","classList","add","stockInfoCol","symbol","company","price","buttonCol","badge","shares","quantity","actionButton","e","stopPropagation","openTransactionModal","id","appendChild","position","scaleMargins","top","bottom","event","button","target","closest","window","resize","this","remove","feather","replace","confirmButton","popoverInstance","Popover","html","content","trigger","placement","setBalanceAction","action","submitBalanceForm","formData","FormData","method","body","headers","balanceModal","getInstance","hide","details","new_balance","toFixed","showBalConfirmationModal","reset","alert","message","order_number","amount","show","popoverElement","querySelector","confirmBtn","cancelBtn","total_price","confetti","particleCount","spread","origin","y","setTimeout","colors","location","reload","preventDefault"],"sourceRoot":""}
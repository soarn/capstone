{"version":3,"file":"base.bundle.js","mappings":"gIAWA,MAAMA,EAAcC,SAASC,eAAe,eACtCC,EAAYF,SAASC,eAAe,aAGpCE,EAAa,CAAC,SAAU,QAAS,SAAU,YAAa,SAAU,QAAS,UAUjF,SAASC,EAAWC,GAClBL,SAASM,gBAAgBC,aAAa,gBAAiBF,EAAW,OAAS,SAC3EH,EAAUK,aAAa,eAAgBF,EAAW,MAAQ,QAC1DL,SAASC,eAAe,oBAAoBO,YAAcH,EAAW,aAAe,YACpFI,EAAQC,SACV,CAGIX,GACFA,EAAYY,iBAAiB,SAAS,WACpC,MAAMN,EAAsE,SAA3DL,SAASM,gBAAgBM,aAAa,iBACvDZ,SAASa,OAAS,SAASR,EAAW,OAAS,oCAC/CD,EAAWC,EACb,IAIFL,SAASW,iBAAiB,oBAAoB,WAE5CP,EADmBD,EAAWW,SAASC,YAAqC,SAzB9E,WACE,MACMC,EADQ,KAAKhB,SAASa,SACRI,MAAM,YAC1B,GAAqB,IAAjBD,EAAME,OAAc,OAAOF,EAAMG,MAAMF,MAAM,KAAKG,OACxD,CAqBuDC,IAIrDC,YAAW,WACMtB,SAASuB,iBAAiB,UAClCC,SAAQ,SAAUC,GACvBA,EAAMC,UAAUC,IAAI,QACpBF,EAAMC,UAAUE,OAAO,QACvBN,YAAW,IAAMG,EAAMG,UAAU,KACnC,GACF,GAAG,KAGH,MAAMC,EAAaC,UAAUC,WAAaD,UAAUC,UAAUb,OAC1DY,UAAUC,UAAU,GACpBD,UAAUE,UAAYF,UAAUG,aAE9BC,EAAeC,KAAKC,iBAAiBC,kBAAkBC,SAE7DtC,SAASa,OAAS,eAAegB,8BACjC7B,SAASa,OAAS,kBAAkBqB,6BACtC,IAGAzB,EAAQC,S","sources":["webpack://static/./js/base.js"],"sourcesContent":["// Import Node.js modules installed via npm\nimport $ from 'jquery'; // jQuery\nimport * as bootstrap from 'bootstrap';     // Bootstrap\nimport gsap from 'gsap'; // GSAP\nimport { DateTime } from 'luxon'; //Luxon\nimport { computePosition } from '@floating-ui/dom'; // Floating UI (DOM)\n\n// Import CSS Files\n\n\n// DARK MODE TOGGLE\nconst themeToggle = document.getElementById(\"themeToggle\");\nconst themeIcon = document.getElementById(\"themeIcon\");\n\n// Define dark-only themes\nconst darkThemes = [\"darkly\", \"slate\", \"cyborg\", \"superhero\", \"quartz\", \"solar\", \"flatly\"];\n\n// Function to get the cookie value\nfunction getCookie(name) {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${name}=`);\n  if (parts.length === 2) return parts.pop().split(';').shift();\n}\n\n// Apply theme based on preference\nfunction applyTheme(darkMode) {\n  document.documentElement.setAttribute(\"data-bs-theme\", darkMode ? \"dark\" : \"light\");\n  themeIcon.setAttribute(\"data-feather\", darkMode ? \"sun\" : \"moon\");\n  document.getElementById(\"currentThemeName\").textContent = darkMode ? \"Light Mode\" : \"Dark Mode\";\n  feather.replace(); // Re-render feather icons after changing the icon\n}\n\n// Save theme to cookies and update theme when toggled\nif (themeToggle) {\n  themeToggle.addEventListener(\"click\", function () {\n    const darkMode = document.documentElement.getAttribute(\"data-bs-theme\") !== \"dark\";\n    document.cookie = `theme=${darkMode ? \"dark\" : \"light\"}; path=/; max-age=31536000`; // 1 year\n    applyTheme(darkMode);\n  });\n}\n\n// Set the initial theme based on cookies or user preference\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const isDarkMode = darkThemes.includes(userTheme) || getCookie(\"theme\") === \"dark\";\n  applyTheme(isDarkMode);\n\n  // FLASH MESSAGES: Auto dismiss flash messages after 3 seconds\n  setTimeout(function () {\n    const alerts = document.querySelectorAll(\".alert\");\n    alerts.forEach(function (alert) {\n      alert.classList.add(\"fade\");\n      alert.classList.remove(\"show\");\n      setTimeout(() => alert.remove(), 1500);\n    });\n  }, 3000);\n\n  // LOCALE AND TIME ZONE\n  const userLocale = navigator.languages && navigator.languages.length\n    ? navigator.languages[0]\n    : navigator.language || navigator.userLanguage;\n\n  const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  document.cookie = `user_locale=${userLocale}; path=/; max-age=31536000`; // 1 year\n  document.cookie = `user_time_zone=${userTimeZone}; path=/; max-age=31536000`; // 1 year\n});\n\n// Feather icons replacement\nfeather.replace();\n"],"names":["themeToggle","document","getElementById","themeIcon","darkThemes","applyTheme","darkMode","documentElement","setAttribute","textContent","feather","replace","addEventListener","getAttribute","cookie","includes","userTheme","parts","split","length","pop","shift","getCookie","setTimeout","querySelectorAll","forEach","alert","classList","add","remove","userLocale","navigator","languages","language","userLanguage","userTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone"],"sourceRoot":""}
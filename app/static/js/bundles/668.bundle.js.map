{"version":3,"file":"668.bundle.js","mappings":"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","sources":["webpack://static/./node_modules/datatables.net/js/dataTables.mjs"],"sourcesContent":["/*! DataTables 2.1.8\n * © SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nvar $ = jQuery;\n\n\nvar DataTable = function ( selector, options )\n{\n\t// Check if called with a window or jQuery object for DOM less applications\n\t// This is for backwards compatibility\n\tif (DataTable.factory(selector, options)) {\n\t\treturn DataTable;\n\t}\n\n\t// When creating with `new`, create a new DataTable, returning the API instance\n\tif (this instanceof DataTable) {\n\t\treturn $(selector).DataTable(options);\n\t}\n\telse {\n\t\t// Argument switching\n\t\toptions = selector;\n\t}\n\n\tvar _that = this;\n\tvar emptyInit = options === undefined;\n\tvar len = this.length;\n\n\tif ( emptyInit ) {\n\t\toptions = {};\n\t}\n\n\t// Method to get DT API instance from jQuery object\n\tthis.api = function ()\n\t{\n\t\treturn new _Api( this );\n\t};\n\n\tthis.each(function() {\n\t\t// For each initialisation we want to give it a clean initialisation\n\t\t// object that can be bashed around\n\t\tvar o = {};\n\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t_fnExtend( o, options, true ) :\n\t\t\toptions;\n\n\t\t\n\t\tvar i=0, iLen;\n\t\tvar sId = this.getAttribute( 'id' );\n\t\tvar defaults = DataTable.defaults;\n\t\tvar $this = $(this);\n\t\t\n\t\t\n\t\t/* Sanity check */\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t{\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t$(this).trigger( 'options.dt', oInit );\n\t\t\n\t\t/* Backwards compatibility for the defaults */\n\t\t_fnCompatOpts( defaults );\n\t\t_fnCompatCols( defaults.column );\n\t\t\n\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\n\t\t/* Setting up the initialisation object */\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\n\t\t\n\t\t\n\t\t/* Check to see if we are re-initialising a table */\n\t\tvar allSettings = DataTable.settings;\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar s = allSettings[i];\n\t\t\n\t\t\t/* Base check on table node */\n\t\t\tif (\n\t\t\t\ts.nTable == this ||\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t) {\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\n\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t{\n\t\t\t\t\treturn s.oInstance;\n\t\t\t\t}\n\t\t\t\telse if ( bDestroy )\n\t\t\t\t{\n\t\t\t\t\tnew DataTable.Api(s).destroy();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t */\n\t\t\tif ( s.sTableId == this.id )\n\t\t\t{\n\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Ensure the table has an ID - required for accessibility */\n\t\tif ( sId === null || sId === \"\" )\n\t\t{\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\tthis.id = sId;\n\t\t}\n\t\t\n\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\"sInstance\":     sId,\n\t\t\t\"sTableId\":      sId,\n\t\t\tcolgroup: $('<colgroup>').prependTo(this),\n\t\t\tfastData: function (row, column, type) {\n\t\t\t\treturn _fnGetCellData(oSettings, row, column, type);\n\t\t\t}\n\t\t} );\n\t\toSettings.nTable = this;\n\t\toSettings.oInit  = oInit;\n\t\t\n\t\tallSettings.push( oSettings );\n\t\t\n\t\t// Make a single API instance available for internal handling\n\t\toSettings.api = new _Api( oSettings );\n\t\t\n\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\n\t\t// Backwards compatibility, before we apply all the defaults\n\t\t_fnCompatOpts( oInit );\n\t\t\n\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t{\n\t\t\toInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0])\n\t\t\t\t? oInit.aLengthMenu[0][0]\n\t\t\t\t: $.isPlainObject( oInit.aLengthMenu[0] )\n\t\t\t\t\t? oInit.aLengthMenu[0].value\n\t\t\t\t\t: oInit.aLengthMenu[0];\n\t\t}\n\t\t\n\t\t// Apply the defaults and init options to make a single init object will all\n\t\t// options defined from defaults and instance options.\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\n\t\t\n\t\t// Map the initialisation options onto the settings object\n\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\"bPaginate\",\n\t\t\t\"bLengthChange\",\n\t\t\t\"bFilter\",\n\t\t\t\"bSort\",\n\t\t\t\"bSortMulti\",\n\t\t\t\"bInfo\",\n\t\t\t\"bProcessing\",\n\t\t\t\"bAutoWidth\",\n\t\t\t\"bSortClasses\",\n\t\t\t\"bServerSide\",\n\t\t\t\"bDeferRender\"\n\t\t] );\n\t\t_fnMap( oSettings, oInit, [\n\t\t\t\"ajax\",\n\t\t\t\"fnFormatNumber\",\n\t\t\t\"sServerMethod\",\n\t\t\t\"aaSorting\",\n\t\t\t\"aaSortingFixed\",\n\t\t\t\"aLengthMenu\",\n\t\t\t\"sPaginationType\",\n\t\t\t\"iStateDuration\",\n\t\t\t\"bSortCellsTop\",\n\t\t\t\"iTabIndex\",\n\t\t\t\"sDom\",\n\t\t\t\"fnStateLoadCallback\",\n\t\t\t\"fnStateSaveCallback\",\n\t\t\t\"renderer\",\n\t\t\t\"searchDelay\",\n\t\t\t\"rowId\",\n\t\t\t\"caption\",\n\t\t\t\"layout\",\n\t\t\t\"orderDescReverse\",\n\t\t\t\"typeDetect\",\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\n\t\t/* Callback functions which are array driven */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback );\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded );\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback );\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow );\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback );\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback );\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete );\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback );\n\t\t\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\n\t\t/* Browser support detection */\n\t\t_fnBrowserDetect( oSettings );\n\t\t\n\t\tvar oClasses = oSettings.oClasses;\n\t\t\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t$this.addClass( oClasses.table );\n\t\t\n\t\tif (! oSettings.oFeatures.bPaginate) {\n\t\t\toInit.iDisplayStart = 0;\n\t\t}\n\t\t\n\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t{\n\t\t\t/* Display start point, taking into account the save saving */\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t}\n\t\t\n\t\tvar defer = oInit.iDeferLoading;\n\t\tif ( defer !== null )\n\t\t{\n\t\t\toSettings.deferLoading = true;\n\t\t\n\t\t\tvar tmp = Array.isArray(defer);\n\t\t\toSettings._iRecordsDisplay = tmp ? defer[0] : defer;\n\t\t\toSettings._iRecordsTotal = tmp ? defer[1] : defer;\n\t\t}\n\t\t\n\t\t/*\n\t\t * Columns\n\t\t * See if we should load columns automatically or use defined ones\n\t\t */\n\t\tvar columnsInit = [];\n\t\tvar thead = this.getElementsByTagName('thead');\n\t\tvar initHeaderLayout = _fnDetectHeader( oSettings, thead[0] );\n\t\t\n\t\t// If we don't have a columns array, then generate one with nulls\n\t\tif ( oInit.aoColumns ) {\n\t\t\tcolumnsInit = oInit.aoColumns;\n\t\t}\n\t\telse if ( initHeaderLayout.length ) {\n\t\t\tfor ( i=0, iLen=initHeaderLayout[0].length ; i<iLen ; i++ ) {\n\t\t\t\tcolumnsInit.push( null );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Add the columns\n\t\tfor ( i=0, iLen=columnsInit.length ; i<iLen ; i++ ) {\n\t\t\t_fnAddColumn( oSettings );\n\t\t}\n\t\t\n\t\t// Apply the column definitions\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t} );\n\t\t\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t * attributes are found\n\t\t */\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\n\t\tif ( rowOne.length ) {\n\t\t\tvar a = function ( cell, name ) {\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t};\n\t\t\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\n\t\t\t\tif (! col) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcol._isArrayHost = true;\n\t\t\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\t// Must be done after everything which can be overridden by the state saving!\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState );\n\t\t\n\t\tvar features = oSettings.oFeatures;\n\t\tif ( oInit.bStateSave )\n\t\t{\n\t\t\tfeatures.bStateSave = true;\n\t\t}\n\t\t\n\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t// in case that has been altered, so the default sort reflects that option\n\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t// account, and also will apply sorting disabled classes if disabled\n\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t}\n\t\t} );\n\t\t\n\t\t\n\t\t/*\n\t\t * Table HTML init\n\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t */\n\t\tvar caption = $this.children('caption');\n\t\t\n\t\tif ( oSettings.caption ) {\n\t\t\tif ( caption.length === 0 ) {\n\t\t\t\tcaption = $('<caption/>').appendTo( $this );\n\t\t\t}\n\t\t\n\t\t\tcaption.html( oSettings.caption );\n\t\t}\n\t\t\n\t\t// Store the caption side, so we can remove the element from the document\n\t\t// when creating the element\n\t\tif (caption.length) {\n\t\t\tcaption[0]._captionSide = caption.css('caption-side');\n\t\t\toSettings.captionNode = caption[0];\n\t\t}\n\t\t\n\t\tif ( thead.length === 0 ) {\n\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t}\n\t\toSettings.nTHead = thead[0];\n\t\t$('tr', thead).addClass(oClasses.thead.row);\n\t\t\n\t\tvar tbody = $this.children('tbody');\n\t\tif ( tbody.length === 0 ) {\n\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t}\n\t\toSettings.nTBody = tbody[0];\n\t\t\n\t\tvar tfoot = $this.children('tfoot');\n\t\tif ( tfoot.length === 0 ) {\n\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t}\n\t\toSettings.nTFoot = tfoot[0];\n\t\t$('tr', tfoot).addClass(oClasses.tfoot.row);\n\t\t\n\t\t// Copy the data index array\n\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\t// Initialisation complete - table can be drawn\n\t\toSettings.bInitialised = true;\n\t\t\n\t\t// Language definitions\n\t\tvar oLanguage = oSettings.oLanguage;\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\n\t\tif ( oLanguage.sUrl ) {\n\t\t\t// Get the language definitions from a file\n\t\t\t$.ajax( {\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t},\n\t\t\t\terror: function () {\n\t\t\t\t\t// Error occurred loading language file\n\t\t\t\t\t_fnLog( oSettings, 0, 'i18n file loading error', 21 );\n\t\t\n\t\t\t\t\t// Continue on as best we can\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\n\t\t\t_fnInitialise( oSettings );\n\t\t}\n\t} );\n\t_that = null;\n\treturn this;\n};\n\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\n\t/**\n\t * Legacy so v1 plug-ins don't throw js errors on load\n\t */\n\tfeature: [],\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an object of callbacks which provide the features for DataTables\n\t * to be initialised via the `layout` option.\n\t */\n\tfeatures: {},\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Automatic column class assignment\n\t\t */\n\t\tclassName: {},\n\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\t\t/**\n\t\t * Automatic renderer assignment\n\t\t */\n\t\trender: {},\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\tcontainer: 'dt-container',\n\tempty: {\n\t\trow: 'dt-empty'\n\t},\n\tinfo: {\n\t\tcontainer: 'dt-info'\n\t},\n\tlayout: {\n\t\trow: 'dt-layout-row',\n\t\tcell: 'dt-layout-cell',\n\t\ttableRow: 'dt-layout-table',\n\t\ttableCell: '',\n\t\tstart: 'dt-layout-start',\n\t\tend: 'dt-layout-end',\n\t\tfull: 'dt-layout-full'\n\t},\n\tlength: {\n\t\tcontainer: 'dt-length',\n\t\tselect: 'dt-input'\n\t},\n\torder: {\n\t\tcanAsc: 'dt-orderable-asc',\n\t\tcanDesc: 'dt-orderable-desc',\n\t\tisAsc: 'dt-ordering-asc',\n\t\tisDesc: 'dt-ordering-desc',\n\t\tnone: 'dt-orderable-none',\n\t\tposition: 'sorting_'\n\t},\n\tprocessing: {\n\t\tcontainer: 'dt-processing'\n\t},\n\tscrolling: {\n\t\tbody: 'dt-scroll-body',\n\t\tcontainer: 'dt-scroll',\n\t\tfooter: {\n\t\t\tself: 'dt-scroll-foot',\n\t\t\tinner: 'dt-scroll-footInner'\n\t\t},\n\t\theader: {\n\t\t\tself: 'dt-scroll-head',\n\t\t\tinner: 'dt-scroll-headInner'\n\t\t}\n\t},\n\tsearch: {\n\t\tcontainer: 'dt-search',\n\t\tinput: 'dt-input'\n\t},\n\ttable: 'dataTable',\t\n\ttbody: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tthead: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\ttfoot: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tpaging: {\n\t\tactive: 'current',\n\t\tbutton: 'dt-paging-button',\n\t\tcontainer: 'dt-paging',\n\t\tdisabled: 'disabled',\n\t\tnav: ''\n\t}\n} );\n\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<([^>]*>)/g;\nvar _max_str_len = Math.pow(2, 28);\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - Ƀ - Bitcoin\n// - Ξ - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\n\nvar _empty = function ( d ) {\n\treturn !d || d === true || d === '-' ? true : false;\n};\n\n\nvar _intVal = function ( s ) {\n\tvar integer = parseInt( s, 10 );\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function ( num, decimalPoint ) {\n\t// Cache created regular expressions for speed as this function is called often\n\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t}\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\tnum;\n};\n\n\nvar _isNumber = function ( d, decimalPoint, formatted, allowEmpty ) {\n\tvar type = typeof d;\n\tvar strType = type === 'string';\n\n\tif ( type === 'number' || type === 'bigint') {\n\t\treturn true;\n\t}\n\n\t// If empty return immediately so there must be a number if it is a\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t// as a formatted number for currency\n\tif ( allowEmpty && _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tif ( decimalPoint && strType ) {\n\t\td = _numToDecimal( d, decimalPoint );\n\t}\n\n\tif ( formatted && strType ) {\n\t\td = d.replace( _re_formatted_numeric, '' );\n\t}\n\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n};\n\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function ( d ) {\n\treturn _empty( d ) || typeof d === 'string';\n};\n\n// Is a string a number surrounded by HTML?\nvar _htmlNumeric = function ( d, decimalPoint, formatted, allowEmpty ) {\n\tif ( allowEmpty && _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\t// input and select strings mean that this isn't just a number\n\tif (typeof d === 'string' && d.match(/<(input|select)/i)) {\n\t\treturn null;\n\t}\n\n\tvar html = _isHtml( d );\n\treturn ! html ?\n\t\tnull :\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted, allowEmpty ) ?\n\t\t\ttrue :\n\t\t\tnull;\n};\n\n\nvar _pluck = function ( a, prop, prop2 ) {\n\tvar out = [];\n\tvar i=0, ien=a.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) {\n\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function ( a, order, prop, prop2 )\n{\n\tvar out = [];\n\tvar i=0, ien=order.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ] && a[ order[i] ][ prop ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _range = function ( len, start )\n{\n\tvar out = [];\n\tvar end;\n\n\tif ( start === undefined ) {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\telse {\n\t\tend = start;\n\t\tstart = len;\n\t}\n\n\tfor ( var i=start ; i<end ; i++ ) {\n\t\tout.push( i );\n\t}\n\n\treturn out;\n};\n\n\nvar _removeEmpty = function ( a )\n{\n\tvar out = [];\n\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\tout.push( a[i] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n// Replaceable function in api.util\nvar _stripHtml = function (input) {\n\tif (! input || typeof input !== 'string') {\n\t\treturn input;\n\t}\n\n\t// Irrelevant check to workaround CodeQL's false positive on the regex\n\tif (input.length > _max_str_len) {\n\t\tthrow new Error('Exceeded max str len');\n\t}\n\n\tvar previous;\n\n\tinput = input.replace(_re_html, ''); // Complete tags\n\n\t// Safety for incomplete script tag - use do / while to ensure that\n\t// we get all instances\n\tdo {\n\t\tprevious = input;\n\t\tinput = input.replace(/<script/i, '');\n\t} while (input !== previous);\n\n\treturn previous;\n};\n\n// Replaceable function in api.util\nvar _escapeHtml = function ( d ) {\n\tif (Array.isArray(d)) {\n\t\td = d.join(',');\n\t}\n\n\treturn typeof d === 'string' ?\n\t\td\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;') :\n\t\td;\n};\n\n// Remove diacritics from a string by decomposing it and then removing\n// non-ascii characters\nvar _normalize = function (str, both) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\n\t// It is faster to just run `normalize` than it is to check if\n\t// we need to with a regex! (Check as it isn't available in old\n\t// Safari)\n\tvar res = str.normalize\n\t\t? str.normalize(\"NFD\")\n\t\t: str;\n\n\t// Equally, here we check if a regex is needed or not\n\treturn res.length !== str.length\n\t\t? (both === true ? str + ' ' : '' ) + res.replace(/[\\u0300-\\u036f]/g, \"\")\n\t\t: res;\n}\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function ( src ) {\n\tif ( src.length < 2 ) {\n\t\treturn true;\n\t}\n\n\tvar sorted = src.slice().sort();\n\tvar last = sorted[0];\n\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\tif ( sorted[i] === last ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlast = sorted[i];\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function ( src )\n{\n\tif (Array.from && Set) {\n\t\treturn Array.from(new Set(src));\n\t}\n\n\tif ( _areAllUnique( src ) ) {\n\t\treturn src.slice();\n\t}\n\n\t// A faster unique method is to use object keys to identify used values,\n\t// but this doesn't work with arrays or objects, which we must also\n\t// consider. See jsperf.app/compare-array-unique-versions/4 for more\n\t// information.\n\tvar\n\t\tout = [],\n\t\tval,\n\t\ti, ien=src.length,\n\t\tj, k=0;\n\n\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\tval = src[i];\n\n\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\tif ( out[j] === val ) {\n\t\t\t\tcontinue again;\n\t\t\t}\n\t\t}\n\n\t\tout.push( val );\n\t\tk++;\n\t}\n\n\treturn out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n\tif (Array.isArray(val)) {\n\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t_flatten(out, val[i]);\n\t\t}\n\t}\n\telse {\n\t\tout.push(val);\n\t}\n\n\treturn out;\n}\n\n// Similar to jQuery's addClass, but use classList.add\nfunction _addClass(el, name) {\n\tif (name) {\n\t\tname.split(' ').forEach(function (n) {\n\t\t\tif (n) {\n\t\t\t\t// `add` does deduplication, so no need to check `contains`\n\t\t\t\tel.classList.add(n);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n\t/**\n\t * Return a string with diacritic characters decomposed\n\t * @param {*} mixed Function or string to normalize\n\t * @param {*} both Return original string and the normalized string\n\t * @returns String or undefined\n\t */\n\tdiacritics: function (mixed, both) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type !== 'function') {\n\t\t\treturn _normalize(mixed, both);\n\t\t}\n\t\t_normalize = mixed;\n\t},\n\n\t/**\n\t * Debounce a function\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tdebounce: function ( fn, timeout ) {\n\t\tvar timer;\n\n\t\treturn function () {\n\t\t\tvar that = this;\n\t\t\tvar args = arguments;\n\n\t\t\tclearTimeout(timer);\n\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tfn.apply(that, args);\n\t\t\t}, timeout || 250 );\n\t\t};\n\t},\n\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained\n\t * for the throttled function.\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tthrottle: function ( fn, freq ) {\n\t\tvar\n\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\tlast,\n\t\t\ttimer;\n\n\t\treturn function () {\n\t\t\tvar\n\t\t\t\tthat = this,\n\t\t\t\tnow  = +new Date(),\n\t\t\t\targs = arguments;\n\n\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tlast = undefined;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}, frequency );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( that, args );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *\n\t *  @param {string} val string to escape\n\t *  @returns {string} escaped string\n\t */\n\tescapeRegex: function ( val ) {\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t},\n\n\t/**\n\t * Create a function that will write to a nested object or array\n\t * @param {*} source JSON notation string\n\t * @returns Write function\n\t */\n\tset: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn DataTable.util.set( source._ );\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Nothing to do when the data source is null\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if (\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t) {\n\t\t\t// Like the get, we need to get data from a nested object\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[source] = val;\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t * @param {*} source JSON notation string\n\t * @returns Value read\n\t */\n\tget: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\tvar o = {};\n\t\t\t$.each( source, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn source( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if (\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t) {\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (data === null || data[ a[i] ] === null) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( data === undefined || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data) { // row and meta also passed, but not used\n\t\t\t\treturn data[source];\n\t\t\t};\n\t\t}\n\t},\n\n\tstripHtml: function (mixed) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type === 'function') {\n\t\t\t_stripHtml = mixed;\n\t\t\treturn;\n\t\t}\n\t\telse if (type === 'string') {\n\t\t\treturn _stripHtml(mixed);\n\t\t}\n\t\treturn mixed;\n\t},\n\n\tescapeHtml: function (mixed) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type === 'function') {\n\t\t\t_escapeHtml = mixed;\n\t\t\treturn;\n\t\t}\n\t\telse if (type === 'string' || Array.isArray(mixed)) {\n\t\t\treturn _escapeHtml(mixed);\n\t\t}\n\t\treturn mixed;\n\t},\n\n\tunique: _unique\n};\n\n\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap ( o )\n{\n\tvar\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\tmatch,\n\t\tnewKey,\n\t\tmap = {};\n\n\t$.each( o, function (key) {\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t{\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\tmap[ newKey ] = key;\n\n\t\t\tif ( match[1] === 'o' )\n\t\t\t{\n\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t}\n\t\t}\n\t} );\n\n\to._hungarianMap = map;\n}\n\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian ( src, user, force )\n{\n\tif ( ! src._hungarianMap ) {\n\t\t_fnHungarianMap( src );\n\t}\n\n\tvar hungarianKey;\n\n\t$.each( user, function (key) {\n\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t{\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t{\n\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function ( o, knew, old ) {\n\tif ( o[ knew ] !== undefined ) {\n\t\to[ old ] = o[ knew ];\n\t}\n};\n\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts ( init )\n{\n\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t_fnCompatMap( init, 'searching',     'bFilter' );\n\n\t// Boolean initialisation of x-scrolling\n\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t}\n\tif ( typeof init.scrollX === 'boolean' ) {\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t}\n\n\t// Column search objects are in an array, so it needs to be converted\n\t// element by element\n\tvar searchCols = init.aoSearchCols;\n\n\tif ( searchCols ) {\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\tif ( searchCols[i] ) {\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enable search delay if server-side processing is enabled\n\tif (init.serverSide && ! init.searchDelay) {\n\t\tinit.searchDelay = 400;\n\t}\n}\n\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols ( init )\n{\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\n\t// orderData can be given as an integer\n\tvar dataSort = init.aDataSort;\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\tinit.aDataSort = [ dataSort ];\n\t}\n}\n\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect( settings )\n{\n\t// We don't need to do this every time DataTables is constructed, the values\n\t// calculated are specific to the browser and OS configuration which we\n\t// don't expect to change between initialisations\n\tif ( ! DataTable.__browser ) {\n\t\tvar browser = {};\n\t\tDataTable.__browser = browser;\n\n\t\t// Scrolling feature / quirks detection\n\t\tvar n = $('<div/>')\n\t\t\t.css( {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: -1 * window.pageXOffset, // allow for scrolling\n\t\t\t\theight: 1,\n\t\t\t\twidth: 1,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} )\n\t\t\t.append(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.appendTo( 'body' );\n\n\t\tvar outer = n.children();\n\t\tvar inner = outer.children();\n\n\t\t// Get scrollbar width\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t// scrollbar on the left, rather than the right.\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\n\t\tn.remove();\n\t}\n\n\t$.extend( settings.oBrowser, DataTable.__browser );\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn( oSettings )\n{\n\t// Add column to aoColumns array\n\tvar oDefaults = DataTable.defaults.column;\n\tvar iCol = oSettings.aoColumns.length;\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\tidx: iCol,\n\t\tsearchFixed: {},\n\t\tcolEl: $('<col>').attr('data-dt-column', iCol)\n\t} );\n\toSettings.aoColumns.push( oCol );\n\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t// passed into extend can be undefined. This allows the user to give a default\n\t// with only some of the parameters defined, and also not give a default\n\tvar searchCols = oSettings.aoPreSearchCols;\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n}\n\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\n{\n\tvar oCol = oSettings.aoColumns[ iCol ];\n\n\t/* User specified column options */\n\tif ( oOptions !== undefined && oOptions !== null )\n\t{\n\t\t// Backwards compatibility\n\t\t_fnCompatCols( oOptions );\n\n\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\n\t\t/* Backwards compatibility for mDataProp */\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t{\n\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t}\n\n\t\tif ( oOptions.sType )\n\t\t{\n\t\t\toCol._sManualType = oOptions.sType;\n\t\t}\n\t\n\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t// the ability to use a valid name for the camel case input\n\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t{\n\t\t\toOptions.sClass = oOptions.className;\n\t\t}\n\n\t\tvar origClass = oCol.sClass;\n\n\t\t$.extend( oCol, oOptions );\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\n\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t// overwriting it in the extend above\n\t\tif (origClass !== oCol.sClass) {\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t}\n\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t * priority if defined\n\t\t */\n\t\tif ( oOptions.iDataSort !== undefined )\n\t\t{\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t}\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t}\n\n\t/* Cache the data get and set functions for speed */\n\tvar mDataSrc = oCol.mData;\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\n\t// The `render` option can be given as an array to access the helper rendering methods.\n\t// The first element is the rendering method to use, the rest are the parameters to pass\n\tif ( oCol.mRender && Array.isArray( oCol.mRender ) ) {\n\t\tvar copy = oCol.mRender.slice();\n\t\tvar name = copy.shift();\n\n\t\toCol.mRender = DataTable.render[name].apply(window, copy);\n\t}\n\n\toCol._render = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\n\tvar attrTest = function( src ) {\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t};\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t);\n\toCol._setter = null;\n\n\toCol.fnGetData = function (rowData, type, meta) {\n\t\tvar innerData = mData( rowData, type, undefined, meta );\n\n\t\treturn oCol._render && type ?\n\t\t\toCol._render( innerData, type, rowData, meta ) :\n\t\t\tinnerData;\n\t};\n\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t};\n\n\t// Indicate if DataTables should read DOM data as an object or array\n\t// Used in _fnGetRowElements\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\n\t\toSettings._rowReadObject = true;\n\t}\n\n\t/* Feature sorting overrides column specific when off */\n\tif ( !oSettings.oFeatures.bSort )\n\t{\n\t\toCol.bSortable = false;\n\t}\n}\n\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing ( settings )\n{\n\t_fnCalculateColumnWidths( settings );\n\t_fnColumnSizes( settings );\n\n\tvar scroll = settings.oScroll;\n\tif ( scroll.sY !== '' || scroll.sX !== '') {\n\t\t_fnScrollDraw( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n}\n\n/**\n * Apply column sizes\n *\n * @param {*} settings DataTables settings object\n */\nfunction _fnColumnSizes ( settings )\n{\n\tvar cols = settings.aoColumns;\n\n\tfor (var i=0 ; i<cols.length ; i++) {\n\t\tvar width = _fnColumnsSumWidth(settings, [i], false, false);\n\n\t\tcols[i].colEl.css('width', width);\n\t}\n}\n\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\n\treturn typeof aiVis[iMatch] === 'number' ?\n\t\taiVis[iMatch] :\n\t\tnull;\n}\n\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\tvar iPos = aiVis.indexOf(iMatch);\n\n\treturn iPos !== -1 ? iPos : null;\n}\n\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns( settings )\n{\n\tvar layout = settings.aoHeader;\n\tvar columns = settings.aoColumns;\n\tvar vis = 0;\n\n\tif ( layout.length ) {\n\t\tfor ( var i=0, ien=layout[0].length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vis;\n}\n\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns( oSettings, sParam )\n{\n\tvar a = [];\n\n\toSettings.aoColumns.map( function(val, i) {\n\t\tif ( val[sParam] ) {\n\t\t\ta.push( i );\n\t\t}\n\t} );\n\n\treturn a;\n}\n\n/**\n * Allow the result from a type detection function to be `true` while\n * translating that into a string. Old type detection functions will\n * return the type name if it passes. An obect store would be better,\n * but not backwards compatible.\n *\n * @param {*} typeDetect Object or function for type detection\n * @param {*} res Result from the type detection function\n * @returns Type name or false\n */\nfunction _typeResult (typeDetect, res) {\n\treturn res === true\n\t\t? typeDetect._name\n\t\t: res;\n}\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar types = DataTable.ext.type.detect;\n\tvar i, ien, j, jen, k, ken;\n\tvar col, detectedType, cache;\n\n\t// For each column, spin over the data type detection functions, seeing if one matches\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcol = columns[i];\n\t\tcache = [];\n\n\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\tcol.sType = col._sManualType;\n\t\t}\n\t\telse if ( ! col.sType ) {\n\t\t\t// With SSP type detection can be unreliable and error prone, so we provide a way\n\t\t\t// to turn it off.\n\t\t\tif (! settings.typeDetect) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\tvar typeDetect = types[j];\n\n\t\t\t\t// There can be either one, or three type detection functions\n\t\t\t\tvar oneOf = typeDetect.oneOf;\n\t\t\t\tvar allOf = typeDetect.allOf || typeDetect;\n\t\t\t\tvar init = typeDetect.init;\n\t\t\t\tvar one = false;\n\n\t\t\t\tdetectedType = null;\n\n\t\t\t\t// Fast detect based on column assignment\n\t\t\t\tif (init) {\n\t\t\t\t\tdetectedType = _typeResult(typeDetect, init(settings, col, i));\n\n\t\t\t\t\tif (detectedType) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\tif (! data[k]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only one data point in the column needs to match this function\n\t\t\t\t\tif (oneOf && ! one) {\n\t\t\t\t\t\tone = _typeResult(typeDetect, oneOf( cache[k], settings ));\n\t\t\t\t\t}\n\n\t\t\t\t\t// All data points need to match this function\n\t\t\t\t\tdetectedType = _typeResult(typeDetect, allOf( cache[k], settings ));\n\n\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t// types\n\t\t\t\t\tif ( ! detectedType && j !== types.length-3 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t// must not be empty\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t// type\n\t\t\t\tif ( (oneOf && one && detectedType) || (!oneOf && detectedType) ) {\n\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fall back - if no type was detected, always use string\n\t\t\tif ( ! col.sType ) {\n\t\t\t\tcol.sType = 'string';\n\t\t\t}\n\t\t}\n\n\t\t// Set class names for header / footer for auto type classes\n\t\tvar autoClass = _ext.type.className[col.sType];\n\n\t\tif (autoClass) {\n\t\t\t_columnAutoClass(settings.aoHeader, i, autoClass);\n\t\t\t_columnAutoClass(settings.aoFooter, i, autoClass);\n\t\t}\n\n\t\tvar renderer = _ext.type.render[col.sType];\n\n\t\t// This can only happen once! There is no way to remove\n\t\t// a renderer. After the first time the renderer has\n\t\t// already been set so createTr will run the renderer itself.\n\t\tif (renderer && ! col._render) {\n\t\t\tcol._render = DataTable.util.get(renderer);\n\n\t\t\t_columnAutoRender(settings, i);\n\t\t}\n\t}\n}\n\n/**\n * Apply an auto detected renderer to data which doesn't yet have\n * a renderer\n */\nfunction _columnAutoRender(settings, colIdx) {\n\tvar data = settings.aoData;\n\n\tfor (var i=0 ; i<data.length ; i++) {\n\t\tif (data[i].nTr) {\n\t\t\t// We have to update the display here since there is no\n\t\t\t// invalidation check for the data\n\t\t\tvar display = _fnGetCellData( settings, i, colIdx, 'display' );\n\n\t\t\tdata[i].displayData[colIdx] = display;\n\t\t\t_fnWriteCell(data[i].anCells[colIdx], display);\n\n\t\t\t// No need to update sort / filter data since it has\n\t\t\t// been invalidated and will be re-read with the\n\t\t\t// renderer now applied\n\t\t}\n\t}\n}\n\n/**\n * Apply a class name to a column's header cells\n */\nfunction _columnAutoClass(container, colIdx, className) {\n\tcontainer.forEach(function (row) {\n\t\tif (row[colIdx] && row[colIdx].unique) {\n\t\t\t_addClass(row[colIdx].cell, className);\n\t\t}\n\t});\n}\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {array} headerLayout Layout for header as it was loaded\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, headerLayout, fn )\n{\n\tvar i, iLen, j, jLen, k, kLen, def;\n\tvar columns = oSettings.aoColumns;\n\n\tif ( aoCols ) {\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\tif (aoCols[i] && aoCols[i].name) {\n\t\t\t\tcolumns[i].sName = aoCols[i].name;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Column definitions with aTargets\n\tif ( aoColDefs )\n\t{\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\tdef = aoColDefs[i];\n\n\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t? def.target\n\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t? def.targets\n\t\t\t\t\t: def.aTargets;\n\n\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t{\n\t\t\t\taTargets = [ aTargets ];\n\t\t\t}\n\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tvar target = aTargets[j];\n\n\t\t\t\tif ( typeof target === 'number' && target >= 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\twhile( columns.length <= target )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\tfn( target, def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof target === 'number' && target < 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\tfn( columns.length+target, def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof target === 'string' )\n\t\t\t\t{\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ ) {\n\t\t\t\t\t\tif (target === '_all') {\n\t\t\t\t\t\t\t// Apply to all columns\n\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.indexOf(':name') !== -1) {\n\t\t\t\t\t\t\t// Column selector\n\t\t\t\t\t\t\tif (columns[k].sName === target.replace(':name', '')) {\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Cell selector\n\t\t\t\t\t\t\theaderLayout.forEach(function (row) {\n\t\t\t\t\t\t\t\tif (row[k]) {\n\t\t\t\t\t\t\t\t\tvar cell = $(row[k].cell);\n\n\t\t\t\t\t\t\t\t\t// Legacy support. Note that it means that we don't support\n\t\t\t\t\t\t\t\t\t// an element name selector only, since they are treated as\n\t\t\t\t\t\t\t\t\t// class names for 1.x compat.\n\t\t\t\t\t\t\t\t\tif (target.match(/^[a-z][\\w-]*$/i)) {\n\t\t\t\t\t\t\t\t\t\ttarget = '.' + target;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (cell.is( target )) {\n\t\t\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Statically defined columns array\n\tif ( aoCols ) {\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\tfn( i, aoCols[i] );\n\t\t}\n\t}\n}\n\n\n/**\n * Get the width for a given set of columns\n *\n * @param {*} settings DataTables settings object\n * @param {*} targets Columns - comma separated string or array of numbers\n * @param {*} original Use the original width (true) or calculated (false)\n * @param {*} incVisible Include visible columns (true) or not (false)\n * @returns Combined CSS value\n */\nfunction _fnColumnsSumWidth( settings, targets, original, incVisible ) {\n\tif ( ! Array.isArray( targets ) ) {\n\t\ttargets = _fnColumnsFromHeader( targets );\n\t}\n\n\tvar sum = 0;\n\tvar unit;\n\tvar columns = settings.aoColumns;\n\t\n\tfor ( var i=0, ien=targets.length ; i<ien ; i++ ) {\n\t\tvar column = columns[ targets[i] ];\n\t\tvar definedWidth = original ?\n\t\t\tcolumn.sWidthOrig :\n\t\t\tcolumn.sWidth;\n\n\t\tif ( ! incVisible && column.bVisible === false ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( definedWidth === null || definedWidth === undefined ) {\n\t\t\treturn null; // can't determine a defined width - browser defined\n\t\t}\n\t\telse if ( typeof definedWidth === 'number' ) {\n\t\t\tunit = 'px';\n\t\t\tsum += definedWidth;\n\t\t}\n\t\telse {\n\t\t\tvar matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n\n\t\t\tif ( matched ) {\n\t\t\t\tsum += matched[1] * 1;\n\t\t\t\tunit = matched.length === 3 ?\n\t\t\t\t\tmatched[2] :\n\t\t\t\t\t'px';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn sum + unit;\n}\n\nfunction _fnColumnsFromHeader( cell )\n{\n\tvar attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\n\n\tif ( ! attr ) {\n\t\treturn [];\n\t}\n\n\treturn attr.split(',').map( function (val) {\n\t\treturn val * 1;\n\t} );\n}\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} settings dataTables settings object\n *  @param {array} data data array to be added\n *  @param {node} [tr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData ( settings, dataIn, tr, tds )\n{\n\t/* Create the object for storing information about this new row */\n\tvar rowIdx = settings.aoData.length;\n\tvar rowModel = $.extend( true, {}, DataTable.models.oRow, {\n\t\tsrc: tr ? 'dom' : 'data',\n\t\tidx: rowIdx\n\t} );\n\n\trowModel._aData = dataIn;\n\tsettings.aoData.push( rowModel );\n\n\tvar columns = settings.aoColumns;\n\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tcolumns[i].sType = null;\n\t}\n\n\t/* Add to the display array */\n\tsettings.aiDisplayMaster.push( rowIdx );\n\n\tvar id = settings.rowIdFn( dataIn );\n\tif ( id !== undefined ) {\n\t\tsettings.aIds[ id ] = rowModel;\n\t}\n\n\t/* Create the DOM information, or register it if already present */\n\tif ( tr || ! settings.oFeatures.bDeferRender )\n\t{\n\t\t_fnCreateTr( settings, rowIdx, tr, tds );\n\t}\n\n\treturn rowIdx;\n}\n\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr( settings, trs )\n{\n\tvar row;\n\n\t// Allow an individual node to be passed in\n\tif ( ! (trs instanceof $) ) {\n\t\ttrs = $(trs);\n\t}\n\n\treturn trs.map( function (i, el) {\n\t\trow = _fnGetRowElements( settings, el );\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t} );\n}\n\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n{\n\tif (type === 'search') {\n\t\ttype = 'filter';\n\t}\n\telse if (type === 'order') {\n\t\ttype = 'sort';\n\t}\n\n\tvar row = settings.aoData[rowIdx];\n\n\tif (! row) {\n\t\treturn undefined;\n\t}\n\n\tvar draw           = settings.iDraw;\n\tvar col            = settings.aoColumns[colIdx];\n\tvar rowData        = row._aData;\n\tvar defaultContent = col.sDefaultContent;\n\tvar cellData       = col.fnGetData( rowData, type, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t} );\n\n\t// Allow for a node being returned for non-display types\n\tif (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\n\t\tcellData = cellData.innerHTML;\n\t}\n\n\tif ( cellData === undefined ) {\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\tsettings.iDrawError = draw;\n\t\t}\n\t\treturn defaultContent;\n\t}\n\n\t// When the data source is null and a specific data type is requested (i.e.\n\t// not the original data), we can use default column data\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\tcellData = defaultContent;\n\t}\n\telse if ( typeof cellData === 'function' ) {\n\t\t// If the data source is a function, then we run it and use the return,\n\t\t// executing in the scope of the data object (for instances)\n\t\treturn cellData.call( rowData );\n\t}\n\n\tif ( cellData === null && type === 'display' ) {\n\t\treturn '';\n\t}\n\n\tif ( type === 'filter' ) {\n\t\tvar fomatters = DataTable.ext.type.search;\n\n\t\tif ( fomatters[ col.sType ] ) {\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t}\n\t}\n\n\treturn cellData;\n}\n\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n{\n\tvar col     = settings.aoColumns[colIdx];\n\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\tcol.fnSetData( rowData, val, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t}  );\n}\n\n/**\n * Write a value to a cell\n * @param {*} td Cell\n * @param {*} val Value\n */\nfunction _fnWriteCell(td, val)\n{\n\tif (val && typeof val === 'object' && val.nodeName) {\n\t\t$(td)\n\t\t\t.empty()\n\t\t\t.append(val);\n\t}\n\telse {\n\t\ttd.innerHTML = val;\n\t}\n}\n\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation( str )\n{\n\tvar parts = str.match(/(\\\\.|[^.])+/g) || [''];\n\n\treturn parts.map( function ( s ) {\n\t\treturn s.replace(/\\\\\\./g, '.');\n\t} );\n}\n\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster ( settings )\n{\n\treturn _pluck( settings.aoData, '_aData' );\n}\n\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable( settings )\n{\n\tsettings.aoData.length = 0;\n\tsettings.aiDisplayMaster.length = 0;\n\tsettings.aiDisplay.length = 0;\n\tsettings.aIds = {};\n}\n\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n{\n\tvar row = settings.aoData[ rowIdx ];\n\tvar i, ien;\n\n\t// Remove the cached data for the row\n\trow._aSortData = null;\n\trow._aFilterData = null;\n\trow.displayData = null;\n\n\t// Are we reading last data from DOM or the data object?\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t// Read the data from the DOM\n\t\trow._aData = _fnGetRowElements(\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t)\n\t\t\t.data;\n\t}\n\telse {\n\t\t// Reading from data object, update the DOM\n\t\tvar cells = row.anCells;\n\t\tvar display = _fnGetRowDisplay(settings, rowIdx);\n\n\t\tif ( cells ) {\n\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t_fnWriteCell(cells[colIdx], display[colIdx]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnWriteCell(cells[i], display[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Column specific invalidation\n\tvar cols = settings.aoColumns;\n\tif ( colIdx !== undefined ) {\n\t\t// Type - the data might have changed\n\t\tcols[ colIdx ].sType = null;\n\n\t\t// Max length string. Its a fairly cheep recalculation, so not worth\n\t\t// something more complicated\n\t\tcols[ colIdx ].maxLenString = null;\n\t}\n\telse {\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\tcols[i].sType = null;\n\t\t\tcols[i].maxLenString = null;\n\t\t}\n\n\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t_fnRowAttributes( settings, row );\n\t}\n}\n\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements( settings, row, colIdx, d )\n{\n\tvar\n\t\ttds = [],\n\t\ttd = row.firstChild,\n\t\tname, col, i=0, contents,\n\t\tcolumns = settings.aoColumns,\n\t\tobjectRead = settings._rowReadObject;\n\n\t// Allow the data object to be passed in, or construct\n\td = d !== undefined ?\n\t\td :\n\t\tobjectRead ?\n\t\t\t{} :\n\t\t\t[];\n\n\tvar attr = function ( str, td  ) {\n\t\tif ( typeof str === 'string' ) {\n\t\t\tvar idx = str.indexOf('@');\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t}\n\t\t}\n\t};\n\n\t// Read data from a cell and store into the data object\n\tvar cellProcess = function ( cell ) {\n\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\tcol = columns[i];\n\t\t\tcontents = (cell.innerHTML).trim();\n\n\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\tsetter( d, contents );\n\n\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t// be read to either an object or an array.\n\t\t\t\tif ( objectRead ) {\n\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t}\n\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td[i] = contents;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t};\n\n\tif ( td ) {\n\t\t// `tr` element was passed in\n\t\twhile ( td ) {\n\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\tcellProcess( td );\n\t\t\t\ttds.push( td );\n\t\t\t}\n\n\t\t\ttd = td.nextSibling;\n\t\t}\n\t}\n\telse {\n\t\t// Existing row object passed in\n\t\ttds = row.anCells;\n\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\tcellProcess( tds[j] );\n\t\t}\n\t}\n\n\t// Read the ID from the DOM if present\n\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\tif ( rowNode ) {\n\t\tvar id = rowNode.getAttribute( 'id' );\n\n\t\tif ( id ) {\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t}\n\t}\n\n\treturn {\n\t\tdata: d,\n\t\tcells: tds\n\t};\n}\n\n/**\n * Render and cache a row's display data for the columns, if required\n * @returns \n */\nfunction _fnGetRowDisplay (settings, rowIdx) {\n\tvar rowModal = settings.aoData[rowIdx];\n\tvar columns = settings.aoColumns;\n\n\tif (! rowModal.displayData) {\n\t\t// Need to render and cache\n\t\trowModal.displayData = [];\n\t\n\t\tfor ( var colIdx=0, len=columns.length ; colIdx<len ; colIdx++ ) {\n\t\t\trowModal.displayData.push(\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'display' )\n\t\t\t);\n\t\t}\n\t}\n\n\treturn rowModal.displayData;\n}\n\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n{\n\tvar\n\t\trow = oSettings.aoData[iRow],\n\t\trowData = row._aData,\n\t\tcells = [],\n\t\tnTr, nTd, oCol,\n\t\ti, iLen, create,\n\t\ttrClass = oSettings.oClasses.tbody.row;\n\n\tif ( row.nTr === null )\n\t{\n\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\trow.nTr = nTr;\n\t\trow.anCells = cells;\n\n\t\t_addClass(nTr, trClass);\n\n\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t * to the aoData array for fast look up\n\t\t */\n\t\tnTr._DT_RowIndex = iRow;\n\n\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t_fnRowAttributes( oSettings, row );\n\n\t\t/* Process each column */\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[i];\n\t\t\tcreate = nTrIn && anTds[i] ? false : true;\n\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\n\t\t\tif (! nTd) {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\n\t\t\tnTd._DT_CellIndex = {\n\t\t\t\trow: iRow,\n\t\t\t\tcolumn: i\n\t\t\t};\n\t\t\t\n\t\t\tcells.push( nTd );\n\t\t\t\n\t\t\tvar display = _fnGetRowDisplay(oSettings, iRow);\n\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\tif (\n\t\t\t\tcreate ||\n\t\t\t\t(\n\t\t\t\t\t(oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t(!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t_fnWriteCell(nTd, display[i]);\n\t\t\t}\n\n\t\t\t// column class\n\t\t\t_addClass(nTd, oCol.sClass);\n\n\t\t\t// Visibility - add or remove as required\n\t\t\tif ( oCol.bVisible && create )\n\t\t\t{\n\t\t\t\tnTr.appendChild( nTd );\n\t\t\t}\n\t\t\telse if ( ! oCol.bVisible && ! create )\n\t\t\t{\n\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t}\n\n\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t{\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells] );\n\t}\n\telse {\n\t\t_addClass(row.nTr, trClass);\n\t}\n}\n\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes( settings, row )\n{\n\tvar tr = row.nTr;\n\tvar data = row._aData;\n\n\tif ( tr ) {\n\t\tvar id = settings.rowIdFn( data );\n\n\t\tif ( id ) {\n\t\t\ttr.id = id;\n\t\t}\n\n\t\tif ( data.DT_RowClass ) {\n\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\ta;\n\n\t\t\t$(tr)\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t.addClass( data.DT_RowClass );\n\t\t}\n\n\t\tif ( data.DT_RowAttr ) {\n\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t}\n\n\t\tif ( data.DT_RowData ) {\n\t\t\t$(tr).data( data.DT_RowData );\n\t\t}\n\t}\n}\n\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead( settings, side )\n{\n\tvar classes = settings.oClasses;\n\tvar columns = settings.aoColumns;\n\tvar i, ien, row;\n\tvar target = side === 'header'\n\t\t? settings.nTHead\n\t\t: settings.nTFoot;\n\tvar titleProp = side === 'header' ? 'sTitle' : side;\n\n\t// Footer might be defined\n\tif (! target) {\n\t\treturn;\n\t}\n\n\t// If no cells yet and we have content for them, then create\n\tif (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {\n\t\trow = $('tr', target);\n\n\t\t// Add a row if needed\n\t\tif (! row.length) {\n\t\t\trow = $('<tr/>').appendTo(target)\n\t\t}\n\n\t\t// Add the number of cells needed to make up to the number of columns\n\t\tif (row.length === 1) {\n\t\t\tvar cells = $('td, th', row);\n\n\t\t\tfor ( i=cells.length, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\t$('<th/>')\n\t\t\t\t\t.html( columns[i][titleProp] || '' )\n\t\t\t\t\t.appendTo( row );\n\t\t\t}\n\t\t}\n\t}\n\n\tvar detected = _fnDetectHeader( settings, target, true );\n\n\tif (side === 'header') {\n\t\tsettings.aoHeader = detected;\n\t}\n\telse {\n\t\tsettings.aoFooter = detected;\n\t}\n\n\t// Every cell needs to be passed through the renderer\n\t$(target).children('tr').children('th, td')\n\t\t.each( function () {\n\t\t\t_fnRenderer( settings, side )(\n\t\t\t\tsettings, $(this), classes\n\t\t\t);\n\t\t} );\n}\n\n/**\n * Build a layout structure for a header or footer\n *\n * @param {*} settings DataTables settings\n * @param {*} source Source layout array\n * @param {*} incColumns What columns should be included\n * @returns Layout array\n */\nfunction _fnHeaderLayout( settings, source, incColumns )\n{\n\tvar row, column, cell;\n\tvar local = [];\n\tvar structure = [];\n\tvar columns = settings.aoColumns;\n\tvar columnCount = columns.length;\n\tvar rowspan, colspan;\n\n\tif ( ! source ) {\n\t\treturn;\n\t}\n\n\t// Default is to work on only visible columns\n\tif ( ! incColumns ) {\n\t\tincColumns = _range(columnCount)\n\t\t\t.filter(function (idx) {\n\t\t\t\treturn columns[idx].bVisible;\n\t\t\t});\n\t}\n\n\t// Make a copy of the master layout array, but with only the columns we want\n\tfor ( row=0 ; row<source.length ; row++ ) {\n\t\t// Remove any columns we haven't selected\n\t\tlocal[row] = source[row].slice().filter(function (cell, i) {\n\t\t\treturn incColumns.includes(i);\n\t\t});\n\n\t\t// Prep the structure array - it needs an element for each row\n\t\tstructure.push( [] );\n\t}\n\n\tfor ( row=0 ; row<local.length ; row++ ) {\n\t\tfor ( column=0 ; column<local[row].length ; column++ ) {\n\t\t\trowspan = 1;\n\t\t\tcolspan = 1;\n\n\t\t\t// Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t// insert point. If there is, then there is nothing to do.\n\t\t\tif ( structure[row][column] === undefined ) {\n\t\t\t\tcell = local[row][column].cell;\n\n\t\t\t\t// Expand for rowspan\n\t\t\t\twhile (\n\t\t\t\t\tlocal[row+rowspan] !== undefined &&\n\t\t\t\t\tlocal[row][column].cell == local[row+rowspan][column].cell\n\t\t\t\t) {\n\t\t\t\t\tstructure[row+rowspan][column] = null;\n\t\t\t\t\trowspan++;\n\t\t\t\t}\n\n\t\t\t\t// And for colspan\n\t\t\t\twhile (\n\t\t\t\t\tlocal[row][column+colspan] !== undefined &&\n\t\t\t\t\tlocal[row][column].cell == local[row][column+colspan].cell\n\t\t\t\t) {\n\t\t\t\t\t// Which also needs to go over rows\n\t\t\t\t\tfor ( var k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\tstructure[row+k][column+colspan] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolspan++;\n\t\t\t\t}\n\n\t\t\t\tvar titleSpan = $('span.dt-column-title', cell);\n\n\t\t\t\tstructure[row][column] = {\n\t\t\t\t\tcell: cell,\n\t\t\t\t\tcolspan: colspan,\n\t\t\t\t\trowspan: rowspan,\n\t\t\t\t\ttitle: titleSpan.length\n\t\t\t\t\t\t? titleSpan.html()\n\t\t\t\t\t\t: $(cell).html()\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn structure;\n}\n\n\n/**\n * Draw the header (or footer) element based on the column visibility states.\n *\n *  @param object oSettings dataTables settings object\n *  @param array aoSource Layout array from _fnDetectHeader\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead( settings, source )\n{\n\tvar layout = _fnHeaderLayout(settings, source);\n\tvar tr, n;\n\n\tfor ( var row=0 ; row<source.length ; row++ ) {\n\t\ttr = source[row].row;\n\n\t\t// All cells are going to be replaced, so empty out the row\n\t\t// Can't use $().empty() as that kills event handlers\n\t\tif (tr) {\n\t\t\twhile( (n = tr.firstChild) ) {\n\t\t\t\ttr.removeChild( n );\n\t\t\t}\n\t\t}\n\n\t\tfor ( var column=0 ; column<layout[row].length ; column++ ) {\n\t\t\tvar point = layout[row][column];\n\n\t\t\tif (point) {\n\t\t\t\t$(point.cell)\n\t\t\t\t\t.appendTo(tr)\n\t\t\t\t\t.attr('rowspan', point.rowspan)\n\t\t\t\t\t.attr('colspan', point.colspan);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw( oSettings, ajaxComplete )\n{\n\t// Allow for state saving and a custom start position\n\t_fnStart( oSettings );\n\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\tif ( aPreDraw.indexOf(false) !== -1 )\n\t{\n\t\t_fnProcessingDisplay( oSettings, false );\n\t\treturn;\n\t}\n\n\tvar anRows = [];\n\tvar iRowCount = 0;\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar aiDisplay = oSettings.aiDisplay;\n\tvar iDisplayStart = oSettings._iDisplayStart;\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\tvar columns = oSettings.aoColumns;\n\tvar body = $(oSettings.nTBody);\n\n\toSettings.bDrawing = true;\n\n\t/* Server-side processing draw intercept */\n\tif ( oSettings.deferLoading )\n\t{\n\t\toSettings.deferLoading = false;\n\t\toSettings.iDraw++;\n\t\t_fnProcessingDisplay( oSettings, false );\n\t}\n\telse if ( !bServerSide )\n\t{\n\t\toSettings.iDraw++;\n\t}\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t{\n\t\t// Show loading message for server-side processing\n\t\tif (oSettings.iDraw === 0) {\n\t\t\tbody.empty().append(_emptyRow(oSettings));\n\t\t}\n\n\t\t_fnAjaxUpdate( oSettings );\n\t\treturn;\n\t}\n\n\tif ( aiDisplay.length !== 0 )\n\t{\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t{\n\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\tif ( aoData.nTr === null )\n\t\t\t{\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t}\n\n\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t// Add various classes as needed\n\t\t\tfor (var i=0 ; i<columns.length ; i++) {\n\t\t\t\tvar col = columns[i];\n\t\t\t\tvar td = aoData.anCells[i];\n\n\t\t\t\t_addClass(td, _ext.type.className[col.sType]); // auto class\n\t\t\t\t_addClass(td, oSettings.oClasses.tbody.cell); // all cells\n\t\t\t}\n\n\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t// useful?\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\n\t\t\tanRows.push( nRow );\n\t\t\tiRowCount++;\n\t\t}\n\t}\n\telse\n\t{\n\t\tanRows[ 0 ] = _emptyRow(oSettings);\n\t}\n\n\t/* Header and footer callbacks */\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t// replaceChildren is faster, but only became widespread in 2020,\n\t// so a fall back in jQuery is provided for older browsers.\n\tif (body[0].replaceChildren) {\n\t\tbody[0].replaceChildren.apply(body[0], anRows);\n\t}\n\telse {\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t}\n\n\t// Empty table needs a specific class\n\t$(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\n\n\t/* Call all required callback functions for the end of a draw */\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings], true );\n\n\t/* Draw is complete, sorting and filtering must be as well */\n\toSettings.bSorted = false;\n\toSettings.bFiltered = false;\n\toSettings.bDrawing = false;\n}\n\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw( settings, holdPosition, recompute )\n{\n\tvar\n\t\tfeatures = settings.oFeatures,\n\t\tsort     = features.bSort,\n\t\tfilter   = features.bFilter;\n\n\tif (recompute === undefined || recompute === true) {\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t_fnColumnTypes( settings );\n\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t}\n\n\tif ( holdPosition !== true ) {\n\t\tsettings._iDisplayStart = 0;\n\t}\n\n\t// Let any modules know about the draw hold position state (used by\n\t// scrolling internally)\n\tsettings._drawHold = holdPosition;\n\n\t_fnDraw( settings );\n\n\tsettings._drawHold = false;\n}\n\n\n/*\n * Table is empty - create a row with an empty message in it\n */\nfunction _emptyRow ( settings ) {\n\tvar oLang = settings.oLanguage;\n\tvar zero = oLang.sZeroRecords;\n\tvar dataSrc = _fnDataSource( settings );\n\n\tif (\n\t\t(settings.iDraw < 1 && dataSrc === 'ssp') ||\n\t\t(settings.iDraw <= 1 && dataSrc === 'ajax')\n\t) {\n\t\tzero = oLang.sLoadingRecords;\n\t}\n\telse if ( oLang.sEmptyTable && settings.fnRecordsTotal() === 0 )\n\t{\n\t\tzero = oLang.sEmptyTable;\n\t}\n\n\treturn $( '<tr/>' )\n\t\t.append( $('<td />', {\n\t\t\t'colSpan': _fnVisbleColumns( settings ),\n\t\t\t'class':   settings.oClasses.empty.row\n\t\t} ).html( zero ) )[0];\n}\n\n\n/**\n * Expand the layout items into an object for the rendering function\n */\nfunction _layoutItems (row, align, items) {\n\tif ( Array.isArray(items)) {\n\t\tfor (var i=0 ; i<items.length ; i++) {\n\t\t\t_layoutItems(row, align, items[i]);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tvar rowCell = row[align];\n\n\t// If it is an object, then there can be multiple features contained in it\n\tif ( $.isPlainObject( items ) ) {\n\t\t// A feature plugin cannot be named \"features\" due to this check\n\t\tif (items.features) {\n\t\t\tif (items.rowId) {\n\t\t\t\trow.id = items.rowId;\n\t\t\t}\n\t\t\tif (items.rowClass) {\n\t\t\t\trow.className = items.rowClass;\n\t\t\t}\n\n\t\t\trowCell.id = items.id;\n\t\t\trowCell.className = items.className;\n\n\t\t\t_layoutItems(row, align, items.features);\n\t\t}\n\t\telse {\n\t\t\tObject.keys(items).map(function (key) {\n\t\t\t\trowCell.contents.push( {\n\t\t\t\t\tfeature: key,\n\t\t\t\t\topts: items[key]\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\telse {\n\t\trowCell.contents.push(items);\n\t}\n}\n\n/**\n * Find, or create a layout row\n */\nfunction _layoutGetRow(rows, rowNum, align) {\n\tvar row;\n\n\t// Find existing rows\n\tfor (var i=0; i<rows.length; i++) {\n\t\trow = rows[i];\n\n\t\tif (row.rowNum === rowNum) {\n\t\t\t// full is on its own, but start and end share a row\n\t\t\tif (\n\t\t\t\t(align === 'full' && row.full) ||\n\t\t\t\t((align === 'start' || align === 'end') && (row.start || row.end))\n\t\t\t) {\n\t\t\t\tif (! row[align]) {\n\t\t\t\t\trow[align] = {\n\t\t\t\t\t\tcontents: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn row;\n\t\t\t}\n\t\t}\n\t}\n\n\t// If we get this far, then there was no match, create a new row\n\trow = {\n\t\trowNum: rowNum\t\n\t};\n\n\trow[align] = {\n\t\tcontents: []\n\t};\n\n\trows.push(row);\n\n\treturn row;\n}\n\n/**\n * Convert a `layout` object given by a user to the object structure needed\n * for the renderer. This is done twice, once for above and once for below\n * the table. Ordering must also be considered.\n *\n * @param {*} settings DataTables settings object\n * @param {*} layout Layout object to convert\n * @param {string} side `top` or `bottom`\n * @returns Converted array structure - one item for each row.\n */\nfunction _layoutArray ( settings, layout, side ) {\n\tvar rows = [];\n\t\n\t// Split out into an array\n\t$.each( layout, function ( pos, items ) {\n\t\tif (items === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar parts = pos.match(/^([a-z]+)([0-9]*)([A-Za-z]*)$/);\n\t\tvar rowNum = parts[2]\n\t\t\t? parts[2] * 1\n\t\t\t: 0;\n\t\tvar align = parts[3]\n\t\t\t? parts[3].toLowerCase()\n\t\t\t: 'full';\n\n\t\t// Filter out the side we aren't interested in\n\t\tif (parts[1] !== side) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get or create the row we should attach to\n\t\tvar row = _layoutGetRow(rows, rowNum, align);\n\n\t\t_layoutItems(row, align, items);\n\t});\n\n\t// Order by item identifier\n\trows.sort( function ( a, b ) {\n\t\tvar order1 = a.rowNum;\n\t\tvar order2 = b.rowNum;\n\n\t\t// If both in the same row, then the row with `full` comes first\n\t\tif (order1 === order2) {\n\t\t\tvar ret = a.full && ! b.full ? -1 : 1;\n\n\t\t\treturn side === 'bottom'\n\t\t\t\t? ret * -1\n\t\t\t\t: ret;\n\t\t}\n\n\t\treturn order2 - order1;\n\t} );\n\n\t// Invert for below the table\n\tif ( side === 'bottom' ) {\n\t\trows.reverse();\n\t}\n\n\tfor (var row = 0; row<rows.length; row++) {\n\t\tdelete rows[row].rowNum;\n\n\t\t_layoutResolve(settings, rows[row]);\n\t}\n\n\treturn rows;\n}\n\n\n/**\n * Convert the contents of a row's layout object to nodes that can be inserted\n * into the document by a renderer. Execute functions, look up plug-ins, etc.\n *\n * @param {*} settings DataTables settings object\n * @param {*} row Layout object for this row\n */\nfunction _layoutResolve( settings, row ) {\n\tvar getFeature = function (feature, opts) {\n\t\tif ( ! _ext.features[ feature ] ) {\n\t\t\t_fnLog( settings, 0, 'Unknown feature: '+ feature );\n\t\t}\n\n\t\treturn _ext.features[ feature ].apply( this, [settings, opts] );\n\t};\n\n\tvar resolve = function ( item ) {\n\t\tif (! row[ item ]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar line = row[ item ].contents;\n\n\t\tfor ( var i=0, ien=line.length ; i<ien ; i++ ) {\n\t\t\tif ( ! line[i] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if ( typeof line[i] === 'string' ) {\n\t\t\t\tline[i] = getFeature( line[i], null );\n\t\t\t}\n\t\t\telse if ( $.isPlainObject(line[i]) ) {\n\t\t\t\t// If it's an object, it just has feature and opts properties from\n\t\t\t\t// the transform in _layoutArray\n\t\t\t\tline[i] = getFeature(line[i].feature, line[i].opts);\n\t\t\t}\n\t\t\telse if ( typeof line[i].node === 'function' ) {\n\t\t\t\tline[i] = line[i].node( settings );\n\t\t\t}\n\t\t\telse if ( typeof line[i] === 'function' ) {\n\t\t\t\tvar inst = line[i]( settings );\n\n\t\t\t\tline[i] = typeof inst.node === 'function' ?\n\t\t\t\t\tinst.node() :\n\t\t\t\t\tinst;\n\t\t\t}\n\t\t}\n\t};\n\n\tresolve('start');\n\tresolve('end');\n\tresolve('full');\n}\n\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} settings DataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml ( settings )\n{\n\tvar classes = settings.oClasses;\n\tvar table = $(settings.nTable);\n\n\t// Wrapper div around everything DataTables controls\n\tvar insert = $('<div/>')\n\t\t.attr({\n\t\t\tid:      settings.sTableId+'_wrapper',\n\t\t\t'class': classes.container\n\t\t})\n\t\t.insertBefore(table);\n\n\tsettings.nTableWrapper = insert[0];\n\n\tif (settings.sDom) {\n\t\t// Legacy\n\t\t_fnLayoutDom(settings, settings.sDom, insert);\n\t}\n\telse {\n\t\tvar top = _layoutArray( settings, settings.layout, 'top' );\n\t\tvar bottom = _layoutArray( settings, settings.layout, 'bottom' );\n\t\tvar renderer = _fnRenderer( settings, 'layout' );\n\t\n\t\t// Everything above - the renderer will actually insert the contents into the document\n\t\ttop.forEach(function (item) {\n\t\t\trenderer( settings, insert, item );\n\t\t});\n\n\t\t// The table - always the center of attention\n\t\trenderer( settings, insert, {\n\t\t\tfull: {\n\t\t\t\ttable: true,\n\t\t\t\tcontents: [ _fnFeatureHtmlTable(settings) ]\n\t\t\t}\n\t\t} );\n\n\t\t// Everything below\n\t\tbottom.forEach(function (item) {\n\t\t\trenderer( settings, insert, item );\n\t\t});\n\t}\n\n\t// Processing floats on top, so it isn't an inserted feature\n\t_processingHtml( settings );\n}\n\n/**\n * Draw the table with the legacy DOM property\n * @param {*} settings DT settings object\n * @param {*} dom DOM string\n * @param {*} insert Insert point\n */\nfunction _fnLayoutDom( settings, dom, insert )\n{\n\tvar parts = dom.match(/(\".*?\")|('.*?')|./g);\n\tvar featureNode, option, newNode, next, attr;\n\n\tfor ( var i=0 ; i<parts.length ; i++ ) {\n\t\tfeatureNode = null;\n\t\toption = parts[i];\n\n\t\tif ( option == '<' ) {\n\t\t\t// New container div\n\t\t\tnewNode = $('<div/>');\n\n\t\t\t// Check to see if we should append an id and/or a class name to the container\n\t\t\tnext = parts[i+1];\n\n\t\t\tif ( next[0] == \"'\" || next[0] == '\"' ) {\n\t\t\t\tattr = next.replace(/['\"]/g, '');\n\n\t\t\t\tvar id = '', className;\n\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t */\n\t\t\t\tif ( attr.indexOf('.') != -1 ) {\n\t\t\t\t\tvar split = attr.split('.');\n\n\t\t\t\t\tid = split[0];\n\t\t\t\t\tclassName = split[1];\n\t\t\t\t}\n\t\t\t\telse if ( attr[0] == \"#\" ) {\n\t\t\t\t\tid = attr;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tclassName = attr;\n\t\t\t\t}\n\n\t\t\t\tnewNode\n\t\t\t\t\t.attr('id', id.substring(1))\n\t\t\t\t\t.addClass(className);\n\n\t\t\t\ti++; // Move along the position array\n\t\t\t}\n\n\t\t\tinsert.append( newNode );\n\t\t\tinsert = newNode;\n\t\t}\n\t\telse if ( option == '>' ) {\n\t\t\t// End container div\n\t\t\tinsert = insert.parent();\n\t\t}\n\t\telse if ( option == 't' ) {\n\t\t\t// Table\n\t\t\tfeatureNode = _fnFeatureHtmlTable( settings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDataTable.ext.feature.forEach(function(feature) {\n\t\t\t\tif ( option == feature.cFeature ) {\n\t\t\t\t\tfeatureNode = feature.fnInit( settings );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Add to the display\n\t\tif ( featureNode ) {\n\t\t\tinsert.append( featureNode );\n\t\t}\n\t}\n}\n\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param {node} thead The header/footer element for the table\n *  @returns {array} Calculated layout array\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader ( settings, thead, write )\n{\n\tvar columns = settings.aoColumns;\n\tvar rows = $(thead).children('tr');\n\tvar row, cell;\n\tvar i, k, l, iLen, shifted, column, colspan, rowspan;\n\tvar isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\n\tvar layout = [];\n\tvar unique;\n\tvar shift = function ( a, i, j ) {\n\t\tvar k = a[i];\n\t\twhile ( k[j] ) {\n\t\t\tj++;\n\t\t}\n\t\treturn j;\n\t};\n\n\t// We know how many rows there are in the layout - so prep it\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\tlayout.push( [] );\n\t}\n\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\trow = rows[i];\n\t\tcolumn = 0;\n\n\t\t// For every cell in the row..\n\t\tcell = row.firstChild;\n\t\twhile ( cell ) {\n\t\t\tif (\n\t\t\t\tcell.nodeName.toUpperCase() == 'TD' ||\n\t\t\t\tcell.nodeName.toUpperCase() == 'TH'\n\t\t\t) {\n\t\t\t\tvar cols = [];\n\n\t\t\t\t// Get the col and rowspan attributes from the DOM and sanitise them\n\t\t\t\tcolspan = cell.getAttribute('colspan') * 1;\n\t\t\t\trowspan = cell.getAttribute('rowspan') * 1;\n\t\t\t\tcolspan = (!colspan || colspan===0 || colspan===1) ? 1 : colspan;\n\t\t\t\trowspan = (!rowspan || rowspan===0 || rowspan===1) ? 1 : rowspan;\n\n\t\t\t\t// There might be colspan cells already in this row, so shift our target\n\t\t\t\t// accordingly\n\t\t\t\tshifted = shift( layout, i, column );\n\n\t\t\t\t// Cache calculation for unique columns\n\t\t\t\tunique = colspan === 1 ?\n\t\t\t\t\ttrue :\n\t\t\t\t\tfalse;\n\t\t\t\t\n\t\t\t\t// Perform header setup\n\t\t\t\tif ( write ) {\n\t\t\t\t\tif (unique) {\n\t\t\t\t\t\t// Allow column options to be set from HTML attributes\n\t\t\t\t\t\t_fnColumnOptions( settings, shifted, $(cell).data() );\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Get the width for the column. This can be defined from the\n\t\t\t\t\t\t// width attribute, style attribute or `columns.width` option\n\t\t\t\t\t\tvar columnDef = columns[shifted];\n\t\t\t\t\t\tvar width = cell.getAttribute('width') || null;\n\t\t\t\t\t\tvar t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\t\t\t\tif ( t ) {\n\t\t\t\t\t\t\twidth = t[1];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcolumnDef.sWidthOrig = columnDef.sWidth || width;\n\n\t\t\t\t\t\tif (isHeader) {\n\t\t\t\t\t\t\t// Column title handling - can be user set, or read from the DOM\n\t\t\t\t\t\t\t// This happens before the render, so the original is still in place\n\t\t\t\t\t\t\tif ( columnDef.sTitle !== null && ! columnDef.autoTitle ) {\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.sTitle;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (! columnDef.sTitle && unique) {\n\t\t\t\t\t\t\t\tcolumnDef.sTitle = _stripHtml(cell.innerHTML);\n\t\t\t\t\t\t\t\tcolumnDef.autoTitle = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Footer specific operations\n\t\t\t\t\t\t\tif (columnDef.footer) {\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.footer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Fall back to the aria-label attribute on the table header if no ariaTitle is\n\t\t\t\t\t\t// provided.\n\t\t\t\t\t\tif (! columnDef.ariaTitle) {\n\t\t\t\t\t\t\tcolumnDef.ariaTitle = $(cell).attr(\"aria-label\") || columnDef.sTitle;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Column specific class names\n\t\t\t\t\t\tif ( columnDef.className ) {\n\t\t\t\t\t\t\t$(cell).addClass( columnDef.className );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wrap the column title so we can write to it in future\n\t\t\t\t\tif ( $('span.dt-column-title', cell).length === 0) {\n\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t.addClass('dt-column-title')\n\t\t\t\t\t\t\t.append(cell.childNodes)\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isHeader && $('span.dt-column-order', cell).length === 0) {\n\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t.addClass('dt-column-order')\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If there is col / rowspan, copy the information into the layout grid\n\t\t\t\tfor ( l=0 ; l<colspan ; l++ ) {\n\t\t\t\t\tfor ( k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\tlayout[i+k][shifted+l] = {\n\t\t\t\t\t\t\tcell: cell,\n\t\t\t\t\t\t\tunique: unique\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlayout[i+k].row = row;\n\t\t\t\t\t}\n\n\t\t\t\t\tcols.push( shifted+l );\n\t\t\t\t}\n\n\t\t\t\t// Assign an attribute so spanning cells can still be identified\n\t\t\t\t// as belonging to a column\n\t\t\t\tcell.setAttribute('data-dt-column', _unique(cols).join(','));\n\t\t\t}\n\n\t\t\tcell = cell.nextSibling;\n\t\t}\n\t}\n\n\treturn layout;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart( oSettings )\n{\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\n\t// Check and see if we have an initial draw position from state saving\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t{\n\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\tiInitDisplayStart :\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t0 :\n\t\t\t\tiInitDisplayStart;\n\n\t\toSettings.iInitDisplayStart = -1;\n\t}\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax( oSettings, data, fn )\n{\n\tvar ajaxData;\n\tvar ajax = oSettings.ajax;\n\tvar instance = oSettings.oInstance;\n\tvar callback = function ( json ) {\n\t\tvar status = oSettings.jqXHR\n\t\t\t? oSettings.jqXHR.status\n\t\t\t: null;\n\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\tjson = {};\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t}\n\n\t\tvar error = json.error || json.sError;\n\t\tif ( error ) {\n\t\t\t_fnLog( oSettings, 0, error );\n\t\t}\n\n\t\t// Microsoft often wrap JSON as a string in another JSON object\n\t\t// Let's handle that automatically\n\t\tif (json.d && typeof json.d === 'string') {\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(json.d);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// noop\n\t\t\t}\n\t\t}\n\n\t\toSettings.json = json;\n\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true );\n\t\tfn( json );\n\t};\n\n\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t{\n\t\tajaxData = ajax.data;\n\n\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t// If the function returned something, use that alone\n\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\tnewData :\n\t\t\t$.extend( true, data, newData );\n\n\t\t// Remove the data property as we've resolved it already and don't want\n\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\tdelete ajax.data;\n\t}\n\n\tvar baseAjax = {\n\t\t\"url\": typeof ajax === 'string' ?\n\t\t\tajax :\n\t\t\t'',\n\t\t\"data\": data,\n\t\t\"success\": callback,\n\t\t\"dataType\": \"json\",\n\t\t\"cache\": false,\n\t\t\"type\": oSettings.sServerMethod,\n\t\t\"error\": function (xhr, error) {\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true );\n\n\t\t\tif ( ret.indexOf(true) === -1 ) {\n\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t}\n\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t};\n\n\t// If `ajax` option is an object, extend and override our default base\n\tif ( $.isPlainObject( ajax ) ) {\n\t\t$.extend( baseAjax, ajax )\n\t}\n\n\t// Store the data submitted for the API\n\toSettings.oAjaxData = data;\n\n\t// Allow plug-ins and external processes to modify the data\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data, baseAjax], true );\n\n\tif ( typeof ajax === 'function' )\n\t{\n\t\t// Is a function - let the caller define what needs to be done\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t}\n\telse if (ajax.url === '') {\n\t\t// No url, so don't load any data. Just apply an empty data array\n\t\t// to the object for the callback.\n\t\tvar empty = {};\n\n\t\tDataTable.util.set(ajax.dataSrc)(empty, []);\n\t\tcallback(empty);\n\t}\n\telse {\n\t\t// Object to extend the base settings\n\t\toSettings.jqXHR = $.ajax( baseAjax );\n\t}\n\n\t// Restore for next time around\n\tif ( ajaxData ) {\n\t\tajax.data = ajaxData;\n\t}\n}\n\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate( settings )\n{\n\tsettings.iDraw++;\n\t_fnProcessingDisplay( settings, true );\n\n\t_fnBuildAjax(\n\t\tsettings,\n\t\t_fnAjaxParameters( settings ),\n\t\tfunction(json) {\n\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t}\n\t);\n}\n\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters( settings )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tfeatures = settings.oFeatures,\n\t\tpreSearch = settings.oPreviousSearch,\n\t\tpreColSearch = settings.aoPreSearchCols,\n\t\tcolData = function ( idx, prop ) {\n\t\t\treturn typeof columns[idx][prop] === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\tcolumns[idx][prop];\n\t\t};\n\n\treturn {\n\t\tdraw: settings.iDraw,\n\t\tcolumns: columns.map( function ( column, i ) {\n\t\t\treturn {\n\t\t\t\tdata: colData(i, 'mData'),\n\t\t\t\tname: column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable: column.bSortable,\n\t\t\t\tsearch: {\n\t\t\t\t\tvalue: preColSearch[i].search,\n\t\t\t\t\tregex: preColSearch[i].regex,\n\t\t\t\t\tfixed: Object.keys(column.searchFixed).map( function(name) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tterm: column.searchFixed[name].toString()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t};\n\t\t} ),\n\t\torder: _fnSortFlatten( settings ).map( function ( val ) {\n\t\t\treturn {\n\t\t\t\tcolumn: val.col,\n\t\t\t\tdir: val.dir,\n\t\t\t\tname: colData(val.col, 'sName')\n\t\t\t};\n\t\t} ),\n\t\tstart: settings._iDisplayStart,\n\t\tlength: features.bPaginate ?\n\t\t\tsettings._iDisplayLength :\n\t\t\t-1,\n\t\tsearch: {\n\t\t\tvalue: preSearch.search,\n\t\t\tregex: preSearch.regex,\n\t\t\tfixed: Object.keys(settings.searchFixed).map( function(name) {\n\t\t\t\treturn {\n\t\t\t\t\tname: name,\n\t\t\t\t\tterm: settings.searchFixed[name].toString()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t};\n}\n\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw ( settings, json )\n{\n\tvar data = _fnAjaxDataSrc(settings, json);\n\tvar draw = _fnAjaxDataSrcParam(settings, 'draw', json);\n\tvar recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\n\tvar recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\n\n\tif ( draw !== undefined ) {\n\t\t// Protect against out of sequence returns\n\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.iDraw = draw * 1;\n\t}\n\n\t// No data in returned object, so rather than an array, we show an empty table\n\tif ( ! data ) {\n\t\tdata = [];\n\t}\n\n\t_fnClearTable( settings );\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t_fnAddData( settings, data[i] );\n\t}\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t_fnColumnTypes(settings);\n\t_fnDraw( settings, true );\n\t_fnInitComplete( settings );\n\t_fnProcessingDisplay( settings, false );\n}\n\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} settings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\nfunction _fnAjaxDataSrc ( settings, json, write )\n{\n\tvar dataProp = 'data';\n\n\tif ($.isPlainObject( settings.ajax ) && settings.ajax.dataSrc !== undefined) {\n\t\t// Could in inside a `dataSrc` object, or not!\n\t\tvar dataSrc = settings.ajax.dataSrc;\n\n\t\t// string, function and object are valid types\n\t\tif (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\n\t\t\tdataProp = dataSrc;\n\t\t}\n\t\telse if (dataSrc.data !== undefined) {\n\t\t\tdataProp = dataSrc.data;\n\t\t}\n\t}\n\n\tif ( ! write ) {\n\t\tif ( dataProp === 'data' ) {\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t// it if possible\n\t\t\treturn json.aaData || json[dataProp];\n\t\t}\n\n\t\treturn dataProp !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataProp )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t// set\n\t_fnSetObjectDataFn( dataProp )( json, write );\n}\n\n/**\n * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n * @param {*} settings DataTables settings object\n * @param {*} param Target parameter\n * @param {*} json JSON data\n * @returns Resolved value\n */\nfunction _fnAjaxDataSrcParam (settings, param, json) {\n\tvar dataSrc = $.isPlainObject( settings.ajax )\n\t\t? settings.ajax.dataSrc\n\t\t: null;\n\n\tif (dataSrc && dataSrc[param]) {\n\t\t// Get from custom location\n\t\treturn _fnGetObjectDataFn( dataSrc[param] )( json );\n\t}\n\n\t// else - Default behaviour\n\tvar old = '';\n\n\t// Legacy support\n\tif (param === 'draw') {\n\t\told = 'sEcho';\n\t}\n\telse if (param === 'recordsTotal') {\n\t\told = 'iTotalRecords';\n\t}\n\telse if (param === 'recordsFiltered') {\n\t\told = 'iTotalDisplayRecords';\n\t}\n\n\treturn json[old] !== undefined\n\t\t? json[old]\n\t\t: json[param];\n}\n\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} settings dataTables settings object\n *  @param {object} input search information\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete ( settings, input )\n{\n\tvar columnsSearch = settings.aoPreSearchCols;\n\n\t// In server-side processing all filtering is done by the server, so no point hanging around here\n\tif ( _fnDataSource( settings ) != 'ssp' )\n\t{\n\t\t// Check if any of the rows were invalidated\n\t\t_fnFilterData( settings );\n\n\t\t// Start from the full data set\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\t// Global filter first\n\t\t_fnFilter( settings.aiDisplay, settings, input.search, input );\n\n\t\t$.each(settings.searchFixed, function (name, term) {\n\t\t\t_fnFilter(settings.aiDisplay, settings, term, {});\n\t\t});\n\n\t\t// Then individual column filters\n\t\tfor ( var i=0 ; i<columnsSearch.length ; i++ )\n\t\t{\n\t\t\tvar col = columnsSearch[i];\n\n\t\t\t_fnFilter(\n\t\t\t\tsettings.aiDisplay,\n\t\t\t\tsettings,\n\t\t\t\tcol.search,\n\t\t\t\tcol,\n\t\t\t\ti\n\t\t\t);\n\n\t\t\t$.each(settings.aoColumns[i].searchFixed, function (name, term) {\n\t\t\t\t_fnFilter(settings.aiDisplay, settings, term, {}, i);\n\t\t\t});\n\t\t}\n\n\t\t// And finally global filtering\n\t\t_fnFilterCustom( settings );\n\t}\n\n\t// Tell the draw function we have been filtering\n\tsettings.bFiltered = true;\n\n\t_fnCallbackFire( settings, null, 'search', [settings] );\n}\n\n\n/**\n * Apply custom filtering functions\n * \n * This is legacy now that we have named functions, but it is widely used\n * from 1.x, so it is not yet deprecated.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom( settings )\n{\n\tvar filters = DataTable.ext.search;\n\tvar displayRows = settings.aiDisplay;\n\tvar row, rowIdx;\n\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\tvar rows = [];\n\n\t\t// Loop over each row and see if it should be included\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\trowIdx = displayRows[ j ];\n\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\trows.push( rowIdx );\n\t\t\t}\n\t\t}\n\n\t\t// So the array reference doesn't break set the results into the\n\t\t// existing array\n\t\tdisplayRows.length = 0;\n\t\tdisplayRows.push.apply(displayRows, rows);\n\t}\n}\n\n\n/**\n * Filter the data table based on user input and draw the table\n */\nfunction _fnFilter( searchRows, settings, input, options, column )\n{\n\tif ( input === '' ) {\n\t\treturn;\n\t}\n\n\tvar i = 0;\n\tvar matched = [];\n\n\t// Search term can be a function, regex or string - if a string we apply our\n\t// smart filtering regex (assuming the options require that)\n\tvar searchFunc = typeof input === 'function' ? input : null;\n\tvar rpSearch = input instanceof RegExp\n\t\t? input\n\t\t: searchFunc\n\t\t\t? null\n\t\t\t: _fnFilterCreateSearch( input, options );\n\n\t// Then for each row, does the test pass. If not, lop the row from the array\n\tfor (i=0 ; i<searchRows.length ; i++) {\n\t\tvar row = settings.aoData[ searchRows[i] ];\n\t\tvar data = column === undefined\n\t\t\t? row._sFilterRow\n\t\t\t: row._aFilterData[ column ];\n\n\t\tif ( (searchFunc && searchFunc(data, row._aData, searchRows[i], column)) || (rpSearch && rpSearch.test(data)) ) {\n\t\t\tmatched.push(searchRows[i]);\n\t\t}\n\t}\n\n\t// Mutate the searchRows array\n\tsearchRows.length = matched.length;\n\n\tfor (i=0 ; i<matched.length ; i++) {\n\t\tsearchRows[i] = matched[i];\n\t}\n}\n\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch( search, inOpts )\n{\n\tvar not = [];\n\tvar options = $.extend({}, {\n\t\tboundary: false,\n\t\tcaseInsensitive: true,\n\t\texact: false,\n\t\tregex: false,\n\t\tsmart: true\n\t}, inOpts);\n\n\tif (typeof search !== 'string') {\n\t\tsearch = search.toString();\n\t}\n\n\t// Remove diacritics if normalize is set up to do so\n\tsearch = _normalize(search);\n\n\tif (options.exact) {\n\t\treturn new RegExp(\n\t\t\t'^'+_fnEscapeRegex(search)+'$',\n\t\t\toptions.caseInsensitive ? 'i' : ''\n\t\t);\n\t}\n\n\tsearch = options.regex ?\n\t\tsearch :\n\t\t_fnEscapeRegex( search );\n\t\n\tif ( options.smart ) {\n\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t * order is important - a la google. And a negative look around for\n\t\t * finding rows which don't contain a given string.\n\t\t * \n\t\t * So this is the sort of thing we want to generate:\n\t\t * \n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t */\n\t\tvar parts = search.match( /!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g ) || [''];\n\t\tvar a = parts.map( function ( word ) {\n\t\t\tvar negative = false;\n\t\t\tvar m;\n\n\t\t\t// Determine if it is a \"does not include\"\n\t\t\tif ( word.charAt(0) === '!' ) {\n\t\t\t\tnegative = true;\n\t\t\t\tword = word.substring(1);\n\t\t\t}\n\n\t\t\t// Strip the quotes from around matched phrases\n\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\tm = word.match( /^\"(.*)\"$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\t\t\telse if ( word.charAt(0) === '\\u201C' ) {\n\t\t\t\t// Smart quote match (iPhone users)\n\t\t\t\tm = word.match( /^\\u201C(.*)\\u201D$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\n\t\t\t// For our \"not\" case, we need to modify the string that is\n\t\t\t// allowed to match at the end of the expression.\n\t\t\tif (negative) {\n\t\t\t\tif (word.length > 1) {\n\t\t\t\t\tnot.push('(?!'+word+')');\n\t\t\t\t}\n\n\t\t\t\tword = '';\n\t\t\t}\n\n\t\t\treturn word.replace(/\"/g, '');\n\t\t} );\n\n\t\tvar match = not.length\n\t\t\t? not.join('')\n\t\t\t: '';\n\n\t\tvar boundary = options.boundary\n\t\t\t? '\\\\b'\n\t\t\t: '';\n\n\t\tsearch = '^(?=.*?'+boundary+a.join( ')(?=.*?'+boundary )+')('+match+'.)*$';\n\t}\n\n\treturn new RegExp( search, options.caseInsensitive ? 'i' : '' );\n}\n\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar column;\n\tvar j, jen, filterData, cellData, row;\n\tvar wasInvalidated = false;\n\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\tif (! data[rowIdx]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\trow = data[rowIdx];\n\n\t\tif ( ! row._aFilterData ) {\n\t\t\tfilterData = [];\n\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\tcolumn = columns[j];\n\n\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\tcellData = _fnGetCellData( settings, rowIdx, j, 'filter' );\n\n\t\t\t\t\t// Search in DataTables is string based\n\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcellData = '';\n\t\t\t\t}\n\n\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t// method used here is much faster https://jsperf.com/html-decode\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t}\n\n\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t}\n\n\t\t\t\tfilterData.push( cellData );\n\t\t\t}\n\n\t\t\trow._aFilterData = filterData;\n\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\twasInvalidated = true;\n\t\t}\n\t}\n\n\treturn wasInvalidated;\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise ( settings )\n{\n\tvar i;\n\tvar init = settings.oInit;\n\tvar deferLoading = settings.deferLoading;\n\tvar dataSrc = _fnDataSource( settings );\n\n\t// Ensure that the table data is fully initialised\n\tif ( ! settings.bInitialised ) {\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\treturn;\n\t}\n\n\t// Build the header / footer for the table\n\t_fnBuildHead( settings, 'header' );\n\t_fnBuildHead( settings, 'footer' );\n\n\t// Load the table's state (if needed) and then render around it and draw\n\t_fnLoadState( settings, init, function () {\n\t\t// Then draw the header / footer\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\n\t\t// Cache the paging start point, as the first redraw will reset it\n\t\tvar iAjaxStart = settings.iInitDisplayStart\n\n\t\t// Local data load\n\t\t// Check if there is data passing into the constructor\n\t\tif ( init.aaData ) {\n\t\t\tfor ( i=0 ; i<init.aaData.length ; i++ ) {\n\t\t\t\t_fnAddData( settings, init.aaData[ i ] );\n\t\t\t}\n\t\t}\n\t\telse if ( deferLoading || dataSrc == 'dom' ) {\n\t\t\t// Grab the data from the page\n\t\t\t_fnAddTr( settings, $(settings.nTBody).children('tr') );\n\t\t}\n\n\t\t// Filter not yet applied - copy the display master\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\t// Enable features\n\t\t_fnAddOptionsHtml( settings );\n\t\t_fnSortInit( settings );\n\n\t\t_colGroup( settings );\n\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings], true );\n\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, {}, function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t\t_fnReDraw( settings );\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t}\n\t\t}\n\t} );\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete ( settings )\n{\n\tif (settings._bInitComplete) {\n\t\treturn;\n\t}\n\n\tvar args = [settings, settings.json];\n\n\tsettings._bInitComplete = true;\n\n\t// Table is fully set up and we have data, so calculate the\n\t// column widths\n\t_fnAdjustColumnSizing( settings );\n\n\t_fnCallbackFire( settings, null, 'plugin-init', args, true );\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', args, true );\n}\n\nfunction _fnLengthChange ( settings, val )\n{\n\tvar len = parseInt( val, 10 );\n\tsettings._iDisplayLength = len;\n\n\t_fnLengthOverflow( settings );\n\n\t// Fire length change event\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n}\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange ( settings, action, redraw )\n{\n\tvar\n\t\tstart     = settings._iDisplayStart,\n\t\tlen       = settings._iDisplayLength,\n\t\trecords   = settings.fnRecordsDisplay();\n\n\tif ( records === 0 || len === -1 )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( typeof action === \"number\" )\n\t{\n\t\tstart = action * len;\n\n\t\tif ( start > records )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"first\" )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( action == \"previous\" )\n\t{\n\t\tstart = len >= 0 ?\n\t\t\tstart - len :\n\t\t\t0;\n\n\t\tif ( start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"next\" )\n\t{\n\t\tif ( start + len < records )\n\t\t{\n\t\t\tstart += len;\n\t\t}\n\t}\n\telse if ( action == \"last\" )\n\t{\n\t\tstart = Math.floor( (records-1) / len) * len;\n\t}\n\telse if ( action === 'ellipsis' )\n\t{\n\t\treturn;\n\t}\n\telse\n\t{\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t}\n\n\tvar changed = settings._iDisplayStart !== start;\n\tsettings._iDisplayStart = start;\n\n\t_fnCallbackFire( settings, null, changed ? 'page' : 'page-nc', [settings] );\n\n\tif ( changed && redraw ) {\n\t\t_fnDraw( settings );\n\t}\n\n\treturn changed;\n}\n\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings DataTables settings object\n */\nfunction _processingHtml ( settings )\n{\n\tvar table = settings.nTable;\n\tvar scrolling = settings.oScroll.sX !== '' || settings.oScroll.sY !== '';\n\n\tif ( settings.oFeatures.bProcessing ) {\n\t\tvar n = $('<div/>', {\n\t\t\t\t'id': settings.sTableId + '_processing',\n\t\t\t\t'class': settings.oClasses.processing.container,\n\t\t\t\t'role': 'status'\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.append('<div><div></div><div></div><div></div><div></div></div>');\n\n\t\t// Different positioning depending on if scrolling is enabled or not\n\t\tif (scrolling) {\n\t\t\tn.prependTo( $('div.dt-scroll', settings.nTableWrapper) );\n\t\t}\n\t\telse {\n\t\t\tn.insertBefore( table );\n\t\t}\n\n\t\t$(table).on( 'processing.dt.DT', function (e, s, show) {\n\t\t\tn.css( 'display', show ? 'block' : 'none' );\n\t\t} );\n\t}\n}\n\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings DataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n */\nfunction _fnProcessingDisplay ( settings, show )\n{\n\t// Ignore cases when we are still redrawing\n\tif (settings.bDrawing && show === false) {\n\t\treturn;\n\t}\n\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n}\n\n/**\n * Show the processing element if an action takes longer than a given time\n *\n * @param {*} settings DataTables settings object\n * @param {*} enable Do (true) or not (false) async processing (local feature enablement)\n * @param {*} run Function to run\n */\nfunction _fnProcessingRun( settings, enable, run ) {\n\tif (! enable) {\n\t\t// Immediate execution, synchronous\n\t\trun();\n\t}\n\telse {\n\t\t_fnProcessingDisplay(settings, true);\n\t\t\n\t\t// Allow the processing display to show if needed\n\t\tsetTimeout(function () {\n\t\t\trun();\n\n\t\t\t_fnProcessingDisplay(settings, false);\n\t\t}, 0);\n\t}\n}\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable ( settings )\n{\n\tvar table = $(settings.nTable);\n\n\t// Scrolling from here on in\n\tvar scroll = settings.oScroll;\n\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\treturn settings.nTable;\n\t}\n\n\tvar scrollX = scroll.sX;\n\tvar scrollY = scroll.sY;\n\tvar classes = settings.oClasses.scrolling;\n\tvar caption = settings.captionNode;\n\tvar captionSide = caption ? caption._captionSide : null;\n\tvar headerClone = $( table[0].cloneNode(false) );\n\tvar footerClone = $( table[0].cloneNode(false) );\n\tvar footer = table.children('tfoot');\n\tvar _div = '<div/>';\n\tvar size = function ( s ) {\n\t\treturn !s ? null : _fnStringToCss( s );\n\t};\n\n\tif ( ! footer.length ) {\n\t\tfooter = null;\n\t}\n\n\t/*\n\t * The HTML structure that we want to generate in this function is:\n\t *  div - scroller\n\t *    div - scroll head\n\t *      div - scroll head inner\n\t *        table - scroll head table\n\t *          thead - thead\n\t *    div - scroll body\n\t *      table - table (master table)\n\t *        thead - thead clone for sizing\n\t *        tbody - tbody\n\t *    div - scroll foot\n\t *      div - scroll foot inner\n\t *        table - scroll foot table\n\t *          tfoot - tfoot\n\t */\n\tvar scroller = $( _div, { 'class': classes.container } )\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.header.self } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.header.inner } )\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t)\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.body } )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t} )\n\t\t\t\t.append( table )\n\t\t);\n\n\tif ( footer ) {\n\t\tscroller.append(\n\t\t\t$(_div, { 'class': classes.footer.self } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.footer.inner } )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tvar children = scroller.children();\n\tvar scrollHead = children[0];\n\tvar scrollBody = children[1];\n\tvar scrollFoot = footer ? children[2] : null;\n\n\t// When the body is scrolled, then we also want to scroll the headers\n\t$(scrollBody).on( 'scroll.DT', function () {\n\t\tvar scrollLeft = this.scrollLeft;\n\n\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\tif ( footer ) {\n\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t}\n\t} );\n\n\t// When focus is put on the header cells, we might need to scroll the body\n\t$('th, td', scrollHead).on('focus', function () {\n\t\tvar scrollLeft = scrollHead.scrollLeft;\n\n\t\tscrollBody.scrollLeft = scrollLeft;\n\n\t\tif ( footer ) {\n\t\t\tscrollBody.scrollLeft = scrollLeft;\n\t\t}\n\t});\n\n\t$(scrollBody).css('max-height', scrollY);\n\tif (! scroll.bCollapse) {\n\t\t$(scrollBody).css('height', scrollY);\n\t}\n\n\tsettings.nScrollHead = scrollHead;\n\tsettings.nScrollBody = scrollBody;\n\tsettings.nScrollFoot = scrollFoot;\n\n\t// On redraw - align columns\n\tsettings.aoDrawCallback.push(_fnScrollDraw);\n\n\treturn scroller[0];\n}\n\n\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Correct colgroup > col values if needed\n *   3. Copy colgroup > col over to header and footer\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw ( settings )\n{\n\t// Given that this is such a monster function, a lot of variables are use\n\t// to try and keep the minimised size as small as possible\n\tvar\n\t\tscroll         = settings.oScroll,\n\t\tbarWidth       = scroll.iBarWidth,\n\t\tdivHeader      = $(settings.nScrollHead),\n\t\tdivHeaderInner = divHeader.children('div'),\n\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\tdivBodyEl      = settings.nScrollBody,\n\t\tdivBody        = $(divBodyEl),\n\t\tdivFooter      = $(settings.nScrollFoot),\n\t\tdivFooterInner = divFooter.children('div'),\n\t\tdivFooterTable = divFooterInner.children('table'),\n\t\theader         = $(settings.nTHead),\n\t\ttable          = $(settings.nTable),\n\t\tfooter         = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\n\t\tbrowser        = settings.oBrowser,\n\t\theaderCopy, footerCopy;\n\n\t// If the scrollbar visibility has changed from the last draw, we need to\n\t// adjust the column sizes as the table width will have changed to account\n\t// for the scrollbar\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t_fnAdjustColumnSizing( settings );\n\t\treturn; // adjust column sizing will call this function again\n\t}\n\telse {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t}\n\n\t// 1. Re-create the table inside the scrolling div\n\t// Remove the old minimised thead and tfoot elements in the inner table\n\ttable.children('thead, tfoot').remove();\n\n\t// Clone the current header and footer elements and then place it into the inner table\n\theaderCopy = header.clone().prependTo( table );\n\theaderCopy.find('th, td').removeAttr('tabindex');\n\theaderCopy.find('[id]').removeAttr('id');\n\n\tif ( footer ) {\n\t\tfooterCopy = footer.clone().prependTo( table );\n\t\tfooterCopy.find('[id]').removeAttr('id');\n\t}\n\n\t// 2. Correct colgroup > col values if needed\n\t// It is possible that the cell sizes are smaller than the content, so we need to\n\t// correct colgroup>col for such cases. This can happen if the auto width detection\n\t// uses a cell which has a longer string, but isn't the widest! For example \n\t// \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n\t// \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n\t// Note the use of translating into a column index to get the `col` element. This\n\t// is because of Responsive which might remove `col` elements, knocking the alignment\n\t// of the indexes out.\n\tif (settings.aiDisplay.length) {\n\t\t// Get the column sizes from the first row in the table. This should really be a\n\t\t// [].find, but it wasn't supported in Chrome until Sept 2015, and DT has 10 year\n\t\t// browser support\n\t\tvar firstTr = null;\n\n\t\tfor (i=settings._iDisplayStart ; i<settings.aiDisplay.length ; i++) {\n\t\t\tvar idx = settings.aiDisplay[i];\n\t\t\tvar tr = settings.aoData[idx].nTr;\n\n\t\t\tif (tr) {\n\t\t\t\tfirstTr = tr;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (firstTr) {\n\t\t\tvar colSizes = $(firstTr).children('th, td').map(function (vis) {\n\t\t\t\treturn {\n\t\t\t\t\tidx: _fnVisibleToColumnIndex(settings, vis),\n\t\t\t\t\twidth: $(this).outerWidth()\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Check against what the colgroup > col is set to and correct if needed\n\t\t\tfor (var i=0 ; i<colSizes.length ; i++) {\n\t\t\t\tvar colEl = settings.aoColumns[ colSizes[i].idx ].colEl[0];\n\t\t\t\tvar colWidth = colEl.style.width.replace('px', '');\n\n\t\t\t\tif (colWidth !== colSizes[i].width) {\n\t\t\t\t\tcolEl.style.width = colSizes[i].width + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 3. Copy the colgroup over to the header and footer\n\tdivHeaderTable\n\t\t.find('colgroup')\n\t\t.remove();\n\n\tdivHeaderTable.append(settings.colgroup.clone());\n\n\tif ( footer ) {\n\t\tdivFooterTable\n\t\t\t.find('colgroup')\n\t\t\t.remove();\n\n\t\tdivFooterTable.append(settings.colgroup.clone());\n\t}\n\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t// the content of the cell so that the width applied to the header and body\n\t// both match, but we want to hide it completely.\n\t$('th, td', headerCopy).each(function () {\n\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n\t});\n\n\tif ( footer ) {\n\t\t$('th, td', footerCopy).each(function () {\n\t\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n\t\t});\n\t}\n\n\t// 4. Clean up\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\tvar isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\tvar paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\n\t// Set the width's of the header and footer tables\n\tvar outerWidth = table.outerWidth();\n\n\tdivHeaderTable.css('width', _fnStringToCss( outerWidth ));\n\tdivHeaderInner\n\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\n\tif ( footer ) {\n\t\tdivFooterTable.css('width', _fnStringToCss( outerWidth ));\n\t\tdivFooterInner\n\t\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\t}\n\n\t// Correct DOM ordering for colgroup - comes before the thead\n\ttable.children('colgroup').prependTo(table);\n\n\t// Adjust the position of the header in case we loose the y-scrollbar\n\tdivBody.trigger('scroll');\n\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t// only if we aren't holding the position\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\tdivBodyEl.scrollTop = 0;\n\t}\n}\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths ( settings )\n{\n\t// Not interested in doing column width calculation if auto-width is disabled\n\tif (! settings.oFeatures.bAutoWidth) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ttable = settings.nTable,\n\t\tcolumns = settings.aoColumns,\n\t\tscroll = settings.oScroll,\n\t\tscrollY = scroll.sY,\n\t\tscrollX = scroll.sX,\n\t\tscrollXInner = scroll.sXInner,\n\t\tvisibleColumns = _fnGetColumns( settings, 'bVisible' ),\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\ttableContainer = table.parentNode,\n\t\ti, column, columnIdx;\n\t\t\n\tvar styleWidth = table.style.width;\n\n\t// If there is no width applied as a CSS style or as an attribute, we assume that\n\t// the width is intended to be 100%, which is usually is in CSS, but it is very\n\t// difficult to correctly parse the rules to get the final result.\n\tif ( ! styleWidth && ! tableWidthAttr) {\n\t\ttable.style.width = '100%';\n\t\tstyleWidth = '100%';\n\t}\n\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\ttableWidthAttr = styleWidth;\n\t}\n\n\t// Let plug-ins know that we are doing a recalc, in case they have changed any of the\n\t// visible columns their own way (e.g. Responsive uses display:none).\n\t_fnCallbackFire(\n\t\tsettings,\n\t\tnull,\n\t\t'column-calc',\n\t\t{visible: visibleColumns},\n\t\tfalse\n\t);\n\n\t// Construct a single row, worst case, table with the widest\n\t// node in the data, assign any user defined widths, then insert it into\n\t// the DOM and allow the browser to do all the hard work of calculating\n\t// table widths\n\tvar tmpTable = $(table.cloneNode())\n\t\t.css( 'visibility', 'hidden' )\n\t\t.removeAttr( 'id' );\n\n\t// Clean up the table body\n\ttmpTable.append('<tbody>')\n\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\n\t// Clone the table header and footer - we can't use the header / footer\n\t// from the cloned table, since if scrolling is active, the table's\n\t// real header and footer are contained in different table tags\n\ttmpTable\n\t\t.append( $(settings.nTHead).clone() )\n\t\t.append( $(settings.nTFoot).clone() );\n\n\t// Remove any assigned widths from the footer (from scrolling)\n\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t// Apply custom sizing to the cloned header\n\ttmpTable.find('thead th, thead td').each( function () {\n\t\t// Get the `width` from the header layout\n\t\tvar width = _fnColumnsSumWidth( settings, this, true, false );\n\n\t\tif ( width ) {\n\t\t\tthis.style.width = width;\n\n\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t// width the column requires, then it will have no effect\n\t\t\tif ( scrollX ) {\n\t\t\t\t$( this ).append( $('<div/>').css( {\n\t\t\t\t\twidth: width,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tborder: 0,\n\t\t\t\t\theight: 1\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.style.width = '';\n\t\t}\n\t} );\n\n\t// Find the widest piece of data for each column and put it into the table\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\tcolumnIdx = visibleColumns[i];\n\t\tcolumn = columns[ columnIdx ];\n\n\t\tvar longest = _fnGetMaxLenString(settings, columnIdx);\n\t\tvar autoClass = _ext.type.className[column.sType];\n\t\tvar text = longest + column.sContentPadding;\n\t\tvar insert = longest.indexOf('<') === -1\n\t\t\t? document.createTextNode(text)\n\t\t\t: text\n\t\t\n\t\t$('<td/>')\n\t\t\t.addClass(autoClass)\n\t\t\t.addClass(column.sClass)\n\t\t\t.append(insert)\n\t\t\t.appendTo(tr);\n\t}\n\n\t// Tidy the temporary table - remove name attributes so there aren't\n\t// duplicated in the dom (radio elements for example)\n\t$('[name]', tmpTable).removeAttr('name');\n\n\t// Table has been built, attach to the document so we can work with it.\n\t// A holding element is used, positioned at the top of the container\n\t// with minimal height, so it has no effect on if the container scrolls\n\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t// needed\n\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\theight: 1,\n\t\t\t\tright: 0,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} :\n\t\t\t{}\n\t\t)\n\t\t.append( tmpTable )\n\t\t.appendTo( tableContainer );\n\n\t// When scrolling (X or Y) we want to set the width of the table as \n\t// appropriate. However, when not scrolling leave the table width as it\n\t// is. This results in slightly different, but I think correct behaviour\n\tif ( scrollX && scrollXInner ) {\n\t\ttmpTable.width( scrollXInner );\n\t}\n\telse if ( scrollX ) {\n\t\ttmpTable.css( 'width', 'auto' );\n\t\ttmpTable.removeAttr('width');\n\n\t\t// If there is no width attribute or style, then allow the table to\n\t\t// collapse\n\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t}\n\t}\n\telse if ( scrollY ) {\n\t\ttmpTable.width( tableContainer.clientWidth );\n\t}\n\telse if ( tableWidthAttr ) {\n\t\ttmpTable.width( tableWidthAttr );\n\t}\n\n\t// Get the width of each column in the constructed table\n\tvar total = 0;\n\tvar bodyCells = tmpTable.find('tbody tr').eq(0).children();\n\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t// Use getBounding for sub-pixel accuracy, which we then want to round up!\n\t\tvar bounding = bodyCells[i].getBoundingClientRect().width;\n\n\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t// of the table might not equal the total given here\n\t\ttotal += bounding;\n\n\t\t// Width for each column to use\n\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding );\n\t}\n\n\ttable.style.width = _fnStringToCss( total );\n\n\t// Finished with the table - ditch it\n\tholder.remove();\n\n\t// If there is a width attr, we want to attach an event listener which\n\t// allows the table sizing to automatically adjust when the window is\n\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t// CSS is a relative value or absolute - DOM read is always px.\n\tif ( tableWidthAttr ) {\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t}\n\n\tif ( (tableWidthAttr || scrollX) && ! settings._reszEvt ) {\n\t\tvar bindResize = function () {\n\t\t\t$(window).on('resize.DT-'+settings.sInstance, DataTable.util.throttle( function () {\n\t\t\t\tif (! settings.bDestroying) {\n\t\t\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\t\t}\n\t\t\t} ) );\n\t\t};\n\n\t\tbindResize();\n\n\t\tsettings._reszEvt = true;\n\t}\n}\n\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} string of the max length\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString( settings, colIdx )\n{\n\tvar column = settings.aoColumns[colIdx];\n\n\tif (! column.maxLenString) {\n\t\tvar s, max='', maxLen = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aiDisplayMaster.length ; i<ien ; i++ ) {\n\t\t\tvar rowIdx = settings.aiDisplayMaster[i];\n\t\t\tvar data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n\n\t\t\tvar cellString = data && typeof data === 'object' && data.nodeType\n\t\t\t\t? data.innerHTML\n\t\t\t\t: data+'';\n\n\t\t\t// Remove id / name attributes from elements so they\n\t\t\t// don't interfere with existing elements\n\t\t\tcellString = cellString\n\t\t\t\t.replace(/id=\".*?\"/g, '')\n\t\t\t\t.replace(/name=\".*?\"/g, '');\n\n\t\t\ts = _stripHtml(cellString)\n\t\t\t\t.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > maxLen ) {\n\t\t\t\t// We want the HTML in the string, but the length that\n\t\t\t\t// is important is the stripped string\n\t\t\t\tmax = cellString;\n\t\t\t\tmaxLen = s.length;\n\t\t\t}\n\t\t}\n\n\t\tcolumn.maxLenString = max;\n\t}\n\n\treturn column.maxLenString;\n}\n\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss( s )\n{\n\tif ( s === null ) {\n\t\treturn '0px';\n\t}\n\n\tif ( typeof s == 'number' ) {\n\t\treturn s < 0 ?\n\t\t\t'0px' :\n\t\t\ts+'px';\n\t}\n\n\t// Check it has a unit character already\n\treturn s.match(/\\d$/) ?\n\t\ts+'px' :\n\t\ts;\n}\n\n/**\n * Re-insert the `col` elements for current visibility\n *\n * @param {*} settings DT settings\n */\nfunction _colGroup( settings ) {\n\tvar cols = settings.aoColumns;\n\n\tsettings.colgroup.empty();\n\n\tfor (i=0 ; i<cols.length ; i++) {\n\t\tif (cols[i].bVisible) {\n\t\t\tsettings.colgroup.append(cols[i].colEl);\n\t\t}\n\t}\n}\n\n\nfunction _fnSortInit( settings ) {\n\tvar target = settings.nTHead;\n\tvar headerRows = target.querySelectorAll('tr');\n\tvar legacyTop = settings.bSortCellsTop;\n\tvar notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\n\t\n\t// Legacy support for `orderCellsTop`\n\tif (legacyTop === true) {\n\t\ttarget = headerRows[0];\n\t}\n\telse if (legacyTop === false) {\n\t\ttarget = headerRows[ headerRows.length - 1 ];\n\t}\n\n\t_fnSortAttachListener(\n\t\tsettings,\n\t\ttarget,\n\t\ttarget === settings.nTHead\n\t\t\t? 'tr'+notSelector+' th'+notSelector+', tr'+notSelector+' td'+notSelector\n\t\t\t: 'th'+notSelector+', td'+notSelector\n\t);\n\n\t// Need to resolve the user input array into our internal structure\n\tvar order = [];\n\t_fnSortResolve( settings, order, settings.aaSorting );\n\n\tsettings.aaSorting = order;\n}\n\n\nfunction _fnSortAttachListener(settings, node, selector, column, callback) {\n\t_fnBindAction( node, selector, function (e) {\n\t\tvar run = false;\n\t\tvar columns = column === undefined\n\t\t\t? _fnColumnsFromHeader( e.target )\n\t\t\t: [column];\n\n\t\tif ( columns.length ) {\n\t\t\tfor ( var i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\tvar ret = _fnSortAdd( settings, columns[i], i, e.shiftKey );\n\n\t\t\t\tif (ret !== false) {\n\t\t\t\t\trun = true;\n\t\t\t\t}\t\t\t\t\t\n\n\t\t\t\t// If the first entry is no sort, then subsequent\n\t\t\t\t// sort columns are ignored\n\t\t\t\tif (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (run) {\n\t\t\t\t_fnProcessingRun(settings, true, function () {\n\t\t\t\t\t_fnSort( settings );\n\t\t\t\t\t_fnSortDisplay( settings, settings.aiDisplay );\n\n\t\t\t\t\t_fnReDraw( settings, false, false );\n\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Sort the display array to match the master's order\n * @param {*} settings\n */\nfunction _fnSortDisplay(settings, display) {\n\tif (display.length < 2) {\n\t\treturn;\n\t}\n\n\tvar master = settings.aiDisplayMaster;\n\tvar masterMap = {};\n\tvar map = {};\n\tvar i;\n\n\t// Rather than needing an `indexOf` on master array, we can create a map\n\tfor (i=0 ; i<master.length ; i++) {\n\t\tmasterMap[master[i]] = i;\n\t}\n\n\t// And then cache what would be the indexOf fom the display\n\tfor (i=0 ; i<display.length ; i++) {\n\t\tmap[display[i]] = masterMap[display[i]];\n\t}\n\n\tdisplay.sort(function(a, b){\n\t\t// Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\n\t\treturn map[a] - map[b];\n\t});\n}\n\n\nfunction _fnSortResolve (settings, nestedSort, sort) {\n\tvar push = function ( a ) {\n\t\tif ($.isPlainObject(a)) {\n\t\t\tif (a.idx !== undefined) {\n\t\t\t\t// Index based ordering\n\t\t\t\tnestedSort.push([a.idx, a.dir]);\n\t\t\t}\n\t\t\telse if (a.name) {\n\t\t\t\t// Name based ordering\n\t\t\t\tvar cols = _pluck( settings.aoColumns, 'sName');\n\t\t\t\tvar idx = cols.indexOf(a.name);\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tnestedSort.push([idx, a.dir]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Plain column index and direction pair\n\t\t\tnestedSort.push(a);\n\t\t}\n\t};\n\n\tif ( $.isPlainObject(sort) ) {\n\t\t// Object\n\t\tpush(sort);\n\t}\n\telse if ( sort.length && typeof sort[0] === 'number' ) {\n\t\t// 1D array\n\t\tpush(sort);\n\t}\n\telse if ( sort.length ) {\n\t\t// 2D array\n\t\tfor (var z=0; z<sort.length; z++) {\n\t\t\tpush(sort[z]); // Object or array\n\t\t}\n\t}\n}\n\n\nfunction _fnSortFlatten ( settings )\n{\n\tvar\n\t\ti, k, kLen,\n\t\taSort = [],\n\t\textSort = DataTable.ext.type.order,\n\t\taoColumns = settings.aoColumns,\n\t\taDataSort, iCol, sType, srcCol,\n\t\tfixed = settings.aaSortingFixed,\n\t\tfixedObj = $.isPlainObject( fixed ),\n\t\tnestedSort = [];\n\t\n\tif ( ! settings.oFeatures.bSort ) {\n\t\treturn aSort;\n\t}\n\n\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t// specified\n\tif ( Array.isArray( fixed ) ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed );\n\t}\n\n\tif ( fixedObj && fixed.pre ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed.pre );\n\t}\n\n\t_fnSortResolve( settings, nestedSort, settings.aaSorting );\n\n\tif (fixedObj && fixed.post ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed.post );\n\t}\n\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t{\n\t\tsrcCol = nestedSort[i][0];\n\n\t\tif ( aoColumns[ srcCol ] ) {\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\n\t\t\t\t}\n\n\t\t\t\tif ( nestedSort[i][1] ) {\n\t\t\t\t\taSort.push( {\n\t\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\t\tcol:       iCol,\n\t\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\t\ttype:      sType,\n\t\t\t\t\t\tformatter: extSort[ sType+\"-pre\" ],\n\t\t\t\t\t\tsorter:    extSort[ sType+\"-\"+nestedSort[i][1] ]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSort ( oSettings, col, dir )\n{\n\tvar\n\t\ti, ien, iLen,\n\t\taiOrig = [],\n\t\textSort = DataTable.ext.type.order,\n\t\taoData = oSettings.aoData,\n\t\tsortCol,\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\taSort;\n\n\t// Allow a specific column to be sorted, which will _not_ alter the display\n\t// master\n\tif (col !== undefined) {\n\t\tvar srcCol = oSettings.aoColumns[col];\n\t\taSort = [{\n\t\t\tsrc:       col,\n\t\t\tcol:       col,\n\t\t\tdir:       dir,\n\t\t\tindex:     0,\n\t\t\ttype:      srcCol.sType,\n\t\t\tformatter: extSort[ srcCol.sType+\"-pre\" ],\n\t\t\tsorter:    extSort[ srcCol.sType+\"-\"+dir ]\n\t\t}];\n\t\tdisplayMaster = displayMaster.slice();\n\t}\n\telse {\n\t\taSort = _fnSortFlatten( oSettings );\n\t}\n\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\tsortCol = aSort[i];\n\n\t\t// Load the data needed for the sort, for each cell\n\t\t_fnSortData( oSettings, sortCol.col );\n\t}\n\n\t/* No sorting required if server-side or no sorting array */\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t{\n\t\t// Reset the initial positions on each pass so we get a stable sort\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\taiOrig[ i ] = i;\n\t\t}\n\n\t\t// If the first sort is desc, then reverse the array to preserve original\n\t\t// order, just in reverse\n\t\tif (aSort.length && aSort[0].dir === 'desc' && oSettings.orderDescReverse) {\n\t\t\taiOrig.reverse();\n\t\t}\n\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t *  fnLocalSorting = function(a,b){\n\t\t *    var test;\n\t\t *    test = oSort['string-asc']('data11', 'data12');\n\t\t *      if (test !== 0)\n\t\t *        return test;\n\t\t *    test = oSort['numeric-desc']('data21', 'data22');\n\t\t *    if (test !== 0)\n\t\t *      return test;\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t *  }\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t * positions in the original data array to provide a stable sort.\n\t\t */\n\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\tvar\n\t\t\t\tx, y, k, test, sort,\n\t\t\t\tlen=aSort.length,\n\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\tsort = aSort[k];\n\n\t\t\t\t// Data, which may have already been through a `-pre` function\n\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\tif (sort.sorter) {\n\t\t\t\t\t// If there is a custom sorter (`-asc` or `-desc`) for this\n\t\t\t\t\t// data type, use it\n\t\t\t\t\ttest = sort.sorter(x, y);\n\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn test;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Otherwise, use generic sorting\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = aiOrig[a];\n\t\t\ty = aiOrig[b];\n\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t} );\n\t}\n\telse if ( aSort.length === 0 ) {\n\t\t// Apply index order\n\t\tdisplayMaster.sort(function (x, y) {\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t});\n\t}\n\n\tif (col === undefined) {\n\t\t// Tell the draw function that we have sorted the data\n\t\toSettings.bSorted = true;\n\t\toSettings.sortDetails = aSort;\n\n\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort] );\n\t}\n\n\treturn displayMaster;\n}\n\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {int} addIndex Counter\n *  @param {boolean} [shift=false] Shift click add\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAdd ( settings, colIdx, addIndex, shift )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\tvar sorting = settings.aaSorting;\n\tvar asSorting = col.asSorting;\n\tvar nextSortIdx;\n\tvar next = function ( a, overflow ) {\n\t\tvar idx = a._idx;\n\t\tif ( idx === undefined ) {\n\t\t\tidx = asSorting.indexOf(a[1]);\n\t\t}\n\n\t\treturn idx+1 < asSorting.length ?\n\t\t\tidx+1 :\n\t\t\toverflow ?\n\t\t\t\tnull :\n\t\t\t\t0;\n\t};\n\n\tif ( ! col.bSortable ) {\n\t\treturn false;\n\t}\n\n\t// Convert to 2D array if needed\n\tif ( typeof sorting[0] === 'number' ) {\n\t\tsorting = settings.aaSorting = [ sorting ];\n\t}\n\n\t// If appending the sort then we are multi-column sorting\n\tif ( (shift || addIndex) && settings.oFeatures.bSortMulti ) {\n\t\t// Are we already doing some kind of sort on this column?\n\t\tvar sortIdx = _pluck(sorting, '0').indexOf(colIdx);\n\n\t\tif ( sortIdx !== -1 ) {\n\t\t\t// Yes, modify the sort\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t}\n\n\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t}\n\t\t}\n\t\telse if (shift) {\n\t\t\t// No sort on this column yet, being added by shift click\n\t\t\t// add it as itself\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t\telse {\n\t\t\t// No sort on this column yet, being added from a colspan\n\t\t\t// so add with same direction as first column\n\t\t\tsorting.push( [ colIdx, sorting[0][1], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t}\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t// Single column - already sorting on this column, modify the sort\n\t\tnextSortIdx = next( sorting[0] );\n\n\t\tsorting.length = 1;\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\tsorting[0]._idx = nextSortIdx;\n\t}\n\telse {\n\t\t// Single column - sort only on this column\n\t\tsorting.length = 0;\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\tsorting[0]._idx = 0;\n\t}\n}\n\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses( settings )\n{\n\tvar oldSort = settings.aLastSort;\n\tvar sortClass = settings.oClasses.order.position;\n\tvar sort = _fnSortFlatten( settings );\n\tvar features = settings.oFeatures;\n\tvar i, ien, colIdx;\n\n\tif ( features.bSort && features.bSortClasses ) {\n\t\t// Remove old sorting classes\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t// Remove column sorting\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\n\t\t// Add new column sorting\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = sort[i].src;\n\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\t}\n\n\tsettings.aLastSort = sort;\n}\n\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData( settings, colIdx )\n{\n\t// Custom sorting function - provided by the sort data type\n\tvar column = settings.aoColumns[ colIdx ];\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\tvar customData;\n\n\tif ( customSort ) {\n\t\tcustomData = customSort.call( settings.oInstance, settings, colIdx,\n\t\t\t_fnColumnIndexToVisible( settings, colIdx )\n\t\t);\n\t}\n\n\t// Use / populate cache\n\tvar row, cellData;\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\tvar data = settings.aoData;\n\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\t// Sparse array\n\t\tif (! data[rowIdx]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\trow = data[rowIdx];\n\n\t\tif ( ! row._aSortData ) {\n\t\t\trow._aSortData = [];\n\t\t}\n\n\t\tif ( ! row._aSortData[colIdx] || customSort ) {\n\t\t\tcellData = customSort ?\n\t\t\t\tcustomData[rowIdx] : // If there was a custom sort function, use data from there\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'sort' );\n\n\t\t\trow._aSortData[ colIdx ] = formatter ?\n\t\t\t\tformatter( cellData, settings ) :\n\t\t\t\tcellData;\n\t\t}\n\t}\n}\n\n\n/**\n * State information for a table\n *\n * @param {*} settings\n * @returns State object\n */\nfunction _fnSaveState ( settings )\n{\n\tif (settings._bLoadingState) {\n\t\treturn;\n\t}\n\n\t/* Store the interesting variables */\n\tvar state = {\n\t\ttime:    +new Date(),\n\t\tstart:   settings._iDisplayStart,\n\t\tlength:  settings._iDisplayLength,\n\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\tsearch:  $.extend({}, settings.oPreviousSearch),\n\t\tcolumns: settings.aoColumns.map( function ( col, i ) {\n\t\t\treturn {\n\t\t\t\tvisible: col.bVisible,\n\t\t\t\tsearch: $.extend({}, settings.aoPreSearchCols[i])\n\t\t\t};\n\t\t} )\n\t};\n\n\tsettings.oSavedState = state;\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t{\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\t\n}\n\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState ( settings, init, callback )\n{\n\tif ( ! settings.oFeatures.bStateSave ) {\n\t\tcallback();\n\t\treturn;\n\t}\n\n\tvar loaded = function(state) {\n\t\t_fnImplementState(settings, state, callback);\n\t}\n\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\n\tif ( state !== undefined ) {\n\t\t_fnImplementState( settings, state, callback );\n\t}\n\t// otherwise, wait for the loaded callback to be executed\n\n\treturn true;\n}\n\nfunction _fnImplementState ( settings, s, callback) {\n\tvar i, ien;\n\tvar columns = settings.aoColumns;\n\tsettings._bLoadingState = true;\n\n\t// When StateRestore was introduced the state could now be implemented at any time\n\t// Not just initialisation. To do this an api instance is required in some places\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n\tif ( ! s || ! s.time ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Reject old data\n\tvar duration = settings.iStateDuration;\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t// cancelling of loading by returning false\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\tif ( abStateLoad.indexOf(false) !== -1 ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Number of columns have changed - all bets are off, no restore of settings\n\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Store the saved state so it might be accessed at any time\n\tsettings.oLoadedState = $.extend( true, {}, s );\n\n\t// This is needed for ColReorder, which has to happen first to allow all\n\t// the stored indexes to be usable. It is not publicly documented.\n\t_fnCallbackFire( settings, null, 'stateLoadInit', [settings, s], true );\n\n\t// Page Length\n\tif ( s.length !== undefined ) {\n\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\tif (api) {\n\t\t\tapi.page.len(s.length)\n\t\t}\n\t\telse {\n\t\t\tsettings._iDisplayLength   = s.length;\n\t\t}\n\t}\n\n\t// Restore key features\n\tif ( s.start !== undefined ) {\n\t\tif(api === null) {\n\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t}\n\t\telse {\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t}\n\t}\n\n\t// Order\n\tif ( s.order !== undefined ) {\n\t\tsettings.aaSorting = [];\n\t\t$.each( s.order, function ( i, col ) {\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t[ 0, col[1] ] :\n\t\t\t\tcol\n\t\t\t);\n\t\t} );\n\t}\n\n\t// Search\n\tif ( s.search !== undefined ) {\n\t\t$.extend( settings.oPreviousSearch, s.search );\n\t}\n\n\t// Columns\n\tif ( s.columns ) {\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\tvar col = s.columns[i];\n\n\t\t\t// Visibility\n\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\tif (api) {\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Search\n\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], col.search );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\tif (api) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t}\n\n\tsettings._bLoadingState = false;\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\tcallback();\n}\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog( settings, level, msg, tn )\n{\n\tmsg = 'DataTables warning: '+\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\n\tif ( tn ) {\n\t\tmsg += '. For more information about this error, please see '+\n\t\t'https://datatables.net/tn/'+tn;\n\t}\n\n\tif ( ! level  ) {\n\t\t// Backwards compatibility pre 1.10\n\t\tvar ext = DataTable.ext;\n\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\tif ( settings ) {\n\t\t\t_fnCallbackFire( settings, null, 'dt-error', [ settings, tn, msg ], true );\n\t\t}\n\n\t\tif ( type == 'alert' ) {\n\t\t\talert( msg );\n\t\t}\n\t\telse if ( type == 'throw' ) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\telse if ( typeof type == 'function' ) {\n\t\t\ttype( settings, tn, msg );\n\t\t}\n\t}\n\telse if ( window.console && console.log ) {\n\t\tconsole.log( msg );\n\t}\n}\n\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap( ret, src, name, mappedName )\n{\n\tif ( Array.isArray( name ) ) {\n\t\t$.each( name, function (i, val) {\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnMap( ret, src, val );\n\t\t\t}\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tif ( mappedName === undefined ) {\n\t\tmappedName = name;\n\t}\n\n\tif ( src[name] !== undefined ) {\n\t\tret[mappedName] = src[name];\n\t}\n}\n\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend( out, extender, breakRefs )\n{\n\tvar val;\n\n\tfor ( var prop in extender ) {\n\t\tif ( Object.prototype.hasOwnProperty.call(extender, prop) ) {\n\t\t\tval = extender[prop];\n\n\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\tout[prop] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t}\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\tout[prop] = val.slice();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[prop] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object|string} selector Selector (for delegated events) or data object\n *   to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction( n, selector, fn )\n{\n\t$(n)\n\t\t.on( 'click.DT', selector, function (e) {\n\t\t\tfn(e);\n\t\t} )\n\t\t.on( 'keypress.DT', selector, function (e){\n\t\t\tif ( e.which === 13 ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tfn(e);\n\t\t\t}\n\t\t} )\n\t\t.on( 'selectstart.DT', selector, function () {\n\t\t\t// Don't want a double click resulting in text selection\n\t\t\treturn false;\n\t\t} );\n}\n\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} settings dataTables settings object\n *  @param {string} store Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg( settings, store, fn )\n{\n\tif ( fn ) {\n\t\tsettings[store].push(fn);\n\t}\n}\n\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @param {boolean} [bubbles] True if the event should bubble\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire( settings, callbackArr, eventName, args, bubbles )\n{\n\tvar ret = [];\n\n\tif ( callbackArr ) {\n\t\tret = settings[callbackArr].slice().reverse().map( function (val) {\n\t\t\treturn val.apply( settings.oInstance, args );\n\t\t} );\n\t}\n\n\tif ( eventName !== null) {\n\t\tvar e = $.Event( eventName+'.dt' );\n\t\tvar table = $(settings.nTable);\n\t\t\n\t\t// Expose the DataTables API on the event object for easy access\n\t\te.dt = settings.api;\n\n\t\ttable[bubbles ?  'trigger' : 'triggerHandler']( e, args );\n\n\t\t// If not yet attached to the document, trigger the event\n\t\t// on the body directly to sort of simulate the bubble\n\t\tif (bubbles && table.parents('body').length === 0) {\n\t\t\t$('body').trigger( e, args );\n\t\t}\n\n\t\tret.push( e.result );\n\t}\n\n\treturn ret;\n}\n\n\nfunction _fnLengthOverflow ( settings )\n{\n\tvar\n\t\tstart = settings._iDisplayStart,\n\t\tend = settings.fnDisplayEnd(),\n\t\tlen = settings._iDisplayLength;\n\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\tif ( start >= end )\n\t{\n\t\tstart = end - len;\n\t}\n\n\t// Keep the start record on the current page\n\tstart -= (start % len);\n\n\tif ( len === -1 || start < 0 )\n\t{\n\t\tstart = 0;\n\t}\n\n\tsettings._iDisplayStart = start;\n}\n\n\nfunction _fnRenderer( settings, type )\n{\n\tvar renderer = settings.renderer;\n\tvar host = DataTable.ext.renderer[type];\n\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t// the default.\n\t\treturn host[renderer[type]] || host._;\n\t}\n\telse if ( typeof renderer === 'string' ) {\n\t\t// Common renderer - if there is one available for this type use it,\n\t\t// otherwise use the default\n\t\treturn host[renderer] || host._;\n\t}\n\n\t// Use the default\n\treturn host._;\n}\n\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource ( settings )\n{\n\tif ( settings.oFeatures.bServerSide ) {\n\t\treturn 'ssp';\n\t}\n\telse if ( settings.ajax ) {\n\t\treturn 'ajax';\n\t}\n\treturn 'dom';\n}\n\n/**\n * Common replacement for language strings\n *\n * @param {*} settings DT settings object\n * @param {*} str String with values to replace\n * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n * @returns String\n */\nfunction _fnMacros ( settings, str, entries )\n{\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is\n\t// used only internally\n\tvar\n\t\tformatter  = settings.fnFormatNumber,\n\t\tstart      = settings._iDisplayStart+1,\n\t\tlen        = settings._iDisplayLength,\n\t\tvis        = settings.fnRecordsDisplay(),\n\t\tmax        = settings.fnRecordsTotal(),\n\t\tall        = len === -1;\n\n\treturn str.\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\treplace(/_MAX_/g,   formatter.call( settings, max ) ).\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) ).\n\t\treplace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries) ).\n\t\treplace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max) ).\n\t\treplace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis) );\n}\n\n\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function ( mixed )\n{\n\tvar idx, jq;\n\tvar settings = DataTable.settings;\n\tvar tables = _pluck(settings, 'nTable');\n\n\tif ( ! mixed ) {\n\t\treturn [];\n\t}\n\telse if ( mixed.nTable && mixed.oFeatures ) {\n\t\t// DataTables settings object\n\t\treturn [ mixed ];\n\t}\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t// Table node\n\t\tidx = tables.indexOf(mixed);\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t}\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\treturn mixed.settings().toArray();\n\t}\n\telse if ( typeof mixed === 'string' ) {\n\t\t// jQuery selector\n\t\tjq = $(mixed).get();\n\t}\n\telse if ( mixed instanceof $ ) {\n\t\t// jQuery object (also DataTables instance)\n\t\tjq = mixed.get();\n\t}\n\n\tif ( jq ) {\n\t\treturn settings.filter(function (v, idx) {\n\t\t\treturn jq.includes(tables[idx]);\n\t\t});\n\t}\n};\n\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new DataTable.Api( 'table.dataTable' );\n */\n_Api = function ( context, data )\n{\n\tif ( ! (this instanceof _Api) ) {\n\t\treturn new _Api( context, data );\n\t}\n\n\tvar i;\n\tvar settings = [];\n\tvar ctxSettings = function ( o ) {\n\t\tvar a = _toSettings( o );\n\t\tif ( a ) {\n\t\t\tsettings.push.apply( settings, a );\n\t\t}\n\t};\n\n\tif ( Array.isArray( context ) ) {\n\t\tfor ( i=0 ; i<context.length ; i++ ) {\n\t\t\tctxSettings( context[i] );\n\t\t}\n\t}\n\telse {\n\t\tctxSettings( context );\n\t}\n\n\t// Remove duplicates\n\tthis.context = settings.length > 1\n\t\t? _unique( settings )\n\t\t: settings;\n\n\t// Initial data\n\tif ( data ) {\n\t\t// Chrome can throw a max stack error if apply is called with\n\t\t// too large an array, but apply is faster.\n\t\tif (data.length < 10000) {\n\t\t\tthis.push.apply(this, data);\n\t\t}\n\t\telse {\n\t\t\tfor (i=0 ; i<data.length ; i++) {\n\t\t\t\tthis.push(data[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// selector\n\tthis.selector = {\n\t\trows: null,\n\t\tcols: null,\n\t\topts: null\n\t};\n\n\t_Api.extend( this, this, __apiStruct );\n};\n\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend( _Api.prototype, {\n\tany: function ()\n\t{\n\t\treturn this.count() !== 0;\n\t},\n\n\tcontext: [], // array of table settings objects\n\n\tcount: function ()\n\t{\n\t\treturn this.flatten().length;\n\t},\n\n\teach: function ( fn )\n\t{\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\tfn.call( this, this[i], i, this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\teq: function ( idx )\n\t{\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length > idx ?\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\tnull;\n\t},\n\n\tfilter: function ( fn )\n\t{\n\t\tvar a = __arrayProto.filter.call( this, fn, this );\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\tflatten: function ()\n\t{\n\t\tvar a = [];\n\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t},\n\n\tget: function ( idx )\n\t{\n\t\treturn this[ idx ];\n\t},\n\n\tjoin:    __arrayProto.join,\n\n\tincludes: function ( find ) {\n\t\treturn this.indexOf( find ) === -1 ? false : true;\n\t},\n\n\tindexOf: __arrayProto.indexOf,\n\n\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\tvar\n\t\t\ta = [], ret,\n\t\t\ti, ien, j, jen,\n\t\t\tcontext = this.context,\n\t\t\trows, items, item,\n\t\t\tselector = this.selector;\n\n\t\t// Argument shifting\n\t\tif ( typeof flatten === 'string' ) {\n\t\t\talwaysNew = fn;\n\t\t\tfn = type;\n\t\t\ttype = flatten;\n\t\t\tflatten = false;\n\t\t}\n\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tvar apiInst = new _Api( context[i] );\n\n\t\t\tif ( type === 'table' ) {\n\t\t\t\tret = fn.call( apiInst, context[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\titems = this[i];\n\n\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t}\n\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\titem = items[j];\n\n\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( a.length || alwaysNew ) {\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\tvar apiSelector = api.selector;\n\t\t\tapiSelector.rows = selector.rows;\n\t\t\tapiSelector.cols = selector.cols;\n\t\t\tapiSelector.opts = selector.opts;\n\t\t\treturn api;\n\t\t}\n\t\treturn this;\n\t},\n\n\tlastIndexOf: __arrayProto.lastIndexOf,\n\n\tlength:  0,\n\n\tmap: function ( fn )\n\t{\n\t\tvar a = __arrayProto.map.call( this, fn, this );\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\tpluck: function ( prop )\n\t{\n\t\tvar fn = DataTable.util.get(prop);\n\n\t\treturn this.map( function ( el ) {\n\t\t\treturn fn(el);\n\t\t} );\n\t},\n\n\tpop:     __arrayProto.pop,\n\n\tpush:    __arrayProto.push,\n\n\treduce: __arrayProto.reduce,\n\n\treduceRight: __arrayProto.reduceRight,\n\n\treverse: __arrayProto.reverse,\n\n\t// Object with rows, columns and opts\n\tselector: null,\n\n\tshift:   __arrayProto.shift,\n\n\tslice: function () {\n\t\treturn new _Api( this.context, this );\n\t},\n\n\tsort:    __arrayProto.sort,\n\n\tsplice:  __arrayProto.splice,\n\n\ttoArray: function ()\n\t{\n\t\treturn __arrayProto.slice.call( this );\n\t},\n\n\tto$: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\ttoJQuery: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\tunique: function ()\n\t{\n\t\treturn new _Api( this.context, _unique(this.toArray()) );\n\t},\n\n\tunshift: __arrayProto.unshift\n} );\n\n\nfunction _api_scope( scope, fn, struc ) {\n\treturn function () {\n\t\tvar ret = fn.apply( scope || this, arguments );\n\n\t\t// Method extension\n\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\treturn ret;\n\t};\n}\n\nfunction _api_find( src, name ) {\n\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\tif ( src[i].name === name ) {\n\t\t\treturn src[i];\n\t\t}\n\t}\n\treturn null;\n}\n\nwindow.__apiStruct = __apiStruct;\n\n_Api.extend = function ( scope, obj, ext )\n{\n\t// Only extend API instances and static properties of the API\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\tstruct;\n\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\tstruct = ext[i];\n\n\t\tif (struct.name === '__proto__') {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Value\n\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t_api_scope( scope, struct.val, struct ) :\n\t\t\tstruct.type === 'object' ?\n\t\t\t\t{} :\n\t\t\t\tstruct.val;\n\n\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t// Property extension\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t}\n};\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n\n_Api.register = _api_register = function ( name, val )\n{\n\tif ( Array.isArray( name ) ) {\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t_Api.register( name[j], val );\n\t\t}\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\their = name.split('.'),\n\t\tstruct = __apiStruct,\n\t\tkey, method;\n\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\tkey = method ?\n\t\t\their[i].replace('()', '') :\n\t\t\their[i];\n\n\t\tvar src = _api_find( struct, key );\n\t\tif ( ! src ) {\n\t\t\tsrc = {\n\t\t\t\tname:      key,\n\t\t\t\tval:       {},\n\t\t\t\tmethodExt: [],\n\t\t\t\tpropExt:   [],\n\t\t\t\ttype:      'object'\n\t\t\t};\n\t\t\tstruct.push( src );\n\t\t}\n\n\t\tif ( i === ien-1 ) {\n\t\t\tsrc.val = val;\n\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t'object' :\n\t\t\t\t\t'other';\n\t\t}\n\t\telse {\n\t\t\tstruct = method ?\n\t\t\t\tsrc.methodExt :\n\t\t\t\tsrc.propExt;\n\t\t}\n\t}\n};\n\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t_Api.register( pluralName, val );\n\n\t_Api.register( singularName, function () {\n\t\tvar ret = val.apply( this, arguments );\n\n\t\tif ( ret === this ) {\n\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\treturn this;\n\t\t}\n\t\telse if ( ret instanceof _Api ) {\n\t\t\t// New API instance returned, want the value from the first item\n\t\t\t// in the returned array for the singular result.\n\t\t\treturn ret.length ?\n\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\tret[0] :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Non-API return - just fire it back\n\t\treturn ret;\n\t} );\n};\n\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function ( selector, a )\n{\n\tif ( Array.isArray(selector) ) {\n\t\tvar result = [];\n\n\t\tselector.forEach(function (sel) {\n\t\t\tvar inner = __table_selector(sel, a);\n\n\t\t\tresult.push.apply(result, inner);\n\t\t});\n\n\t\treturn result.filter( function (item) {\n\t\t\treturn item;\n\t\t});\n\t}\n\n\t// Integer is used to pick out a table by index\n\tif ( typeof selector === 'number' ) {\n\t\treturn [ a[ selector ] ];\n\t}\n\n\t// Perform a jQuery selector on the table nodes\n\tvar nodes = a.map( function (el) {\n\t\treturn el.nTable;\n\t} );\n\n\treturn $(nodes)\n\t\t.filter( selector )\n\t\t.map( function () {\n\t\t\t// Need to translate back from the table node to the settings\n\t\t\tvar idx = nodes.indexOf(this);\n\t\t\treturn a[ idx ];\n\t\t} )\n\t\t.toArray();\n};\n\n\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register( 'tables()', function ( selector ) {\n\t// A new instance is created if there was a selector specified\n\treturn selector !== undefined && selector !== null ?\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\tthis;\n} );\n\n\n_api_register( 'table()', function ( selector ) {\n\tvar tables = this.tables( selector );\n\tvar ctx = tables.context;\n\n\t// Truncate to the first matched table\n\treturn ctx.length ?\n\t\tnew _Api( ctx[0] ) :\n\t\ttables;\n} );\n\n// Common methods, combined to reduce size\n[\n\t['nodes', 'node', 'nTable'],\n\t['body', 'body', 'nTBody'],\n\t['header', 'header', 'nTHead'],\n\t['footer', 'footer', 'nTFoot'],\n].forEach(function (item) {\n\t_api_registerPlural(\n\t\t'tables().' + item[0] + '()',\n\t\t'table().' + item[1] + '()' ,\n\t\tfunction () {\n\t\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t\treturn ctx[item[2]];\n\t\t\t}, 1 );\n\t\t}\n\t);\n});\n\n// Structure methods\n[\n\t['header', 'aoHeader'],\n\t['footer', 'aoFooter'],\n].forEach(function (item) {\n\t_api_register( 'table().' + item[0] + '.structure()' , function (selector) {\n\t\tvar indexes = this.columns(selector).indexes().flatten();\n\t\tvar ctx = this.context[0];\n\t\t\n\t\treturn _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n\t} );\n})\n\n\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTableWrapper;\n\t}, 1 );\n} );\n\n_api_register( 'tables().every()', function ( fn ) {\n\tvar that = this;\n\n\treturn this.iterator('table', function (s, i) {\n\t\tfn.call(that.table(i), i);\n\t});\n});\n\n_api_register( 'caption()', function ( value, side ) {\n\tvar context = this.context;\n\n\t// Getter - return existing node's content\n\tif ( value === undefined ) {\n\t\tvar caption = context[0].captionNode;\n\n\t\treturn caption && context.length ?\n\t\t\tcaption.innerHTML : \n\t\t\tnull;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tvar table = $(ctx.nTable);\n\t\tvar caption = $(ctx.captionNode);\n\t\tvar container = $(ctx.nTableWrapper);\n\n\t\t// Create the node if it doesn't exist yet\n\t\tif ( ! caption.length ) {\n\t\t\tcaption = $('<caption/>').html( value );\n\t\t\tctx.captionNode = caption[0];\n\n\t\t\t// If side isn't set, we need to insert into the document to let the\n\t\t\t// CSS decide so we can read it back, otherwise there is no way to\n\t\t\t// know if the CSS would put it top or bottom for scrolling\n\t\t\tif (! side) {\n\t\t\t\ttable.prepend(caption);\n\n\t\t\t\tside = caption.css('caption-side');\n\t\t\t}\n\t\t}\n\n\t\tcaption.html( value );\n\n\t\tif ( side ) {\n\t\t\tcaption.css( 'caption-side', side );\n\t\t\tcaption[0]._captionSide = side;\n\t\t}\n\n\t\tif (container.find('div.dataTables_scroll').length) {\n\t\t\tvar selector = (side === 'top' ? 'Head' : 'Foot');\n\n\t\t\tcontainer.find('div.dataTables_scroll'+ selector +' table').prepend(caption);\n\t\t}\n\t\telse {\n\t\t\ttable.prepend(caption);\n\t\t}\n\t}, 1 );\n} );\n\n_api_register( 'caption.node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length ? ctx[0].captionNode : null;\n} );\n\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register( 'draw()', function ( paging ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( paging === 'page' ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t\telse {\n\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\tfalse :\n\t\t\t\t\ttrue;\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, paging===false );\n\t\t}\n\t} );\n} );\n\n\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n *//**\n * Set the current page.\n *\n * Note that if you attempt to show a page which does not exist, DataTables will\n * not throw an error, but rather reset the paging.\n *\n * @param {integer|string} action The paging action to take. This can be one of:\n *  * `integer` - The page index to jump to\n *  * `string` - An action to take:\n *    * `first` - Jump to first page.\n *    * `next` - Jump to the next page\n *    * `previous` - Jump to previous page\n *    * `last` - Jump to the last page.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.page.info().page; // not an expensive call\n\t}\n\n\t// else, have an action to take on all tables\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnPageChange( settings, action );\n\t} );\n} );\n\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register( 'page.info()', function () {\n\tif ( this.context.length === 0 ) {\n\t\treturn undefined;\n\t}\n\n\tvar\n\t\tsettings   = this.context[0],\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn {\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\"start\":          start,\n\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\"length\":         len,\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\"recordsDisplay\": visRecords,\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t};\n} );\n\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n *//**\n * Set the current page length.\n *\n * @param {integer} Page length to set. Use `-1` to show all records.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page.len()', function ( len ) {\n\t// Note that we can't call this function 'length()' because `length`\n\t// is a Javascript property of functions which defines how many arguments\n\t// the function expects.\n\tif ( len === undefined ) {\n\t\treturn this.context.length !== 0 ?\n\t\t\tthis.context[0]._iDisplayLength :\n\t\t\tundefined;\n\t}\n\n\t// else, set the page length\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLengthChange( settings, len );\n\t} );\n} );\n\n\n\nvar __reload = function ( settings, holdPosition, callback ) {\n\t// Use the draw event to trigger a callback\n\tif ( callback ) {\n\t\tvar api = new _Api( settings );\n\n\t\tapi.one( 'draw', function () {\n\t\t\tcallback( api.ajax.json() );\n\t\t} );\n\t}\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t_fnReDraw( settings, holdPosition );\n\t}\n\telse {\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t// Cancel an existing request\n\t\tvar xhr = settings.jqXHR;\n\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\txhr.abort();\n\t\t}\n\n\t\t// Trigger xhr\n\t\t_fnBuildAjax( settings, {}, function( json ) {\n\t\t\t_fnClearTable( settings );\n\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t_fnInitComplete( settings );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t} );\n\t}\n};\n\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register( 'ajax.json()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].json;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register( 'ajax.params()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].oAjaxData;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\treturn this.iterator( 'table', function (settings) {\n\t\t__reload( settings, resetPaging===false, callback );\n\t} );\n} );\n\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n *//**\n * Set the Ajax URL. Note that this will set the URL for all tables in the\n * current context.\n *\n * @param {string} url URL to set.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url()', function ( url ) {\n\tvar ctx = this.context;\n\n\tif ( url === undefined ) {\n\t\t// get\n\t\tif ( ctx.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tctx = ctx[0];\n\n\t\treturn $.isPlainObject( ctx.ajax ) ?\n\t\t\tctx.ajax.url :\n\t\t\tctx.ajax;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\tsettings.ajax.url = url;\n\t\t}\n\t\telse {\n\t\t\tsettings.ajax = url;\n\t\t}\n\t} );\n} );\n\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t// Same as a reload, but makes sense to present it for easy access after a\n\t// url change\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t__reload( ctx, resetPaging===false, callback );\n\t} );\n} );\n\n\n\n\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\n{\n\tvar\n\t\tout = [], res,\n\t\ta, i, ien, j, jen,\n\t\tselectorType = typeof selector;\n\n\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t// given with their array like look\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\tselector = [ selector ];\n\t}\n\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[[(:]/) ?\n\t\t\tselector[i].split(',') :\n\t\t\t[ selector[i] ];\n\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\n\t\t\t// Remove empty items\n\t\t\tres = res.filter( function (item) {\n\t\t\t\treturn item !== null && item !== undefined;\n\t\t\t});\n\n\t\t\tif ( res && res.length ) {\n\t\t\t\tout = out.concat( res );\n\t\t\t}\n\t\t}\n\t}\n\n\t// selector extensions\n\tvar ext = _ext.selector[ type ];\n\tif ( ext.length ) {\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tout = ext[i]( settings, opts, out );\n\t\t}\n\t}\n\n\treturn _unique( out );\n};\n\n\nvar _selector_opts = function ( opts )\n{\n\tif ( ! opts ) {\n\t\topts = {};\n\t}\n\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t// than search\n\tif ( opts.filter && opts.search === undefined ) {\n\t\topts.search = opts.filter;\n\t}\n\n\treturn $.extend( {\n\t\tsearch: 'none',\n\t\torder: 'current',\n\t\tpage: 'all'\n\t}, opts );\n};\n\n\n// Reduce the API instance to the first item found\nvar _selector_first = function ( old )\n{\n\tvar inst = new _Api(old.context[0]);\n\n\t// Use a push rather than passing to the constructor, since it will\n\t// merge arrays down automatically, which isn't what is wanted here\n\tif (old.length) {\n\t\tinst.push( old[0] );\n\t}\n\n\tinst.selector = old.selector;\n\n\t// Limit to a single row / column / cell\n\tif (inst.length && inst[0].length > 1) {\n\t\tinst[0].splice(1);\n\t}\n\n\treturn inst;\n};\n\n\nvar _selector_row_indexes = function ( settings, opts )\n{\n\tvar\n\t\ti, ien, tmp, a=[],\n\t\tdisplayFiltered = settings.aiDisplay,\n\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\tvar\n\t\tsearch = opts.search,  // none, applied, removed\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\tpage   = opts.page;    // all, current\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t// In server-side processing mode, most options are irrelevant since\n\t\t// rows not shown don't exist and the index order is the applied order\n\t\t// Removed is a special case - for consistency just return an empty\n\t\t// array\n\t\treturn search === 'removed' ?\n\t\t\t[] :\n\t\t\t_range( 0, displayMaster.length );\n\t}\n\n\tif ( page == 'current' ) {\n\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t// are\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\ta.push( displayFiltered[i] );\n\t\t}\n\t}\n\telse if ( order == 'current' || order == 'applied' ) {\n\t\tif ( search == 'none') {\n\t\t\ta = displayMaster.slice();\n\t\t}\n\t\telse if ( search == 'applied' ) {\n\t\t\ta = displayFiltered.slice();\n\t\t}\n\t\telse if ( search == 'removed' ) {\n\t\t\t// O(n+m) solution by creating a hash map\n\t\t\tvar displayFilteredMap = {};\n\n\t\t\tfor ( i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t}\n\n\t\t\tdisplayMaster.forEach(function (item) {\n\t\t\t\tif (! Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n\t\t\t\t\ta.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\telse if ( order == 'index' || order == 'original' ) {\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tif (! settings.aoData[i]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( search == 'none' ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t\telse { // applied | removed\n\t\t\t\ttmp = displayFiltered.indexOf(i);\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if ( typeof order === 'number' ) {\n\t\t// Order the rows by the given column\n\t\tvar ordered = _fnSort(settings, order, 'asc');\n\n\t\tif (search === 'none') {\n\t\t\ta = ordered;\n\t\t}\n\t\telse { // applied | removed\n\t\t\tfor (i=0; i<ordered.length; i++) {\n\t\t\t\ttmp = displayFiltered.indexOf(ordered[i]);\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( ordered[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function ( settings, selector, opts )\n{\n\tvar rows;\n\tvar run = function ( sel ) {\n\t\tvar selInt = _intVal( sel );\n\t\tvar aoData = settings.aoData;\n\n\t\t// Short cut - selector is a number and no options provided (default is\n\t\t// all records, so no need to check if the index is in there, since it\n\t\t// must be - dev error if the index doesn't exist).\n\t\tif ( selInt !== null && ! opts ) {\n\t\t\treturn [ selInt ];\n\t\t}\n\n\t\tif ( ! rows ) {\n\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t}\n\n\t\tif ( selInt !== null && rows.indexOf(selInt) !== -1 ) {\n\t\t\t// Selector - integer\n\t\t\treturn [ selInt ];\n\t\t}\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t// Selector - none\n\t\t\treturn rows;\n\t\t}\n\n\t\t// Selector - function\n\t\tif ( typeof sel === 'function' ) {\n\t\t\treturn rows.map( function (idx) {\n\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// Selector - node\n\t\tif ( sel.nodeName ) {\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\tvar cellIdx = sel._DT_CellIndex;\n\n\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse if ( cellIdx ) {\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t}\n\n\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t// DataTables simplifies this for row selectors since you can select\n\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t// unescaped.\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t// get row index from id\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\treturn [ rowObj.idx ];\n\t\t\t}\n\n\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t// matches\n\t\t}\n\t\t\n\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\tvar nodes = _removeEmpty(\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t);\n\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t// it also allows arrays, so this will cope with all three options\n\t\treturn $(nodes)\n\t\t\t.filter( sel )\n\t\t\t.map( function () {\n\t\t\t\treturn this._DT_RowIndex;\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\n\tvar matched = _selector_run( 'row', selector, run, settings, opts );\n\n\tif (opts.order === 'current' || opts.order === 'applied') {\n\t\t_fnSortDisplay(settings, matched);\n\t}\n\n\treturn matched;\n};\n\n\n_api_register( 'rows()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __row_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in __row_selector?\n\tinst.selector.rows = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_register( 'rows().nodes()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn settings.aoData[ row ].nTr || undefined;\n\t}, 1 );\n} );\n\n_api_register( 'rows().data()', function () {\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\tvar r = settings.aoData[ row ];\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t_fnInvalidate( settings, row, src );\n\t} );\n} );\n\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn row;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\tvar a = [];\n\tvar context = this.context;\n\n\t// `iterator` will drop undefined values, but in this case we want them\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t}\n\t}\n\n\treturn new _Api( context, a );\n} );\n\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\tthis.iterator( 'row', function ( settings, row ) {\n\t\tvar data = settings.aoData;\n\t\tvar rowData = data[ row ];\n\n\t\t// Delete from the display arrays\n\t\tvar idx = settings.aiDisplayMaster.indexOf(row);\n\t\tif (idx !== -1) {\n\t\t\tsettings.aiDisplayMaster.splice(idx, 1);\n\t\t}\n\n\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\tsettings._iRecordsDisplay--;\n\t\t}\n\n\t\t// Check for an 'overflow' they case for displaying the table\n\t\t_fnLengthOverflow( settings );\n\n\t\t// Remove the row's ID reference if there is one\n\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\tif ( id !== undefined ) {\n\t\t\tdelete settings.aIds[ id ];\n\t\t}\n\n\t\tdata[row] = null;\n\t} );\n\n\treturn this;\n} );\n\n\n_api_register( 'rows.add()', function ( rows ) {\n\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\tvar row, i, ien;\n\t\t\tvar out = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}, 1 );\n\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\tvar modRows = this.rows( -1 );\n\tmodRows.pop();\n\tmodRows.push.apply(modRows, newRows);\n\n\treturn modRows;\n} );\n\n\n\n\n\n/**\n *\n */\n_api_register( 'row()', function ( selector, opts ) {\n\treturn _selector_first( this.rows( selector, opts ) );\n} );\n\n\n_api_register( 'row().data()', function ( data ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && this.length && this[0].length ?\n\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\tvar row = ctx[0].aoData[ this[0] ];\n\trow._aData = data;\n\n\t// If the DOM has an id, and the data source is an array\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t}\n\n\t// Automatically invalidate\n\t_fnInvalidate( ctx[0], this[0], 'data' );\n\n\treturn this;\n} );\n\n\n_api_register( 'row().node()', function () {\n\tvar ctx = this.context;\n\n\tif (ctx.length && this.length && this[0].length) {\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\n\t\tif (row && row.nTr) {\n\t\t\treturn row.nTr;\n\t\t}\n\t}\n\n\treturn null;\n} );\n\n\n_api_register( 'row.add()', function ( row ) {\n\t// Allow a jQuery object to be passed in - only a single row is added from\n\t// it though - the first element in the set\n\tif ( row instanceof $ && row.length ) {\n\t\trow = row[0];\n\t}\n\n\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t}\n\t\treturn _fnAddData( settings, row );\n\t} );\n\n\t// Return an Api.rows() extended instance, with the newly added row selected\n\treturn this.row( rows[0] );\n} );\n\n\n$(document).on('plugin-init.dt', function (e, context) {\n\tvar api = new _Api( context );\n\n\tapi.on( 'stateSaveParams.DT', function ( e, settings, d ) {\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t// internal loop\n\t\tvar idFn = settings.rowIdFn;\n\t\tvar rows = settings.aiDisplayMaster;\n\t\tvar ids = [];\n\n\t\tfor (var i=0 ; i<rows.length ; i++) {\n\t\t\tvar rowIdx = rows[i];\n\t\t\tvar data = settings.aoData[rowIdx];\n\n\t\t\tif (data._detailsShow) {\n\t\t\t\tids.push( '#' + idFn(data._aData) );\n\t\t\t}\n\t\t}\n\n\t\td.childRows = ids;\n\t});\n\n\t// For future state loads (e.g. with StateRestore)\n\tapi.on( 'stateLoaded.DT', function (e, settings, state) {\n\t\t__details_state_load( api, state );\n\t});\n\n\t// And the initial load state\n\t__details_state_load( api, api.state.loaded() );\n});\n\nvar __details_state_load = function (api, state)\n{\n\tif ( state && state.childRows ) {\n\t\tapi\n\t\t\t.rows( state.childRows.map(function (id) {\n\t\t\t\t// Escape any `:` characters from the row id. Accounts for\n\t\t\t\t// already escaped characters.\n\t\t\t\treturn id.replace(/([^:\\\\]*(?:\\\\.[^:\\\\]*)*):/g, \"$1\\\\:\");\n\t\t\t}) )\n\t\t\t.every( function () {\n\t\t\t\t_fnCallbackFire( api.settings()[0], null, 'requestChild', [ this ] )\n\t\t\t});\n\t}\n}\n\nvar __details_add = function ( ctx, row, data, klass )\n{\n\t// Convert to array of TR elements\n\tvar rows = [];\n\tvar addRow = function ( r, k ) {\n\t\t// Recursion to allow for arrays of jQuery objects\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\taddRow( r[i], k );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t// to add the correct number of columns etc\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\tr.setAttribute( 'data-dt-row', row.idx );\n\t\t\trows.push( r );\n\t\t}\n\t\telse {\n\t\t\t// Otherwise create a row with a wrapper\n\t\t\tvar created = $('<tr><td></td></tr>')\n\t\t\t\t.attr( 'data-dt-row', row.idx )\n\t\t\t\t.addClass( k );\n\t\t\t\n\t\t\t$('td', created)\n\t\t\t\t.addClass( k )\n\t\t\t\t.html( r )[0].colSpan = _fnVisbleColumns( ctx );\n\n\t\t\trows.push( created[0] );\n\t\t}\n\t};\n\n\taddRow( data, klass );\n\n\tif ( row._details ) {\n\t\trow._details.detach();\n\t}\n\n\trow._details = $(rows);\n\n\t// If the children were already shown, that state should be retained\n\tif ( row._detailsShow ) {\n\t\trow._details.insertAfter( row.nTr );\n\t}\n};\n\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(\n\tfunction (ctx) {\n\t\t_fnSaveState( ctx[0] )\n\t},\n\t500\n);\n\n\nvar __details_remove = function ( api, idx )\n{\n\tvar ctx = api.context;\n\n\tif ( ctx.length ) {\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\tif ( row && row._details ) {\n\t\t\trow._details.remove();\n\n\t\t\trow._detailsShow = undefined;\n\t\t\trow._details = undefined;\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_display = function ( api, show ) {\n\tvar ctx = api.context;\n\n\tif ( ctx.length && api.length ) {\n\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\tif ( row._details ) {\n\t\t\trow._detailsShow = show;\n\n\t\t\tif ( show ) {\n\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow._details.detach();\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t}\n\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\n\t\t\t__details_events( ctx[0] );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_events = function ( settings )\n{\n\tvar api = new _Api( settings );\n\tvar namespace = '.dt.DT_details';\n\tvar drawEvent = 'draw'+namespace;\n\tvar colvisEvent = 'column-sizing'+namespace;\n\tvar destroyEvent = 'destroy'+namespace;\n\tvar data = settings.aoData;\n\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\n\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t// On each draw, insert the required elements into the document\n\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t// Internal data grab\n\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Column visibility change - update the colspan\n\t\tapi.on( colvisEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t// a colspan)\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\trow = data[i];\n\n\t\t\t\tif ( row && row._details ) {\n\t\t\t\t\trow._details.each(function () {\n\t\t\t\t\t\tvar el = $(this).children('td');\n\n\t\t\t\t\t\tif (el.length == 1) {\n\t\t\t\t\t\t\tel.attr('colspan', visible);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Table destroyed - nuke any child rows\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tif ( data[i] && data[i]._details ) {\n\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp+'row().child';\nvar _child_mth = _child_obj+'()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register( _child_mth, function ( data, klass ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// get\n\t\treturn ctx.length && this.length && ctx[0].aoData[ this[0] ]\n\t\t\t? ctx[0].aoData[ this[0] ]._details\n\t\t\t: undefined;\n\t}\n\telse if ( data === true ) {\n\t\t// show\n\t\tthis.child.show();\n\t}\n\telse if ( data === false ) {\n\t\t// remove\n\t\t__details_remove( this );\n\t}\n\telse if ( ctx.length && this.length ) {\n\t\t// set\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t}\n\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.show()',\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, true );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.hide()',\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, false );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.remove()',\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n], function () {           // it returns an object and this method is not executed)\n\t__details_remove( this );\n\treturn this;\n} );\n\n\n_api_register( _child_obj+'.isShown()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length && this.length && ctx[0].aoData[ this[0] ] ) {\n\t\t// _detailsShown as false or undefined will fall through to return false\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t}\n\treturn false;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+)?:(name|title|visIdx|visible)$/;\n\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function ( settings, column, r1, r2, rows, type ) {\n\tvar a = [];\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\ta.push( _fnGetCellData( settings, rows[row], column, type ) );\n\t}\n\treturn a;\n};\n\n\nvar __column_header = function ( settings, column, row ) {\n\tvar header = settings.aoHeader;\n\tvar target = row !== undefined\n\t\t? row\n\t\t: settings.bSortCellsTop // legacy support\n\t\t\t? 0\n\t\t\t: header.length - 1;\n\n\treturn header[target][column].cell;\n};\n\nvar __column_selector = function ( settings, selector, opts )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tnames = _pluck( columns, 'sName' ),\n\t\ttitles = _pluck( columns, 'sTitle' ),\n\t\tcells = DataTable.util.get('[].[].cell')(settings.aoHeader),\n\t\tnodes = _unique( _flatten([], cells) );\n\t\n\tvar run = function ( s ) {\n\t\tvar selInt = _intVal( s );\n\n\t\t// Selector - all\n\t\tif ( s === '' ) {\n\t\t\treturn _range( columns.length );\n\t\t}\n\n\t\t// Selector - index\n\t\tif ( selInt !== null ) {\n\t\t\treturn [ selInt >= 0 ?\n\t\t\t\tselInt : // Count from left\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t];\n\t\t}\n\n\t\t// Selector = function\n\t\tif ( typeof s === 'function' ) {\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\n\t\t\treturn columns.map(function (col, idx) {\n\t\t\t\treturn s(\n\t\t\t\t\t\tidx,\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t__column_header( settings, idx )\n\t\t\t\t\t) ? idx : null;\n\t\t\t});\n\t\t}\n\n\t\t// jQuery or string selector\n\t\tvar match = typeof s === 'string' ?\n\t\t\ts.match( __re_column_selector ) :\n\t\t\t'';\n\n\t\tif ( match ) {\n\t\t\tswitch( match[2] ) {\n\t\t\t\tcase 'visIdx':\n\t\t\t\tcase 'visible':\n\t\t\t\t\t// Selector is a column index\n\t\t\t\t\tif (match[1] && match[1].match(/^\\d+$/)) {\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = columns.map( function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn columns.map( function (col, idx) {\n\t\t\t\t\t\t// Not visible, can't match\n\t\t\t\t\t\tif (! col.bVisible) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Selector\n\t\t\t\t\t\tif (match[1]) {\n\t\t\t\t\t\t\treturn $(nodes[idx]).filter(match[1]).length > 0 ? idx : null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// `:visible` on its own\n\t\t\t\t\t\treturn idx;\n\t\t\t\t\t} );\n\n\t\t\t\tcase 'name':\n\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\treturn names.map( function (name, i) {\n\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tcase 'title':\n\t\t\t\t\t// match by column title\n\t\t\t\t\treturn titles.map( function (title, i) {\n\t\t\t\t\t\treturn title === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Cell in the table body\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t}\n\n\t\t// jQuery selector on the TH elements for the columns\n\t\tvar jqResult = $( nodes )\n\t\t\t.filter( s )\n\t\t\t.map( function () {\n\t\t\t\treturn _fnColumnsFromHeader( this ); // `nodes` is column index complete and in order\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t// a child or such an element\n\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\treturn host.length ?\n\t\t\t[ host.data('dt-column') ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'column', selector, run, settings, opts );\n};\n\n\nvar __setColumnVis = function ( settings, column, vis ) {\n\tvar\n\t\tcols = settings.aoColumns,\n\t\tcol  = cols[ column ],\n\t\tdata = settings.aoData,\n\t\tcells, i, ien, tr;\n\n\t// Get\n\tif ( vis === undefined ) {\n\t\treturn col.bVisible;\n\t}\n\n\t// Set\n\t// No change\n\tif ( col.bVisible === vis ) {\n\t\treturn false;\n\t}\n\n\tif ( vis ) {\n\t\t// Insert column\n\t\t// Need to decide if we should use appendChild or insertBefore\n\t\tvar insertBefore = _pluck(cols, 'bVisible').indexOf(true, column+1);\n\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\tif (data[i]) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Remove column\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t}\n\n\t// Common actions\n\tcol.bVisible = vis;\n\n\t_colGroup(settings);\n\t\n\treturn true;\n};\n\n\n_api_register( 'columns()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __column_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in _row_selector?\n\tinst.selector.cols = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_registerPlural( 'columns().header()', 'column().header()', function ( row ) {\n\treturn this.iterator( 'column', function (settings, column) {\n\t\treturn __column_header(settings, column, row);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( row ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar footer = settings.aoFooter;\n\n\t\tif (! footer.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn settings.aoFooter[row !== undefined ? row : 0][column].cell;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\treturn this.iterator( 'column-rows', __columnData, 1 );\n} );\n\n_api_registerPlural( 'columns().render()', 'column().render()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn __columnData( settings, column, i, j, rows, type );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].mData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().init()', 'column().init()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column];\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().titles()', 'column().title()', function (title, row) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t// Argument shifting\n\t\tif (typeof title === 'number') {\n\t\t\trow = title;\n\t\t\ttitle = undefined;\n\t\t}\n\n\t\tvar span = $('span.dt-column-title', this.column(column).header(row));\n\n\t\tif (title !== undefined) {\n\t\t\tspan.html(title);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn span.html();\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().types()', 'column().type()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar type = settings.aoColumns[column].sType;\n\n\t\t// If the type was invalidated, then resolve it. This actually does\n\t\t// all columns at the moment. Would only happen once if getting all\n\t\t// column's data types.\n\t\tif (! type) {\n\t\t\t_fnColumnTypes(settings);\n\t\t}\n\n\t\treturn type;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\tvar that = this;\n\tvar changed = [];\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\tif ( vis === undefined ) {\n\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t} // else\n\t\t\n\t\tif (__setColumnVis( settings, column, vis )) {\n\t\t\tchanged.push(column);\n\t\t}\n\t} );\n\n\t// Group the column visibility changes\n\tif ( vis !== undefined ) {\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t// Redraw the header after changes\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t}\n\t\n\t\t\t_fnSaveState( settings );\n\n\t\t\t// Second loop once the first is done for events\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\tif (changed.includes(column)) {\n\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( changed.length && (calc === undefined || calc) ) {\n\t\t\t\tthat.columns.adjust();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n} );\n\n_api_registerPlural( 'columns().widths()', 'column().width()', function () {\n\t// Injects a fake row into the table for just a moment so the widths can\n\t// be read, regardless of colspan in the header and rows being present in\n\t// the body\n\tvar columns = this.columns(':visible').count();\n\tvar row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\n\n\t$(this.table().body()).append(row);\n\n\tvar widths = row.children().map(function () {\n\t\treturn $(this).outerWidth();\n\t});\n\n\trow.remove();\n\t\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar visIdx = _fnColumnIndexToVisible( settings, column );\n\n\t\treturn visIdx !== null ? widths[visIdx] : 0;\n\t}, 1);\n} );\n\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn type === 'visible' ?\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\tcolumn;\n\t}, 1 );\n} );\n\n_api_register( 'columns.adjust()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}, 1 );\n} );\n\n_api_register( 'column.index()', function ( type, idx ) {\n\tif ( this.context.length !== 0 ) {\n\t\tvar ctx = this.context[0];\n\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t}\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t}\n\t}\n} );\n\n_api_register( 'column()', function ( selector, opts ) {\n\treturn _selector_first( this.columns( selector, opts ) );\n} );\n\nvar __cell_selector = function ( settings, selector, opts )\n{\n\tvar data = settings.aoData;\n\tvar rows = _selector_row_indexes( settings, opts );\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\tvar allCells = $(_flatten( [], cells ));\n\tvar row;\n\tvar columns = settings.aoColumns.length;\n\tvar a, i, ien, j, o, host;\n\n\tvar run = function ( s ) {\n\t\tvar fnSelector = typeof s === 'function';\n\n\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t// All cells and function selectors\n\t\t\ta = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\to = {\n\t\t\t\t\t\trow: row,\n\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t// Selector - index\n\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\treturn s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ?\n\t\t\t\t[s] :\n\t\t\t\t[];\n\t\t}\n\n\t\t// Selector - jQuery filtered cells\n\t\tvar jqResult = allCells\n\t\t\t.filter( s )\n\t\t\t.map( function (i, el) {\n\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t// data attributes\n\t\thost = $(s).closest('*[data-dt-row]');\n\t\treturn host.length ?\n\t\t\t[ {\n\t\t\t\trow: host.data('dt-row'),\n\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t} ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'cell', selector, run, settings, opts );\n};\n\n\n\n\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t// Argument shifting\n\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t// Indexes\n\t\tif ( rowSelector.row === undefined ) {\n\t\t\t// Selector options in first parameter\n\t\t\topts = rowSelector;\n\t\t\trowSelector = null;\n\t\t}\n\t\telse {\n\t\t\t// Cell index objects in first parameter\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t}\n\tif ( $.isPlainObject( columnSelector ) ) {\n\t\topts = columnSelector;\n\t\tcolumnSelector = null;\n\t}\n\n\t// Cell selector\n\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t} );\n\t}\n\n\t// The default built in options need to apply to row and columns\n\tvar internalOpts = opts ? {\n\t\tpage: opts.page,\n\t\torder: opts.order,\n\t\tsearch: opts.search\n\t} : {};\n\n\t// Row + column selector\n\tvar columns = this.columns( columnSelector, internalOpts );\n\tvar rows = this.rows( rowSelector, internalOpts );\n\tvar i, ien, j, jen;\n\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\tvar a = [];\n\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\ta.push( {\n\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t}, 1 );\n\n\t// There is currently only one extension which uses a cell selector extension\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t// an extension specific check at the moment\n\tvar cells = opts && opts.selected ?\n\t\tthis.cells( cellsNoOpts, opts ) :\n\t\tcellsNoOpts;\n\n\t$.extend( cells.selector, {\n\t\tcols: columnSelector,\n\t\trows: rowSelector,\n\t\topts: opts\n\t} );\n\n\treturn cells;\n} );\n\n\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\tvar data = settings.aoData[ row ];\n\n\t\treturn data && data.anCells ?\n\t\t\tdata.anCells[ column ] :\n\t\t\tundefined;\n\t}, 1 );\n} );\n\n\n_api_register( 'cells().data()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings.aoData[ row ][ type ][ column ];\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column, type );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t};\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t_fnInvalidate( settings, row, src, column );\n\t} );\n} );\n\n\n\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n} );\n\n\n_api_register( 'cell().data()', function ( data ) {\n\tvar ctx = this.context;\n\tvar cell = this[0];\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && cell.length ?\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\n\treturn this;\n} );\n\n\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n *//**\n * Set the ordering for the table.\n *\n * @param {integer} order Column index to sort upon.\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 1D array of sorting information to be applied.\n * @param {array} [...] Optional additional sorting conditions\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 2D array of sorting information to be applied.\n * @returns {DataTables.Api} this\n */\n_api_register( 'order()', function ( order, dir ) {\n\tvar ctx = this.context;\n\tvar args = Array.prototype.slice.call( arguments );\n\n\tif ( order === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].aaSorting :\n\t\t\tundefined;\n\t}\n\n\t// set\n\tif ( typeof order === 'number' ) {\n\t\t// Simple column / direction passed in\n\t\torder = [ [ order, dir ] ];\n\t}\n\telse if ( args.length > 1 ) {\n\t\t// Arguments passed in (list of 1D arrays)\n\t\torder = args;\n\t}\n\t// otherwise a 2D array was passed in\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSorting = Array.isArray(order) ? order.slice() : order;\n\t} );\n} );\n\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register( 'order.listener()', function ( node, column, callback ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSortAttachListener(settings, node, {}, column, callback);\n\t} );\n} );\n\n\n_api_register( 'order.fixed()', function ( set ) {\n\tif ( ! set ) {\n\t\tvar ctx = this.context;\n\t\tvar fixed = ctx.length ?\n\t\t\tctx[0].aaSortingFixed :\n\t\t\tundefined;\n\n\t\treturn Array.isArray( fixed ) ?\n\t\t\t{ pre: fixed } :\n\t\t\tfixed;\n\t}\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t} );\n} );\n\n\n// Order by the selected column(s)\n_api_register( [\n\t'columns().order()',\n\t'column().order()'\n], function ( dir ) {\n\tvar that = this;\n\n\tif ( ! dir ) {\n\t\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\t\tvar sort = _fnSortFlatten( settings );\n\n\t\t\tfor ( var i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tif ( sort[i].col === idx ) {\n\t\t\t\t\treturn sort[i].dir;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}, 1 );\n\t}\n\telse {\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tsettings.aaSorting = that[i].map( function (col) {\n\t\t\t\treturn [ col, dir ];\n\t\t\t} );\n\t\t} );\n\t}\n} );\n\n_api_registerPlural('columns().orderable()', 'column().orderable()', function ( directions ) {\n\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\tvar col = settings.aoColumns[idx];\n\n\t\treturn directions ?\n\t\t\tcol.asSorting :\n\t\t\tcol.bSortable;\n\t}, 1 );\n} );\n\n\n_api_register( 'processing()', function ( show ) {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t_fnProcessingDisplay( ctx, show );\n\t} );\n} );\n\n\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\tvar ctx = this.context;\n\n\tif ( input === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].oPreviousSearch.search :\n\t\t\tundefined;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof regex === 'object') {\n\t\t\t// New style options to pass to the search builder\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, regex, {\n\t\t\t\tsearch: input\n\t\t\t} ) );\n\t\t}\n\t\telse {\n\t\t\t// Compat for the old options\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, {\n\t\t\t\tsearch: input,\n\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t} ) );\n\t\t}\n\t} );\n} );\n\n_api_register( 'search.fixed()', function ( name, search ) {\n\tvar ret = this.iterator( true, 'table', function ( settings ) {\n\t\tvar fixed = settings.searchFixed;\n\n\t\tif (! name) {\n\t\t\treturn Object.keys(fixed)\n\t\t}\n\t\telse if (search === undefined) {\n\t\t\treturn fixed[name];\n\t\t}\n\t\telse if (search === null) {\n\t\t\tdelete fixed[name];\n\t\t}\n\t\telse {\n\t\t\tfixed[name] = search;\n\t\t}\n\n\t\treturn this;\n\t} );\n\n\treturn name !== undefined && search === undefined\n\t\t? ret[0]\n\t\t: ret;\n} );\n\n_api_registerPlural(\n\t'columns().search()',\n\t'column().search()',\n\tfunction ( input, regex, smart, caseInsen ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\tif ( input === undefined ) {\n\t\t\t\t// get\n\t\t\t\treturn preSearch[ column ].search;\n\t\t\t}\n\n\t\t\t// set\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof regex === 'object') {\n\t\t\t\t// New style options to pass to the search builder\n\t\t\t\t$.extend( preSearch[ column ], regex, {\n\t\t\t\t\tsearch: input\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Old style (with not all options available)\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\tsearch: input,\n\t\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t} );\n\t}\n);\n\n_api_register([\n\t\t'columns().search.fixed()',\n\t\t'column().search.fixed()'\n\t],\n\tfunction ( name, search ) {\n\t\tvar ret = this.iterator( true, 'column', function ( settings, colIdx ) {\n\t\t\tvar fixed = settings.aoColumns[colIdx].searchFixed;\n\n\t\t\tif (! name) {\n\t\t\t\treturn Object.keys(fixed)\n\t\t\t}\n\t\t\telse if (search === undefined) {\n\t\t\t\treturn fixed[name];\n\t\t\t}\n\t\t\telse if (search === null) {\n\t\t\t\tdelete fixed[name];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfixed[name] = search;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} );\n\n\t\treturn name !== undefined && search === undefined\n\t\t\t? ret[0]\n\t\t\t: ret;\n\t}\n);\n/*\n * State API methods\n */\n\n_api_register( 'state()', function ( set, ignoreTime ) {\n\t// getter\n\tif ( ! set ) {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t}\n\n\tvar setMutate = $.extend( true, {}, set );\n\n\t// setter\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ignoreTime !== false ) {\n\t\t\tsetMutate.time = +new Date() + 100;\n\t\t}\n\n\t\t_fnImplementState( settings, setMutate, function(){} );\n\t} );\n} );\n\n\n_api_register( 'state.clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t// Save an empty object\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t} );\n} );\n\n\n_api_register( 'state.loaded()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oLoadedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.save()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSaveState( settings );\n\t} );\n} );\n\n/**\n * Set the libraries that DataTables uses, or the global objects.\n * Note that the arguments can be either way around (legacy support)\n * and the second is optional. See docs.\n */\nDataTable.use = function (arg1, arg2) {\n\t// Reverse arguments for legacy support\n\tvar module = typeof arg1 === 'string'\n\t\t? arg2\n\t\t: arg1;\n\tvar type = typeof arg2 === 'string'\n\t\t? arg2\n\t\t: arg1;\n\n\t// Getter\n\tif (module === undefined && typeof type === 'string') {\n\t\tswitch (type) {\n\t\t\tcase 'lib':\n\t\t\tcase 'jq':\n\t\t\t\treturn $;\n\n\t\t\tcase 'win':\n\t\t\t\treturn window;\n\n\t\t\tcase 'datetime':\n\t\t\t\treturn DataTable.DateTime;\n\n\t\t\tcase 'luxon':\n\t\t\t\treturn __luxon;\n\n\t\t\tcase 'moment':\n\t\t\t\treturn __moment;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Setter\n\tif (type === 'lib' || type === 'jq' || (module && module.fn && module.fn.jquery)) {\n\t\t$ = module;\n\t}\n\telse if (type == 'win' || (module && module.document)) {\n\t\twindow = module;\n\t\tdocument = module.document;\n\t}\n\telse if (type === 'datetime' || (module && module.type === 'DateTime')) {\n\t\tDataTable.DateTime = module;\n\t}\n\telse if (type === 'luxon' || (module && module.FixedOffsetZone)) {\n\t\t__luxon = module;\n\t}\n\telse if (type === 'moment' || (module && module.isMoment)) {\n\t\t__moment = module;\n\t}\n}\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n\tvar is = false;\n\n\t// Test if the first parameter is a window object\n\tif (root && root.document) {\n\t\twindow = root;\n\t\tdocument = root.document;\n\t}\n\n\t// Test if the second parameter is a jQuery object\n\tif (jq && jq.fn && jq.fn.jquery) {\n\t\t$ = jq;\n\t\tis = true;\n\t}\n\n\treturn is;\n}\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @param {string} [version2=current DataTables version] As above, but optional.\n *   If not given the current DataTables version will be used.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = function( version, version2 )\n{\n\tvar aThis = version2 ?\n\t\tversion2.split('.') :\n\t\tDataTable.version.split('.');\n\tvar aThat = version.split('.');\n\tvar iThis, iThat;\n\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\n\t\t// Parts are the same, keep comparing\n\t\tif (iThis === iThat) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Parts are different, return immediately\n\t\treturn iThis > iThat;\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = function ( table )\n{\n\tvar t = $(table).get(0);\n\tvar is = false;\n\n\tif ( table instanceof DataTable.Api ) {\n\t\treturn true;\n\t}\n\n\t$.each( DataTable.settings, function (i, o) {\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\tis = true;\n\t\t}\n\t} );\n\n\treturn is;\n};\n\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = function ( visible )\n{\n\tvar api = false;\n\n\tif ( $.isPlainObject( visible ) ) {\n\t\tapi = visible.api;\n\t\tvisible = visible.visible;\n\t}\n\n\tvar a = DataTable.settings\n\t\t.filter( function (o) {\n\t\t\treturn !visible || (visible && $(o.nTable).is(':visible')) \n\t\t\t\t? true\n\t\t\t\t: false;\n\t\t} )\n\t\t.map( function (o) {\n\t\t\treturn o.nTable;\n\t\t});\n\n\treturn api ?\n\t\tnew _Api( a ) :\n\t\ta;\n};\n\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n/**\n *\n */\n_api_register( '$()', function ( selector, opts ) {\n\tvar\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\tjqRows = $(rows);\n\n\treturn $( [].concat(\n\t\tjqRows.filter( selector ).toArray(),\n\t\tjqRows.find( selector ).toArray()\n\t) );\n} );\n\n\n// jQuery functions to operate on the tables\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\targs[0] = args[0].split( /\\s/ ).map( function ( e ) {\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\te+'.dt' :\n\t\t\t\te;\n\t\t\t} ).join( ' ' );\n\n\t\tvar inst = $( this.tables().nodes() );\n\t\tinst[key].apply( inst, args );\n\t\treturn this;\n\t} );\n} );\n\n\n_api_register( 'clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnClearTable( settings );\n\t} );\n} );\n\n\n_api_register( 'error()', function (msg) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLog( settings, 0, msg );\n\t} );\n} );\n\n\n_api_register( 'settings()', function () {\n\treturn new _Api( this.context, this.context );\n} );\n\n\n_api_register( 'init()', function () {\n\tvar ctx = this.context;\n\treturn ctx.length ? ctx[0].oInit : null;\n} );\n\n\n_api_register( 'data()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t} ).flatten();\n} );\n\n\n_api_register( 'trigger()', function ( name, args, bubbles ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _fnCallbackFire( settings, null, name, args, bubbles );\n\t} ).flatten();\n} );\n\n\n_api_register( 'ready()', function ( fn ) {\n\tvar ctx = this.context;\n\n\t// Get status of first table\n\tif (! fn) {\n\t\treturn ctx.length\n\t\t\t? (ctx[0]._bInitComplete || false)\n\t\t\t: null;\n\t}\n\n\t// Function to run either once the table becomes ready or\n\t// immediately if it is already ready.\n\treturn this.tables().every(function () {\n\t\tif (this.context[0]._bInitComplete) {\n\t\t\tfn.call(this);\n\t\t}\n\t\telse {\n\t\t\tthis.on('init.dt.DT', function () {\n\t\t\t\tfn.call(this);\n\t\t\t});\n\t\t}\n\t} );\n} );\n\n\n_api_register( 'destroy()', function ( remove ) {\n\tremove = remove || false;\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tvar classes   = settings.oClasses;\n\t\tvar table     = settings.nTable;\n\t\tvar tbody     = settings.nTBody;\n\t\tvar thead     = settings.nTHead;\n\t\tvar tfoot     = settings.nTFoot;\n\t\tvar jqTable   = $(table);\n\t\tvar jqTbody   = $(tbody);\n\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\tvar rows      = settings.aoData.map( function (r) { return r ? r.nTr : null; } );\n\t\tvar orderClasses = classes.order;\n\n\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t// should be taken\n\t\tsettings.bDestroying = true;\n\n\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings], true );\n\n\t\t// If not being removed from the document, make all columns visible\n\t\tif ( ! remove ) {\n\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t}\n\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t// for removing them\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t$(window).off('.DT-'+settings.sInstance);\n\n\t\t// When scrolling we had to break the table up - restore it\n\t\tif ( table != thead.parentNode ) {\n\t\t\tjqTable.children('thead').detach();\n\t\t\tjqTable.append( thead );\n\t\t}\n\n\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\tjqTable.children('tfoot').detach();\n\t\t\tjqTable.append( tfoot );\n\t\t}\n\n\t\tsettings.colgroup.remove();\n\n\t\tsettings.aaSorting = [];\n\t\tsettings.aaSortingFixed = [];\n\t\t_fnSortingClasses( settings );\n\n\t\t$('th, td', thead)\n\t\t\t.removeClass(\n\t\t\t\torderClasses.canAsc + ' ' +\n\t\t\t\torderClasses.canDesc + ' ' +\n\t\t\t\torderClasses.isAsc + ' ' +\n\t\t\t\torderClasses.isDesc\n\t\t\t)\n\t\t\t.css('width', '');\n\n\t\t// Add the TR elements back into the table in their original order\n\t\tjqTbody.children().detach();\n\t\tjqTbody.append( rows );\n\n\t\tvar orig = settings.nTableWrapper.parentNode;\n\t\tvar insertBefore = settings.nTableWrapper.nextSibling;\n\n\t\t// Remove the DataTables generated nodes, events and classes\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\tjqTable[ removedMethod ]();\n\t\tjqWrapper[ removedMethod ]();\n\n\t\t// If we need to reattach the table to the document\n\t\tif ( ! remove && orig ) {\n\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\torig.insertBefore( table, insertBefore );\n\n\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t// so we can restore directly to that\n\t\t\tjqTable\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t.removeClass( classes.table );\n\t\t}\n\n\t\t/* Remove the settings object from the settings array */\n\t\tvar idx = DataTable.settings.indexOf(settings);\n\t\tif ( idx !== -1 ) {\n\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t}\n\t} );\n} );\n\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t_api_register( type+'s().every()', function ( fn ) {\n\t\tvar opts = this.selector.opts;\n\t\tvar api = this;\n\t\tvar inst;\n\t\tvar counter = 0;\n\n\t\treturn this.iterator( 'every', function ( settings, selectedIdx, tableIdx ) {\n\t\t\tinst = api[ type ](selectedIdx, opts);\n\n\t\t\tif (type === 'cell') {\n\t\t\t\tfn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfn.call(inst, selectedIdx, tableIdx, counter);\n\t\t\t}\n\n\t\t\tcounter++;\n\t\t} );\n\t} );\n} );\n\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register( 'i18n()', function ( token, def, plural ) {\n\tvar ctx = this.context[0];\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\n\tif ( resolved === undefined ) {\n\t\tresolved = def;\n\t}\n\n\tif ( $.isPlainObject( resolved ) ) {\n\t\tresolved = plural !== undefined && resolved[ plural ] !== undefined ?\n\t\t\tresolved[ plural ] :\n\t\t\tresolved._;\n\t}\n\n\treturn typeof resolved === 'string'\n\t\t? resolved.replace( '%d', plural ) // nb: plural might be undefined,\n\t\t: resolved;\n} );\n\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"2.1.8\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n\t/**\n\t * Flag to indicate if the filtering should be case insensitive or not\n\t */\n\t\"caseInsensitive\": true,\n\n\t/**\n\t * Applied search term\n\t */\n\t\"search\": \"\",\n\n\t/**\n\t * Flag to indicate if the search term should be interpreted as a\n\t * regular expression (true) or not (false) and therefore and special\n\t * regex characters escaped.\n\t */\n\t\"regex\": false,\n\n\t/**\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t */\n\t\"smart\": true,\n\n\t/**\n\t * Flag to indicate if DataTables should only trigger a search when\n\t * the return key is pressed.\n\t */\n\t\"return\": false\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n\t/**\n\t * TR element for the row\n\t */\n\t\"nTr\": null,\n\n\t/**\n\t * Array of TD elements for each row. This is null until the row has been\n\t * created.\n\t */\n\t\"anCells\": null,\n\n\t/**\n\t * Data object from the original data source for the row. This is either\n\t * an array if using the traditional form of DataTables, or an object if\n\t * using mData options. The exact type will depend on the passed in\n\t * data from the data source, or will be an array if using DOM a data\n\t * source.\n\t */\n\t\"_aData\": [],\n\n\t/**\n\t * Sorting data cache - this array is ostensibly the same length as the\n\t * number of columns (although each index is generated only as it is\n\t * needed), and holds the data that is used for sorting each column in the\n\t * row. We do this cache generation at the start of the sort in order that\n\t * the formatting of the sort data need be done only once for each cell\n\t * per sort. This array should not be read from or written to by anything\n\t * other than the master sorting methods.\n\t */\n\t\"_aSortData\": null,\n\n\t/**\n\t * Per cell filtering data cache. As per the sort data cache, used to\n\t * increase the performance of the filtering in DataTables\n\t */\n\t\"_aFilterData\": null,\n\n\t/**\n\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t * in this case a string rather than an array. This is easily computed with\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t * needed on every search (memory traded for performance)\n\t */\n\t\"_sFilterRow\": null,\n\n\t/**\n\t * Denote if the original data source was from the DOM, or the data source\n\t * object. This is used for invalidating data, so DataTables can\n\t * automatically read data from the original source, unless uninstructed\n\t * otherwise.\n\t */\n\t\"src\": null,\n\n\t/**\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t * object, but want to know the index\n\t */\n\t\"idx\": -1,\n\n\t/**\n\t * Cached display value\n\t */\n\tdisplayData: null\n};\n\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n\t/**\n\t * Column index.\n\t */\n\t\"idx\": null,\n\n\t/**\n\t * A list of the columns that sorting should occur on when this column\n\t * is sorted. That this property is an array allows multi-column sorting\n\t * to be defined for a column (for example first name / last name columns\n\t * would benefit from this). The values are integers pointing to the\n\t * columns to be sorted on (typically it will be a single integer pointing\n\t * at itself, but that doesn't need to be the case).\n\t */\n\t\"aDataSort\": null,\n\n\t/**\n\t * Define the sorting directions that are applied to the column, in sequence\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t * as the sorting direction when the column if first sorted (clicked on).\n\t * Sort it again (click again) and it will move on to the next index.\n\t * Repeat until loop.\n\t */\n\t\"asSorting\": null,\n\n\t/**\n\t * Flag to indicate if the column is searchable, and thus should be included\n\t * in the filtering or not.\n\t */\n\t\"bSearchable\": null,\n\n\t/**\n\t * Flag to indicate if the column is sortable or not.\n\t */\n\t\"bSortable\": null,\n\n\t/**\n\t * Flag to indicate if the column is currently visible in the table or not\n\t */\n\t\"bVisible\": null,\n\n\t/**\n\t * Store for manual type assignment using the `column.type` option. This\n\t * is held in store so we can manipulate the column's `sType` property.\n\t */\n\t\"_sManualType\": null,\n\n\t/**\n\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t * source for filtering or sorting. True is either are.\n\t */\n\t\"_bAttrSrc\": false,\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t */\n\t\"fnCreatedCell\": null,\n\n\t/**\n\t * Function to get data from a cell in a column. You should <b>never</b>\n\t * access data directly through _aData internally in DataTables - always use\n\t * the method attached to this property. It allows mData to function as\n\t * required. This function is automatically assigned by the column\n\t * initialisation method\n\t */\n\t\"fnGetData\": null,\n\n\t/**\n\t * Function to set data for a cell in the column. You should <b>never</b>\n\t * set the data directly to _aData internally in DataTables - always use\n\t * this method. It allows mData to function as required. This function\n\t * is automatically assigned by the column initialisation method\n\t */\n\t\"fnSetData\": null,\n\n\t/**\n\t * Property to read the value for the cells in the column from the data\n\t * source array / object. If null, then the default content is used, if a\n\t * function is given then the return from the function is used.\n\t */\n\t\"mData\": null,\n\n\t/**\n\t * Partner property to mData which is used (only when defined) to get\n\t * the data - i.e. it is basically the same as mData, but without the\n\t * 'set' option, and also the data fed to it is the result from mData.\n\t * This is the rendering method to match the data method of mData.\n\t */\n\t\"mRender\": null,\n\n\t/**\n\t * The class to apply to all TD elements in the table's TBODY for the column\n\t */\n\t\"sClass\": null,\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t */\n\t\"sContentPadding\": null,\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t */\n\t\"sDefaultContent\": null,\n\n\t/**\n\t * Name for the column, allowing reference to the column by name as well as\n\t * by index (needs a lookup to work by name).\n\t */\n\t\"sName\": null,\n\n\t/**\n\t * Custom sorting data type - defines which of the available plug-ins in\n\t * afnSortData the custom sorting will use - if any is defined.\n\t */\n\t\"sSortDataType\": 'std',\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column\n\t */\n\t\"sSortingClass\": null,\n\n\t/**\n\t * Title of the column - what is seen in the TH element (nTh).\n\t */\n\t\"sTitle\": null,\n\n\t/**\n\t * Column sorting and filtering type\n\t */\n\t\"sType\": null,\n\n\t/**\n\t * Width of the column\n\t */\n\t\"sWidth\": null,\n\n\t/**\n\t * Width of the column when it was first \"encountered\"\n\t */\n\t\"sWidthOrig\": null,\n\n\t/** Cached string which is the longest in the column */\n\tmaxLenString: null,\n\n\t/**\n\t * Store for named searches\n\t */\n\tsearchFixed: null\n};\n\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n\t/**\n\t * An array of data to use for the table, passed in at initialisation which\n\t * will be used in preference to any data which is already in the DOM. This is\n\t * particularly useful for constructing tables purely in Javascript, for\n\t * example with a custom Ajax call.\n\t */\n\t\"aaData\": null,\n\n\n\t/**\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t * initialisation. You can define which column(s) the sort is performed\n\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t * should contain an array for each column to be sorted initially containing\n\t * the column's index and a direction string ('asc' or 'desc').\n\t */\n\t\"aaSorting\": [[0,'asc']],\n\n\n\t/**\n\t * This parameter is basically identical to the `sorting` parameter, but\n\t * cannot be overridden by user interaction with the table. What this means\n\t * is that you could have a column (visible or hidden) which the sorting\n\t * will always be forced on first - any sorting after that (from the user)\n\t * will then be performed as required. This can be useful for grouping rows\n\t * together.\n\t */\n\t\"aaSortingFixed\": [],\n\n\n\t/**\n\t * DataTables can be instructed to load data to display in the table from a\n\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t *\n\t * The `ajax` property has three different modes of operation, depending on\n\t * how it is defined. These are:\n\t *\n\t * * `string` - Set the URL from where the data should be loaded from.\n\t * * `object` - Define properties for `jQuery.ajax`.\n\t * * `function` - Custom data get function\n\t *\n\t * `string`\n\t * --------\n\t *\n\t * As a string, the `ajax` property simply defines the URL from which\n\t * DataTables will load data.\n\t *\n\t * `object`\n\t * --------\n\t *\n\t * As an object, the parameters in the object are passed to\n\t * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n\t * of the Ajax request. DataTables has a number of default parameters which\n\t * you can override using this option. Please refer to the jQuery\n\t * documentation for a full description of the options available, although\n\t * the following parameters provide additional options in DataTables or\n\t * require special consideration:\n\t *\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t *   can also be used as a function to manipulate the data DataTables sends\n\t *   to the server. The function takes a single parameter, an object of\n\t *   parameters with the values that DataTables has readied for sending. An\n\t *   object may be returned which will be merged into the DataTables\n\t *   defaults, or you can add the items to the object that was passed in and\n\t *   not return anything from the function. This supersedes `fnServerParams`\n\t *   from DataTables 1.9-.\n\t *\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t *   from an Ajax source or for server-side processing - this parameter\n\t *   allows that property to be changed. You can use Javascript dotted\n\t *   object notation to get a data source for multiple levels of nesting, or\n\t *   it my be used as a function. As a function it takes a single parameter,\n\t *   the JSON returned from the server, which can be manipulated as\n\t *   required, with the returned value being that used by DataTables as the\n\t *   data source for the table.\n\t *\n\t * * `success` - Should not be overridden it is used internally in\n\t *   DataTables. To manipulate / transform the data returned by the server\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t *\n\t * `function`\n\t * ----------\n\t *\n\t * As a function, making the Ajax call is left up to yourself allowing\n\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t * than Ajax could be used to obtain the required data, such as Web storage\n\t * or an AIR database.\n\t *\n\t * The function is given four parameters and no return is required. The\n\t * parameters are:\n\t *\n\t * 1. _object_ - Data to send to the server\n\t * 2. _function_ - Callback function that must be executed when the required\n\t *    data has been obtained. That data should be passed into the callback\n\t *    as the only parameter\n\t * 3. _object_ - DataTables settings object for the table\n\t */\n\t\"ajax\": null,\n\n\n\t/**\n\t * This parameter allows you to readily specify the entries in the length drop\n\t * down menu that DataTables shows when pagination is enabled. It can be\n\t * either a 1D array of options which will be used for both the displayed\n\t * option and the value, or a 2D array which will use the array in the first\n\t * position as the value, and the array in the second position as the\n\t * displayed options (useful for language strings such as 'All').\n\t *\n\t * Note that the `pageLength` property will be automatically set to the\n\t * first value given in this array, unless `pageLength` is also provided.\n\t */\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t/**\n\t * The `columns` option in the initialisation parameter allows you to define\n\t * details about the way individual columns behave. For a full list of\n\t * column options that can be set, please see\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t * define your columns, you must have an entry in the array for every single\n\t * column that you have in your table (these can be null if you don't which\n\t * to specify any options).\n\t */\n\t\"aoColumns\": null,\n\n\t/**\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t * column, multiple columns, or all columns, using the `targets` property of\n\t * each object in the array. This allows great flexibility when creating\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t * columns you specifically want. `columnDefs` may use any of the column\n\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t * have `targets` defined in each object in the array. Values in the `targets`\n\t * array may be:\n\t *   <ul>\n\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t *     <li>a negative integer - column index counting from the right</li>\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t *   </ul>\n\t */\n\t\"aoColumnDefs\": null,\n\n\n\t/**\n\t * Basically the same as `search`, this parameter defines the individual column\n\t * filtering state at initialisation time. The array must be of the same size\n\t * as the number of columns, and each element be an object with the parameters\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t * accepted and the default will be used.\n\t */\n\t\"aoSearchCols\": [],\n\n\n\t/**\n\t * Enable or disable automatic column width calculation. This can be disabled\n\t * as an optimisation (it takes some time to calculate the widths) if the\n\t * tables widths are passed in using `columns`.\n\t */\n\t\"bAutoWidth\": true,\n\n\n\t/**\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t * are using an Ajax or JS data source for the table. This option, when set to\n\t * true, will cause DataTables to defer the creation of the table elements for\n\t * each row until they are needed for a draw - saving a significant amount of\n\t * time.\n\t */\n\t\"bDeferRender\": true,\n\n\n\t/**\n\t * Replace a DataTable which matches the given selector and replace it with\n\t * one which has the properties of the new initialisation object passed. If no\n\t * table matches the selector, then the new DataTable will be constructed as\n\t * per normal.\n\t */\n\t\"bDestroy\": false,\n\n\n\t/**\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t * that it allows the end user to input multiple words (space separated) and\n\t * will match a row containing those words, even if not in the order that was\n\t * specified (this allow matching across multiple columns). Note that if you\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t * default filtering input box and retain filtering abilities, please use\n\t * {@link DataTable.defaults.dom}.\n\t */\n\t\"bFilter\": true,\n\n\t/**\n\t * Used only for compatiblity with DT1\n\t * @deprecated\n\t */\n\t\"bInfo\": true,\n\n\t/**\n\t * Used only for compatiblity with DT1\n\t * @deprecated\n\t */\n\t\"bLengthChange\": true,\n\n\t/**\n\t * Enable or disable pagination.\n\t */\n\t\"bPaginate\": true,\n\n\n\t/**\n\t * Enable or disable the display of a 'processing' indicator when the table is\n\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t * large amounts of data where it can take a noticeable amount of time to sort\n\t * the entries.\n\t */\n\t\"bProcessing\": false,\n\n\n\t/**\n\t * Retrieve the DataTables object for the given selector. Note that if the\n\t * table has already been initialised, this parameter will cause DataTables\n\t * to simply return the object that has already been set up - it will not take\n\t * account of any changes you might have made to the initialisation object\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t * you need.\n\t */\n\t\"bRetrieve\": false,\n\n\n\t/**\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t * the table's viewport to the given height at all times (useful for layout).\n\t * However, this can look odd when filtering data down to a small data set,\n\t * and the footer is left \"floating\" further down. This parameter (when\n\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t * the result set will fit within the given Y height.\n\t */\n\t\"bScrollCollapse\": false,\n\n\n\t/**\n\t * Configure DataTables to use server-side processing. Note that the\n\t * `ajax` parameter must also be given in order to give DataTables a\n\t * source to obtain the required data for each draw.\n\t */\n\t\"bServerSide\": false,\n\n\n\t/**\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t * disabled by the `sortable` option for each column.\n\t */\n\t\"bSort\": true,\n\n\n\t/**\n\t * Enable or display DataTables' ability to sort multiple columns at the\n\t * same time (activated by shift-click by the user).\n\t */\n\t\"bSortMulti\": true,\n\n\n\t/**\n\t * Allows control over whether DataTables should use the top (true) unique\n\t * cell that is found for a single column, or the bottom (false - default).\n\t * This is useful when using complex headers.\n\t */\n\t\"bSortCellsTop\": null,\n\n\n\t/**\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t * presented as a feature switch as it can increase processing time (while\n\t * classes are removed and added) so for large data sets you might want to\n\t * turn this off.\n\t */\n\t\"bSortClasses\": true,\n\n\n\t/**\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t * used to save table display information such as pagination information,\n\t * display length, filtering and sorting. As such when the end user reloads\n\t * the page the display display will match what thy had previously set up.\n\t */\n\t\"bStateSave\": false,\n\n\n\t/**\n\t * This function is called when a TR element is created (and all TD child\n\t * elements have been inserted), or registered if using a DOM source, allowing\n\t * manipulation of the TR element (adding classes etc).\n\t */\n\t\"fnCreatedRow\": null,\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify any aspect you want about the created DOM.\n\t */\n\t\"fnDrawCallback\": null,\n\n\n\t/**\n\t * Identical to fnHeaderCallback() but for the table footer this function\n\t * allows you to modify the table footer on every 'draw' event.\n\t */\n\t\"fnFooterCallback\": null,\n\n\n\t/**\n\t * When rendering large numbers in the information element for the table\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t * function will override the default method DataTables uses.\n\t */\n\t\"fnFormatNumber\": function ( toFormat ) {\n\t\treturn toFormat.toString().replace(\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\tthis.oLanguage.sThousands\n\t\t);\n\t},\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify the header row. This can be used to calculate and\n\t * display useful information about the table.\n\t */\n\t\"fnHeaderCallback\": null,\n\n\n\t/**\n\t * The information element can be used to convey information about the current\n\t * state of the table. Although the internationalisation options presented by\n\t * DataTables are quite capable of dealing with most customisations, there may\n\t * be times where you wish to customise the string further. This callback\n\t * allows you to do exactly that.\n\t */\n\t\"fnInfoCallback\": null,\n\n\n\t/**\n\t * Called when the table has been initialised. Normally DataTables will\n\t * initialise sequentially and there will be no need for this function,\n\t * however, this does not hold true when using external language information\n\t * since that is obtained using an async XHR call.\n\t */\n\t\"fnInitComplete\": null,\n\n\n\t/**\n\t * Called at the very start of each table draw and can be used to cancel the\n\t * draw by returning false, any other return (including undefined) results in\n\t * the full draw occurring).\n\t */\n\t\"fnPreDrawCallback\": null,\n\n\n\t/**\n\t * This function allows you to 'post process' each row after it have been\n\t * generated for each table draw, but before it is rendered on screen. This\n\t * function might be used for setting the row class name etc.\n\t */\n\t\"fnRowCallback\": null,\n\n\n\t/**\n\t * Load the table state. With this function you can define from where, and how, the\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t */\n\t\"fnStateLoadCallback\": function ( settings ) {\n\t\ttry {\n\t\t\treturn JSON.parse(\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn {};\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the saved state prior to loading that state.\n\t * This callback is called when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state. Note that for\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t * a plug-in.\n\t */\n\t\"fnStateLoadParams\": null,\n\n\n\t/**\n\t * Callback that is called when the state has been loaded from the state saving method\n\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t */\n\t\"fnStateLoaded\": null,\n\n\n\t/**\n\t * Save the table state. This function allows you to define where and how the state\n\t * information for the table is stored By default DataTables will use `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t */\n\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\ttry {\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\tJSON.stringify( data )\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// noop\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the state to be saved. Called when the table\n\t * has changed state a new state save is required. This method allows modification of\n\t * the state saving object prior to actually doing the save, including addition or\n\t * other state properties or modification. Note that for plug-in authors, you should\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t */\n\t\"fnStateSaveParams\": null,\n\n\n\t/**\n\t * Duration for which the saved state information is considered valid. After this period\n\t * has elapsed the state will be returned to the default.\n\t * Value is given in seconds.\n\t */\n\t\"iStateDuration\": 7200,\n\n\n\t/**\n\t * Number of rows to display on a single page when using pagination. If\n\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t * this to a custom setting using a pop-up menu.\n\t */\n\t\"iDisplayLength\": 10,\n\n\n\t/**\n\t * Define the starting point for data display when using DataTables with\n\t * pagination. Note that this parameter is the number of records, rather than\n\t * the page number, so if you have 10 records per page and want to start on\n\t * the third page, it should be \"20\".\n\t */\n\t\"iDisplayStart\": 0,\n\n\n\t/**\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t * allows you to tab through the controls and press the enter key to activate them.\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t * disable built-in keyboard navigation.\n\t */\n\t\"iTabIndex\": 0,\n\n\n\t/**\n\t * Classes that DataTables assigns to the various components and features\n\t * that it adds to the HTML table. This allows classes to be configured\n\t * during initialisation in addition to through the static\n\t * {@link DataTable.ext.oStdClasses} object).\n\t */\n\t\"oClasses\": {},\n\n\n\t/**\n\t * All strings that DataTables uses in the user interface that it creates\n\t * are defined in this object, allowing you to modified them individually or\n\t * completely replace them all as required.\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t * must be internationalised as well).\n\t\t */\n\t\t\"oAria\": {\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be sorted\n\t\t\t */\n\t\t\t\"orderable\": \": Activate to sort\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column is currently being sorted\n\t\t\t */\n\t\t\t\"orderableReverse\": \": Activate to invert sorting\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column is currently being \n\t\t\t * sorted and next step is to remove sorting\n\t\t\t */\n\t\t\t\"orderableRemove\": \": Activate to remove sorting\",\n\n\t\t\tpaginate: {\n\t\t\t\tfirst: 'First',\n\t\t\t\tlast: 'Last',\n\t\t\t\tnext: 'Next',\n\t\t\t\tprevious: 'Previous',\n\t\t\t\tnumber: ''\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t * control types.\n\t\t */\n\t\t\"oPaginate\": {\n\t\t\t/**\n\t\t\t * Label and character for first page button («)\n\t\t\t */\n\t\t\t\"sFirst\": \"\\u00AB\",\n\n\t\t\t/**\n\t\t\t * Last page button (»)\n\t\t\t */\n\t\t\t\"sLast\": \"\\u00BB\",\n\n\t\t\t/**\n\t\t\t * Next page button (›)\n\t\t\t */\n\t\t\t\"sNext\": \"\\u203A\",\n\n\t\t\t/**\n\t\t\t * Previous page button (‹)\n\t\t\t */\n\t\t\t\"sPrevious\": \"\\u2039\",\n\t\t},\n\n\t\t/**\n\t\t * Plural object for the data type the table is showing\n\t\t */\n\t\tentries: {\n\t\t\t_: \"entries\",\n\t\t\t1: \"entry\"\n\t\t},\n\n\t\t/**\n\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t * instead (either the default or given value).\n\t\t */\n\t\t\"sEmptyTable\": \"No data available in table\",\n\n\n\t\t/**\n\t\t * This string gives information to the end user about the information\n\t\t * that is current on display on the page. The following tokens can be\n\t\t * used in the string and will be dynamically replaced as the table\n\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t * removed as needed by the language requires:\n\t\t *\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t * * `\\_PAGE\\_` - Current page number\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t */\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n\n\n\t\t/**\n\t\t * Display information string for when the table is empty. Typically the\n\t\t * format of this string should match `info`.\n\t\t */\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n\n\n\t\t/**\n\t\t * When a user filters the information in a table, this string is appended\n\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t */\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n\n\n\t\t/**\n\t\t * If can be useful to append extra information to the info string at times,\n\t\t * and this variable does exactly that. This information will be appended to\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t * being used) at all times.\n\t\t */\n\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t/**\n\t\t * This decimal place operator is a little different from the other\n\t\t * language options since DataTables doesn't output floating point\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t * what this parameter does is modify the sort methods of the table so\n\t\t * that numbers which are in a format which has a character other than\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t *\n\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t * the same table and still be sortable, the table must be consistent.\n\t\t * However, multiple different tables on the page can use different\n\t\t * decimal place characters.\n\t\t */\n\t\t\"sDecimal\": \"\",\n\n\n\t\t/**\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t * used to format large numbers that are used in the table information.\n\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t * character you wish with this parameter.\n\t\t */\n\t\t\"sThousands\": \",\",\n\n\n\t\t/**\n\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t * with a custom select box if required.\n\t\t */\n\t\t\"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\n\n\n\t\t/**\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t * parameter is not used when loading data by server-side processing, just\n\t\t * Ajax sourced data with client-side processing.\n\t\t */\n\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t/**\n\t\t * Text which is displayed when the table is processing a user action\n\t\t * (usually a sort command or similar).\n\t\t */\n\t\t\"sProcessing\": \"\",\n\n\n\t\t/**\n\t\t * Details the actions that will be taken when the user types into the\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t * then the input box is appended to the string automatically.\n\t\t */\n\t\t\"sSearch\": \"Search:\",\n\n\n\t\t/**\n\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t */\n\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t/**\n\t\t * All of the language information can be stored in a file on the\n\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t * and the object has the same properties as the oLanguage object in the\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t * the example language files to see how this works in action.\n\t\t */\n\t\t\"sUrl\": \"\",\n\n\n\t\t/**\n\t\t * Text shown inside the table records when the is no information to be\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t * information in the table at all (regardless of filtering).\n\t\t */\n\t\t\"sZeroRecords\": \"No matching records found\"\n\t},\n\n\n\t/** The initial data order is reversed when `desc` ordering */\n\torderDescReverse: true,\n\n\n\t/**\n\t * This parameter allows you to have define the global filtering state at\n\t * initialisation time. As an object the `search` parameter must be\n\t * defined, but all other parameters are optional. When `regex` is true,\n\t * the search string will be treated as a regular expression, when false\n\t * (default) it will be treated as a straight string. When `smart`\n\t * DataTables will use it's smart filtering methods (to word match at\n\t * any point in the data), when false this will not be done.\n\t */\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t/**\n\t * Table and control layout. This replaces the legacy `dom` option.\n\t */\n\tlayout: {\n\t\ttopStart: 'pageLength',\n\t\ttopEnd: 'search',\n\t\tbottomStart: 'info',\n\t\tbottomEnd: 'paging'\n\t},\n\n\n\t/**\n\t * Legacy DOM layout option\n\t */\n\t\"sDom\": null,\n\n\n\t/**\n\t * Search delay option. This will throttle full table searches that use the\n\t * DataTables provided search input element (it does not effect calls to\n\t * `dt-api search()`, providing a delay before the search is made.\n\t */\n\t\"searchDelay\": null,\n\n\n\t/**\n\t * DataTables features six different built-in options for the buttons to\n\t * display for pagination control:\n\t *\n\t * * `numbers` - Page number buttons only\n\t * * `simple` - 'Previous' and 'Next' buttons only\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t */\n\t\"sPaginationType\": \"\",\n\n\n\t/**\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t * certain layout, or you have a large number of columns in the table, you\n\t * can enable x-scrolling to show the table in a viewport, which can be\n\t * scrolled. This property can be `true` which will allow the table to\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t * is recommended.\n\t */\n\t\"sScrollX\": \"\",\n\n\n\t/**\n\t * This property can be used to force a DataTable to use more width than it\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t * table which requires to be well spaced, this parameter is useful for\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t * measurement).\n\t */\n\t\"sScrollXInner\": \"\",\n\n\n\t/**\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t * to the given height, and enable scrolling for any data which overflows the\n\t * current viewport. This can be used as an alternative to paging to display\n\t * a lot of data in a small area (although paging and scrolling can both be\n\t * enabled at the same time). This property can be any CSS unit, or a number\n\t * (in which case it will be treated as a pixel measurement).\n\t */\n\t\"sScrollY\": \"\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t * processing or Ajax sourced data.\n\t */\n\t\"sServerMethod\": \"GET\",\n\n\n\t/**\n\t * DataTables makes use of renderers when displaying HTML elements for\n\t * a table. These renderers can be added or modified by plug-ins to\n\t * generate suitable mark-up for a site. For example the Bootstrap\n\t * integration plug-in for DataTables uses a paging button renderer to\n\t * display pagination buttons in the mark-up required by Bootstrap.\n\t *\n\t * For further information about the renderers available see\n\t * DataTable.ext.renderer\n\t */\n\t\"renderer\": null,\n\n\n\t/**\n\t * Set the data property name that DataTables should use to get a row's id\n\t * to set as the `id` property in the node.\n\t */\n\t\"rowId\": \"DT_RowId\",\n\n\n\t/**\n\t * Caption value\n\t */\n\t\"caption\": null,\n\n\n\t/**\n\t * For server-side processing - use the data from the DOM for the first draw\n\t */\n\tiDeferLoading: null\n};\n\n_fnHungarianMap( DataTable.defaults );\n\n\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n\t/**\n\t * Define which column(s) an order will occur on for this column. This\n\t * allows a column's ordering to take multiple columns into account when\n\t * doing a sort or use the data from a different column. For example first\n\t * name / last name columns make sense to do a multi-column sort over the\n\t * two columns.\n\t */\n\t\"aDataSort\": null,\n\t\"iDataSort\": -1,\n\n\tariaTitle: '',\n\n\n\t/**\n\t * You can control the default ordering direction, and even alter the\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t * using this parameter.\n\t */\n\t\"asSorting\": [ 'asc', 'desc', '' ],\n\n\n\t/**\n\t * Enable or disable filtering on the data in this column.\n\t */\n\t\"bSearchable\": true,\n\n\n\t/**\n\t * Enable or disable ordering on this column.\n\t */\n\t\"bSortable\": true,\n\n\n\t/**\n\t * Enable or disable the display of this column.\n\t */\n\t\"bVisible\": true,\n\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t */\n\t\"fnCreatedCell\": null,\n\n\n\t/**\n\t * This property can be used to read data from any data source property,\n\t * including deeply nested objects / properties. `data` can be given in a\n\t * number of different ways which effect its behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object. Note that\n\t *      function notation is recommended for use in `render` rather than\n\t *      `data` as it is much simpler to use as a renderer.\n\t * * `null` - use the original data source for the row rather than plucking\n\t *   data directly from it. This action has effects on two other\n\t *   initialisation options:\n\t *    * `defaultContent` - When null is given as the `data` option and\n\t *      `defaultContent` is specified for the column, the value defined by\n\t *      `defaultContent` will be used for the cell.\n\t *    * `render` - When null is used for the `data` option and the `render`\n\t *      option is specified for the column, the whole data source for the\n\t *      row is used for the renderer.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * `{array|object}` The data source for the row\n\t *      * `{string}` The type call data requested - this will be 'set' when\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t *        when gathering data. Note that when `undefined` is given for the\n\t *        type DataTables expects to get the raw data for the object back<\n\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t *    * Return:\n\t *      * The return value from the function is not required when 'set' is\n\t *        the type of call, but otherwise the return is what will be used\n\t *        for the data requested.\n\t *\n\t * Note that `data` is a getter and setter option. If you just require\n\t * formatting of data for output, you will likely want to use `render` which\n\t * is simply a getter and thus simpler to use.\n\t *\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t * name change reflects the flexibility of this property and is consistent\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t * be used by DataTables, as it automatically maps the old name to the new\n\t * if required.\n\t */\n\t\"mData\": null,\n\n\n\t/**\n\t * This property is the rendering partner to `data` and it is suggested that\n\t * when you want to manipulate data for display (including filtering,\n\t * sorting etc) without altering the underlying data for the table, use this\n\t * property. `render` can be considered to be the the read only companion to\n\t * `data` which is read / write (then as such more complex). Like `data`\n\t * this option can be given in a number of different ways to effect its\n\t * behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object.\n\t * * `object` - use different data for the different data types requested by\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t *   of the object is the data type the property refers to and the value can\n\t *   defined using an integer, string or function using the same rules as\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t *   This is the default value to use if you haven't specified a value for\n\t *   the data type requested by DataTables.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * {array|object} The data source for the row (based on `data`)\n\t *      * {string} The type call data requested - this will be 'filter',\n\t *        'display', 'type' or 'sort'.\n\t *      * {array|object} The full data source for the row (not based on\n\t *        `data`)\n\t *    * Return:\n\t *      * The return value from the function is what will be used for the\n\t *        data requested.\n\t */\n\t\"mRender\": null,\n\n\n\t/**\n\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t */\n\t\"sCellType\": \"td\",\n\n\n\t/**\n\t * Class to give to each cell in this column.\n\t */\n\t\"sClass\": \"\",\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t * Generally you shouldn't need this!\n\t */\n\t\"sContentPadding\": \"\",\n\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because `data`\n\t * is set to null, or because the data source itself is null).\n\t */\n\t\"sDefaultContent\": null,\n\n\n\t/**\n\t * This parameter is only used in DataTables' server-side processing. It can\n\t * be exceptionally useful to know what columns are being displayed on the\n\t * client side, and to map these to database fields. When defined, the names\n\t * also allow DataTables to reorder information from the server if it comes\n\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t * client-side, your server-side code does not also need updating).\n\t */\n\t\"sName\": \"\",\n\n\n\t/**\n\t * Defines a data source type for the ordering which can be used to read\n\t * real-time information from the table (updating the internally cached\n\t * version) prior to ordering. This allows ordering to occur on user\n\t * editable elements such as form inputs.\n\t */\n\t\"sSortDataType\": \"std\",\n\n\n\t/**\n\t * The title of this column.\n\t */\n\t\"sTitle\": null,\n\n\n\t/**\n\t * The type allows you to specify how the data for this column will be\n\t * ordered. Four types (string, numeric, date and html (which will strip\n\t * HTML tags before ordering)) are currently available. Note that only date\n\t * formats understood by Javascript's Date() object will be accepted as type\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t * through plug-ins.\n\t */\n\t\"sType\": null,\n\n\n\t/**\n\t * Defining the width of the column, this parameter may take any CSS value\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t * been given a specific width through this interface ensuring that the table\n\t * remains readable.\n\t */\n\t\"sWidth\": null\n};\n\n_fnHungarianMap( DataTable.defaults.column );\n\n\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n */\nDataTable.models.oSettings = {\n\t/**\n\t * Primary features of DataTables and their enablement state.\n\t */\n\t\"oFeatures\": {\n\n\t\t/**\n\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t * optimum table and columns widths (true) or not (false).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bAutoWidth\": null,\n\n\t\t/**\n\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t * needed by a driven page draw. This can give a significant speed\n\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t * difference at all for DOM and server-side processing tables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bDeferRender\": null,\n\n\t\t/**\n\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bFilter\": null,\n\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bInfo\": true,\n\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bLengthChange\": true,\n\n\t\t/**\n\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t * changing must also be disabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bPaginate\": null,\n\n\t\t/**\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t * user request - typically an Ajax request for server-side processing.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bProcessing\": null,\n\n\t\t/**\n\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t * get all data from the server for every draw - there is no filtering,\n\t\t * sorting or paging done on the client-side.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bServerSide\": null,\n\n\t\t/**\n\t\t * Sorting enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSort\": null,\n\n\t\t/**\n\t\t * Multi-column sorting\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortMulti\": null,\n\n\t\t/**\n\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t * there is a lot of DOM interaction.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortClasses\": null,\n\n\t\t/**\n\t\t * State saving enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bStateSave\": null\n\t},\n\n\n\t/**\n\t * Scrolling settings for a table.\n\t */\n\t\"oScroll\": {\n\t\t/**\n\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t * table container down to the height of the table (when true).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bCollapse\": null,\n\n\t\t/**\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t * during table initialisation.\n\t\t */\n\t\t\"iBarWidth\": 0,\n\n\t\t/**\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t * disabled if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sX\": null,\n\n\t\t/**\n\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t * should not need to use this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @deprecated\n\t\t */\n\t\t\"sXInner\": null,\n\n\t\t/**\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t * if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sY\": null\n\t},\n\n\t/**\n\t * Language information for the table.\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Information callback function. See\n\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t */\n\t\t\"fnInfoCallback\": null\n\t},\n\n\t/**\n\t * Browser support parameters\n\t */\n\t\"oBrowser\": {\n\t\t/**\n\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t * scrolling container - needed for rtl language layout, although not\n\t\t * all browsers move the scrollbar (Safari).\n\t\t */\n\t\t\"bScrollbarLeft\": false,\n\n\t\t/**\n\t\t * Browser scrollbar width\n\t\t */\n\t\t\"barWidth\": 0\n\t},\n\n\n\t\"ajax\": null,\n\n\n\t/**\n\t * Array referencing the nodes which are used for the features. The\n\t * parameters of this object match what is allowed by sDom - i.e.\n\t *   <ul>\n\t *     <li>'l' - Length changing</li>\n\t *     <li>'f' - Filtering input</li>\n\t *     <li>'t' - The table!</li>\n\t *     <li>'i' - Information</li>\n\t *     <li>'p' - Pagination</li>\n\t *     <li>'r' - pRocessing</li>\n\t *   </ul>\n\t */\n\t\"aanFeatures\": [],\n\n\t/**\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t * information.\n\t */\n\t\"aoData\": [],\n\n\t/**\n\t * Array of indexes which are in the current display (after filtering etc)\n\t */\n\t\"aiDisplay\": [],\n\n\t/**\n\t * Array of indexes for display - no filtering\n\t */\n\t\"aiDisplayMaster\": [],\n\n\t/**\n\t * Map of row ids to data indexes\n\t */\n\t\"aIds\": {},\n\n\t/**\n\t * Store information about each column that is in use\n\t */\n\t\"aoColumns\": [],\n\n\t/**\n\t * Store information about the table's header\n\t */\n\t\"aoHeader\": [],\n\n\t/**\n\t * Store information about the table's footer\n\t */\n\t\"aoFooter\": [],\n\n\t/**\n\t * Store the applied global search information in case we want to force a\n\t * research or compare the old search to a new one.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"oPreviousSearch\": {},\n\n\t/**\n\t * Store for named searches\n\t */\n\tsearchFixed: {},\n\n\t/**\n\t * Store the applied search for each column - see\n\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t * filtering information for each column.\n\t */\n\t\"aoPreSearchCols\": [],\n\n\t/**\n\t * Sorting that is applied to the table. Note that the inner arrays are\n\t * used in the following manner:\n\t * <ul>\n\t *   <li>Index 0 - column number</li>\n\t *   <li>Index 1 - current sorting direction</li>\n\t * </ul>\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aaSorting\": null,\n\n\t/**\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t * aaSorting).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aaSortingFixed\": [],\n\n\t/**\n\t * If restoring a table - we should restore its width\n\t */\n\t\"sDestroyWidth\": 0,\n\n\t/**\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t */\n\t\"aoRowCallback\": [],\n\n\t/**\n\t * Callback functions for the header on each draw.\n\t */\n\t\"aoHeaderCallback\": [],\n\n\t/**\n\t * Callback function for the footer on each draw.\n\t */\n\t\"aoFooterCallback\": [],\n\n\t/**\n\t * Array of callback functions for draw callback functions\n\t */\n\t\"aoDrawCallback\": [],\n\n\t/**\n\t * Array of callback functions for row created function\n\t */\n\t\"aoRowCreatedCallback\": [],\n\n\t/**\n\t * Callback functions for just before the table is redrawn. A return of\n\t * false will be used to cancel the draw.\n\t */\n\t\"aoPreDrawCallback\": [],\n\n\t/**\n\t * Callback functions for when the table has been initialised.\n\t */\n\t\"aoInitComplete\": [],\n\n\n\t/**\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t * saving state.\n\t */\n\t\"aoStateSaveParams\": [],\n\n\t/**\n\t * Callbacks for modifying the settings that have been stored for state saving\n\t * prior to using the stored values to restore the state.\n\t */\n\t\"aoStateLoadParams\": [],\n\n\t/**\n\t * Callbacks for operating on the settings object once the saved state has been\n\t * loaded\n\t */\n\t\"aoStateLoaded\": [],\n\n\t/**\n\t * Cache the table ID for quick access\n\t */\n\t\"sTableId\": \"\",\n\n\t/**\n\t * The TABLE node for the main table\n\t */\n\t\"nTable\": null,\n\n\t/**\n\t * Permanent ref to the thead element\n\t */\n\t\"nTHead\": null,\n\n\t/**\n\t * Permanent ref to the tfoot element - if it exists\n\t */\n\t\"nTFoot\": null,\n\n\t/**\n\t * Permanent ref to the tbody element\n\t */\n\t\"nTBody\": null,\n\n\t/**\n\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t */\n\t\"nTableWrapper\": null,\n\n\t/**\n\t * Indicate if all required information has been read in\n\t */\n\t\"bInitialised\": false,\n\n\t/**\n\t * Information about open rows. Each object in the array has the parameters\n\t * 'nTr' and 'nParent'\n\t */\n\t\"aoOpenRows\": [],\n\n\t/**\n\t * Dictate the positioning of DataTables' control elements - see\n\t * {@link DataTable.model.oInit.sDom}.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sDom\": null,\n\n\t/**\n\t * Search delay (in mS)\n\t */\n\t\"searchDelay\": null,\n\n\t/**\n\t * Which type of pagination should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sPaginationType\": \"two_button\",\n\n\t/**\n\t * Number of paging controls on the page. Only used for backwards compatibility\n\t */\n\tpagingControls: 0,\n\n\t/**\n\t * The state duration (for `stateSave`) in seconds.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"iStateDuration\": 0,\n\n\t/**\n\t * Array of callback functions for state saving. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the JSON string to save that has been thus far created. Returns\n\t *       a JSON string to be inserted into a json object\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t */\n\t\"aoStateSave\": [],\n\n\t/**\n\t * Array of callback functions for state loading. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the object stored. May return false to cancel state loading</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t */\n\t\"aoStateLoad\": [],\n\n\t/**\n\t * State that was saved. Useful for back reference\n\t */\n\t\"oSavedState\": null,\n\n\t/**\n\t * State that was loaded. Useful for back reference\n\t */\n\t\"oLoadedState\": null,\n\n\t/**\n\t * Note if draw should be blocked while getting data\n\t */\n\t\"bAjaxDataGet\": true,\n\n\t/**\n\t * The last jQuery XHR object that was used for server-side data gathering.\n\t * This can be used for working with the XHR information in one of the\n\t * callbacks\n\t */\n\t\"jqXHR\": null,\n\n\t/**\n\t * JSON returned from the server in the last Ajax request\n\t */\n\t\"json\": undefined,\n\n\t/**\n\t * Data submitted as part of the last Ajax request\n\t */\n\t\"oAjaxData\": undefined,\n\n\t/**\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t * required).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sServerMethod\": null,\n\n\t/**\n\t * Format numbers for display.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"fnFormatNumber\": null,\n\n\t/**\n\t * List of options that can be used for the user selectable length menu.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aLengthMenu\": null,\n\n\t/**\n\t * Counter for the draws that the table does. Also used as a tracker for\n\t * server-side processing\n\t */\n\t\"iDraw\": 0,\n\n\t/**\n\t * Indicate if a redraw is being done - useful for Ajax\n\t */\n\t\"bDrawing\": false,\n\n\t/**\n\t * Draw index (iDraw) of the last error when parsing the returned data\n\t */\n\t\"iDrawError\": -1,\n\n\t/**\n\t * Paging display length\n\t */\n\t\"_iDisplayLength\": 10,\n\n\t/**\n\t * Paging start point - aiDisplay index\n\t */\n\t\"_iDisplayStart\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the result set\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t */\n\t\"_iRecordsTotal\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the current display set\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t */\n\t\"_iRecordsDisplay\": 0,\n\n\t/**\n\t * The classes to use for the table\n\t */\n\t\"oClasses\": {},\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @deprecated\n\t */\n\t\"bFiltered\": false,\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @deprecated\n\t */\n\t\"bSorted\": false,\n\n\t/**\n\t * Indicate that if multiple rows are in the header and there is more than\n\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t * should be used for sorting / title by DataTables.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"bSortCellsTop\": null,\n\n\t/**\n\t * Initialisation object that is used for the table\n\t */\n\t\"oInit\": null,\n\n\t/**\n\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t * destroy so they can clean up markup and events.\n\t */\n\t\"aoDestroyCallback\": [],\n\n\n\t/**\n\t * Get the number of records in the current record set, before filtering\n\t */\n\t\"fnRecordsTotal\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsTotal * 1 :\n\t\t\tthis.aiDisplayMaster.length;\n\t},\n\n\t/**\n\t * Get the number of records in the current record set, after filtering\n\t */\n\t\"fnRecordsDisplay\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\tthis.aiDisplay.length;\n\t},\n\n\t/**\n\t * Get the display end point - aiDisplay index\n\t */\n\t\"fnDisplayEnd\": function ()\n\t{\n\t\tvar\n\t\t\tlen      = this._iDisplayLength,\n\t\t\tstart    = this._iDisplayStart,\n\t\t\tcalc     = start + len,\n\t\t\trecords  = this.aiDisplay.length,\n\t\t\tfeatures = this.oFeatures,\n\t\t\tpaginate = features.bPaginate;\n\n\t\tif ( features.bServerSide ) {\n\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\tstart + records :\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t}\n\t\telse {\n\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\trecords :\n\t\t\t\tcalc;\n\t\t}\n\t},\n\n\t/**\n\t * The DataTables object for this table\n\t */\n\t\"oInstance\": null,\n\n\t/**\n\t * Unique identifier for each instance of the DataTables object. If there\n\t * is an ID on the table node, then it takes that value, otherwise an\n\t * incrementing internal counter is used.\n\t */\n\t\"sInstance\": null,\n\n\t/**\n\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t * keyboard navigation of the table and its controls.\n\t */\n\t\"iTabIndex\": 0,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollHead\": null,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollFoot\": null,\n\n\t/**\n\t * Last applied sort\n\t */\n\t\"aLastSort\": [],\n\n\t/**\n\t * Stored plug-in instances\n\t */\n\t\"oPlugins\": {},\n\n\t/**\n\t * Function used to get a row's id from the row's data\n\t */\n\t\"rowIdFn\": null,\n\n\t/**\n\t * Data location where to store a row's id\n\t */\n\t\"rowId\": null,\n\n\tcaption: '',\n\n\tcaptionNode: null,\n\n\tcolgroup: null,\n\n\t/** Delay loading of data */\n\tdeferLoading: null,\n\n\t/** Allow auto type detection */\n\ttypeDetect: true\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n\nvar extPagination = DataTable.ext.pager;\n\n// Paging buttons configuration\n$.extend( extPagination, {\n\tsimple: function () {\n\t\treturn [ 'previous', 'next' ];\n\t},\n\n\tfull: function () {\n\t\treturn [ 'first', 'previous', 'next', 'last' ];\n\t},\n\n\tnumbers: function () {\n\t\treturn [ 'numbers' ];\n\t},\n\n\tsimple_numbers: function () {\n\t\treturn [ 'previous', 'numbers', 'next' ];\n\t},\n\n\tfull_numbers: function () {\n\t\treturn [ 'first', 'previous', 'numbers', 'next', 'last' ];\n\t},\n\n\tfirst_last: function () {\n\t\treturn ['first', 'last'];\n\t},\n\n\tfirst_last_numbers: function () {\n\t\treturn ['first', 'numbers', 'last'];\n\t},\n\n\t// For testing and plug-ins to use\n\t_numbers: _pagingNumbers,\n\n\t// Number of number buttons - legacy, use `numbers` option for paging feature\n\tnumbers_length: 7\n} );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tpagingButton: {\n\t\t_: function (settings, buttonType, content, active, disabled) {\n\t\t\tvar classes = settings.oClasses.paging;\n\t\t\tvar btnClasses = [classes.button];\n\t\t\tvar btn;\n\n\t\t\tif (active) {\n\t\t\t\tbtnClasses.push(classes.active);\n\t\t\t}\n\n\t\t\tif (disabled) {\n\t\t\t\tbtnClasses.push(classes.disabled)\n\t\t\t}\n\n\t\t\tif (buttonType === 'ellipsis') {\n\t\t\t\tbtn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtn = $('<button>', {\n\t\t\t\t\tclass: btnClasses.join(' '),\n\t\t\t\t\trole: 'link',\n\t\t\t\t\ttype: 'button'\n\t\t\t\t}).html(content);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdisplay: btn,\n\t\t\t\tclicker: btn\n\t\t\t}\n\t\t}\n\t},\n\n\tpagingContainer: {\n\t\t_: function (settings, buttons) {\n\t\t\t// No wrapping element - just append directly to the host\n\t\t\treturn buttons;\n\t\t}\n\t}\n} );\n\n// Common function to remove new lines, strip HTML and diacritic control\nvar _filterString = function (stripHtml, normalize) {\n\treturn function (str) {\n\t\tif (_empty(str) || typeof str !== 'string') {\n\t\t\treturn str;\n\t\t}\n\n\t\tstr = str.replace( _re_new_lines, \" \" );\n\n\t\tif (stripHtml) {\n\t\t\tstr = _stripHtml(str);\n\t\t}\n\n\t\tif (normalize) {\n\t\t\tstr = _normalize(str, false);\n\t\t}\n\n\t\treturn str;\n\t};\n}\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\n/**\n * Common logic for moment, luxon or a date action.\n *\n * Happens after __mldObj, so don't need to call `resolveWindowsLibs` again\n */\nfunction __mld( dtLib, momentFn, luxonFn, dateFn, arg1 ) {\n\tif (__moment) {\n\t\treturn dtLib[momentFn]( arg1 );\n\t}\n\telse if (__luxon) {\n\t\treturn dtLib[luxonFn]( arg1 );\n\t}\n\t\n\treturn dateFn ? dtLib[dateFn]( arg1 ) : dtLib;\n}\n\n\nvar __mlWarning = false;\nvar __luxon; // Can be assigned in DateTeble.use()\nvar __moment; // Can be assigned in DateTeble.use()\n\n/**\n * \n */\nfunction resolveWindowLibs() {\n\tif (window.luxon && ! __luxon) {\n\t\t__luxon = window.luxon;\n\t}\n\t\n\tif (window.moment && ! __moment) {\n\t\t__moment = window.moment;\n\t}\n}\n\nfunction __mldObj (d, format, locale) {\n\tvar dt;\n\n\tresolveWindowLibs();\n\n\tif (__moment) {\n\t\tdt = __moment.utc( d, format, locale, true );\n\n\t\tif (! dt.isValid()) {\n\t\t\treturn null;\n\t\t}\n\t}\n\telse if (__luxon) {\n\t\tdt = format && typeof d === 'string'\n\t\t\t? __luxon.DateTime.fromFormat( d, format )\n\t\t\t: __luxon.DateTime.fromISO( d );\n\n\t\tif (! dt.isValid) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdt.setLocale(locale);\n\t}\n\telse if (! format) {\n\t\t// No format given, must be ISO\n\t\tdt = new Date(d);\n\t}\n\telse {\n\t\tif (! __mlWarning) {\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t}\n\n\t\t__mlWarning = true;\n\t}\n\n\treturn dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper (localeString) {\n\treturn function ( from, to, locale, def ) {\n\t\t// Luxon and Moment support\n\t\t// Argument shifting\n\t\tif ( arguments.length === 0 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = null; // means toLocaleString\n\t\t\tfrom = null; // means iso8601\n\t\t}\n\t\telse if ( arguments.length === 1 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\t\telse if ( arguments.length === 2 ) {\n\t\t\tlocale = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\n\t\tvar typeName = 'datetime' + (to ? '-' + to : '');\n\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\tif (! DataTable.ext.type.order[typeName + '-pre']) {\n\t\t\tDataTable.type(typeName, {\n\t\t\t\tdetect: function (d) {\n\t\t\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t\t},\n\t\t\t\torder: {\n\t\t\t\t\tpre: function (d) {\n\t\t\t\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\t\t\t\treturn d.valueOf();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclassName: 'dt-right'\n\t\t\t});\n\t\t}\n\t\n\t\treturn function ( d, type ) {\n\t\t\t// Allow for a default value\n\t\t\tif (d === null || d === undefined) {\n\t\t\t\tif (def === '--now') {\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t// UTC\n\t\t\t\t\tvar local = new Date();\n\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type === 'type') {\n\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\treturn typeName;\n\t\t\t}\n\n\t\t\tif (d === '') {\n\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t? ''\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t}\n\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tvar dt = __mldObj(d, from, locale);\n\n\t\t\tif (dt === null) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tif (type === 'sort') {\n\t\t\t\treturn dt;\n\t\t\t}\n\t\t\t\n\t\t\tvar formatted = to === null\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n\t\t\t// XSS protection\n\t\t\treturn type === 'display' ?\n\t\t\t\t_escapeHtml( formatted ) :\n\t\t\t\tformatted;\n\t\t};\n\t}\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (window.Intl !== undefined) {\n\ttry {\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\n\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\tif (num[i].type === 'group') {\n\t\t\t\t__thousands = num[i].value;\n\t\t\t}\n\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t__decimal = num[i].value;\n\t\t\t}\n\t\t}\n\t}\n\tcatch (e) {\n\t\t// noop\n\t}\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function ( format, locale ) {\n\tvar typeName = 'datetime-' + format;\n\n\tif (! locale) {\n\t\tlocale = 'en';\n\t}\n\n\tif (! DataTable.ext.type.order[typeName]) {\n\t\tDataTable.type(typeName, {\n\t\t\tdetect: function (d) {\n\t\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\t\treturn d === '' || dt ? typeName : false;\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tpre: function (d) {\n\t\t\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t\t\t}\n\t\t\t},\n\t\t\tclassName: 'dt-right'\n\t\t});\n\t}\n}\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `moment` - Uses the MomentJS library to convert from a given format into another.\n * This renderer has three overloads:\n *   * 1 parameter:\n *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n *   * 2 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to. Assumes `en` locale\n *   * 3 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to\n *     * `string` - Locale\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n\tdate: __mlHelper('toLocaleDateString'),\n\tdatetime: __mlHelper('toLocaleString'),\n\ttime: __mlHelper('toLocaleTimeString'),\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t// Auto locale detection\n\t\tif (thousands === null || thousands === undefined) {\n\t\t\tthousands = __thousands;\n\t\t}\n\n\t\tif (decimal === null || decimal === undefined) {\n\t\t\tdecimal = __decimal;\n\t\t}\n\n\t\treturn {\n\t\t\tdisplay: function ( d ) {\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\tvar flo = parseFloat( d );\n\t\t\t\tvar abs = Math.abs(flo);\n\n\t\t\t\t// Scientific notation for large and small numbers\n\t\t\t\tif (abs >= 100000000000 || (abs < 0.0001 && abs !== 0) ) {\n\t\t\t\t\tvar exp = flo.toExponential(precision).split(/e\\+?/);\n\t\t\t\t\treturn exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\n\t\t\t\t}\n\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t// be a number after all)\n\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\treturn _escapeHtml( d );\n\t\t\t\t}\n\n\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\td = Math.abs( flo );\n\n\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t'';\n\n\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\tnegative = '';\n\t\t\t\t}\n\n\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t) +\n\t\t\t\t\tfloatPart +\n\t\t\t\t\t(postfix||'');\n\t\t\t}\n\t\t};\n\t},\n\n\ttext: function () {\n\t\treturn {\n\t\t\tdisplay: _escapeHtml,\n\t\t\tfilter: _escapeHtml\n\t\t};\n\t}\n};\n\n\nvar _extTypes = DataTable.ext.type;\n\n// Get / set type\nDataTable.type = function (name, prop, val) {\n\tif (! prop) {\n\t\treturn {\n\t\t\tclassName: _extTypes.className[name],\n\t\t\tdetect: _extTypes.detect.find(function (fn) {\n\t\t\t\treturn fn._name === name;\n\t\t\t}),\n\t\t\torder: {\n\t\t\t\tpre: _extTypes.order[name + '-pre'],\n\t\t\t\tasc: _extTypes.order[name + '-asc'],\n\t\t\t\tdesc: _extTypes.order[name + '-desc']\n\t\t\t},\n\t\t\trender: _extTypes.render[name],\n\t\t\tsearch: _extTypes.search[name]\n\t\t};\n\t}\n\n\tvar setProp = function(prop, propVal) {\n\t\t_extTypes[prop][name] = propVal;\n\t};\n\tvar setDetect = function (detect) {\n\t\t// `detect` can be a function or an object - we set a name\n\t\t// property for either - that is used for the detection\n\t\tObject.defineProperty(detect, \"_name\", {value: name});\n\n\t\tvar idx = _extTypes.detect.findIndex(function (item) {\n\t\t\treturn item._name === name;\n\t\t});\n\n\t\tif (idx === -1) {\n\t\t\t_extTypes.detect.unshift(detect);\n\t\t}\n\t\telse {\n\t\t\t_extTypes.detect.splice(idx, 1, detect);\n\t\t}\n\t};\n\tvar setOrder = function (obj) {\n\t\t_extTypes.order[name + '-pre'] = obj.pre; // can be undefined\n\t\t_extTypes.order[name + '-asc'] = obj.asc; // can be undefined\n\t\t_extTypes.order[name + '-desc'] = obj.desc; // can be undefined\n\t};\n\n\t// prop is optional\n\tif (val === undefined) {\n\t\tval = prop;\n\t\tprop = null;\n\t}\n\n\tif (prop === 'className') {\n\t\tsetProp('className', val);\n\t}\n\telse if (prop === 'detect') {\n\t\tsetDetect(val);\n\t}\n\telse if (prop === 'order') {\n\t\tsetOrder(val);\n\t}\n\telse if (prop === 'render') {\n\t\tsetProp('render', val);\n\t}\n\telse if (prop === 'search') {\n\t\tsetProp('search', val);\n\t}\n\telse if (! prop) {\n\t\tif (val.className) {\n\t\t\tsetProp('className', val.className);\n\t\t}\n\n\t\tif (val.detect !== undefined) {\n\t\t\tsetDetect(val.detect);\n\t\t}\n\n\t\tif (val.order) {\n\t\t\tsetOrder(val.order);\n\t\t}\n\n\t\tif (val.render !== undefined) {\n\t\t\tsetProp('render', val.render);\n\t\t}\n\n\t\tif (val.search !== undefined) {\n\t\t\tsetProp('search', val.search);\n\t\t}\n\t}\n}\n\n// Get a list of types\nDataTable.types = function () {\n\treturn _extTypes.detect.map(function (fn) {\n\t\treturn fn._name;\n\t});\n};\n\nvar __diacriticSort = function (a, b) {\n\ta = a !== null && a !== undefined ? a.toString().toLowerCase() : '';\n\tb = b !== null && b !== undefined ? b.toString().toLowerCase() : '';\n\n\t// Checked for `navigator.languages` support in `oneOf` so this code can't execute in old\n\t// Safari and thus can disable this check\n\t// eslint-disable-next-line compat/compat\n\treturn a.localeCompare(b, navigator.languages[0] || navigator.language, {\n\t\tnumeric: true,\n\t\tignorePunctuation: true,\n\t});\n}\n\n//\n// Built in data types\n//\n\nDataTable.type('string', {\n\tdetect: function () {\n\t\treturn 'string';\n\t},\n\torder: {\n\t\tpre: function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) && typeof a !== 'boolean' ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t}\n\t},\n\tsearch: _filterString(false, true)\n});\n\nDataTable.type('string-utf8', {\n\tdetect: {\n\t\tallOf: function ( d ) {\n\t\t\treturn true;\n\t\t},\n\t\toneOf: function ( d ) {\n\t\t\t// At least one data point must contain a non-ASCII character\n\t\t\t// This line will also check if navigator.languages is supported or not. If not (Safari 10.0-)\n\t\t\t// this data type won't be supported.\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\treturn ! _empty( d ) && navigator.languages && typeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n\t\t}\n\t},\n\torder: {\n\t\tasc: __diacriticSort,\n\t\tdesc: function (a, b) {\n\t\t\treturn __diacriticSort(a, b) * -1;\n\t\t}\n\t},\n\tsearch: _filterString(false, true)\n});\n\n\nDataTable.type('html', {\n\tdetect: {\n\t\tallOf: function ( d ) {\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1);\n\t\t},\n\t\toneOf: function ( d ) {\n\t\t\t// At least one data point must contain a `<`\n\t\t\treturn ! _empty( d ) && typeof d === 'string' && d.indexOf('<') !== -1;\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\t_stripHtml(a).trim().toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('date', {\n\tclassName: 'dt-type-date',\n\tdetect: {\n\t\tallOf: function ( d ) {\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d);\n\t\t},\n\t\toneOf: function ( d ) {\n\t\t\t// At least one entry must be a date or a string with a date\n\t\t\treturn (d instanceof Date) || (typeof d === 'string' && _re_date.test(d));\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t}\n\t}\n});\n\n\nDataTable.type('html-num-fmt', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true, false );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_html, _re_formatted_numeric );\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('html-num', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, false, true );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, false, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_html );\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('num-fmt', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true, true );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_formatted_numeric );\n\t\t}\n\t}\n});\n\n\nDataTable.type('num', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, false, true );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, false, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function (d, s) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp );\n\t\t}\n\t}\n});\n\n\n\n\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\tif ( d !== 0 && (!d || d === '-') ) {\n\t\treturn -Infinity;\n\t}\n\t\n\tvar type = typeof d;\n\n\tif (type === 'number' || type === 'bigint') {\n\t\treturn d;\n\t}\n\n\t// If a decimal place other than `.` is used, it needs to be given to the\n\t// function so we can detect it and replace with a `.` which is the only\n\t// decimal place Javascript recognises - it is not locale aware.\n\tif ( decimalPlace ) {\n\t\td = _numToDecimal( d, decimalPlace );\n\t}\n\n\tif ( d.replace ) {\n\t\tif ( re1 ) {\n\t\t\td = d.replace( re1, '' );\n\t\t}\n\n\t\tif ( re2 ) {\n\t\t\td = d.replace( re2, '' );\n\t\t}\n\t}\n\n\treturn d * 1;\n};\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tfooter: {\n\t\t_: function ( settings, cell, classes ) {\n\t\t\tcell.addClass(classes.tfoot.cell);\n\t\t}\n\t},\n\n\theader: {\n\t\t_: function ( settings, cell, classes ) {\n\t\t\tcell.addClass(classes.thead.cell);\n\n\t\t\tif (! settings.oFeatures.bSort) {\n\t\t\t\tcell.addClass(classes.order.none);\n\t\t\t}\n\n\t\t\tvar legacyTop = settings.bSortCellsTop;\n\t\t\tvar headerRows = cell.closest('thead').find('tr');\n\t\t\tvar rowIdx = cell.parent().index();\n\n\t\t\t// Conditions to not apply the ordering icons\n\t\t\tif (\n\t\t\t\t// Cells and rows which have the attribute to disable the icons\n\t\t\t\tcell.attr('data-dt-order') === 'disable' ||\n\t\t\t\tcell.parent().attr('data-dt-order') === 'disable' ||\n\n\t\t\t\t// Legacy support for `orderCellsTop`. If it is set, then cells\n\t\t\t\t// which are not in the top or bottom row of the header (depending\n\t\t\t\t// on the value) do not get the sorting classes applied to them\n\t\t\t\t(legacyTop === true && rowIdx !== 0) ||\n\t\t\t\t(legacyTop === false && rowIdx !== headerRows.length - 1)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// No additional mark-up required\n\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t// listening for\n\t\t\t$(settings.nTable).on( 'order.dt.DT column-visibility.dt.DT', function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t}\n\n\t\t\t\tvar sorting = ctx.sortDetails;\n\n\t\t\t\tif (! sorting) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar i;\n\t\t\t\tvar orderClasses = classes.order;\n\t\t\t\tvar columns = ctx.api.columns( cell );\n\t\t\t\tvar col = settings.aoColumns[columns.flatten()[0]];\n\t\t\t\tvar orderable = columns.orderable().includes(true);\n\t\t\t\tvar ariaType = '';\n\t\t\t\tvar indexes = columns.indexes();\n\t\t\t\tvar sortDirs = columns.orderable(true).flatten();\n\t\t\t\tvar orderedColumns = _pluck(sorting, 'col');\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\torderClasses.isAsc +' '+\n\t\t\t\t\t\torderClasses.isDesc\n\t\t\t\t\t)\n\t\t\t\t\t.toggleClass( orderClasses.none, ! orderable )\n\t\t\t\t\t.toggleClass( orderClasses.canAsc, orderable && sortDirs.includes('asc') )\n\t\t\t\t\t.toggleClass( orderClasses.canDesc, orderable && sortDirs.includes('desc') );\n\n\t\t\t\t// Determine if all of the columns that this cell covers are included in the\n\t\t\t\t// current ordering\n\t\t\t\tvar isOrdering = true;\n\t\t\t\t\n\t\t\t\tfor (i=0; i<indexes.length; i++) {\n\t\t\t\t\tif (! orderedColumns.includes(indexes[i])) {\n\t\t\t\t\t\tisOrdering = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isOrdering ) {\n\t\t\t\t\t// Get the ordering direction for the columns under this cell\n\t\t\t\t\t// Note that it is possible for a cell to be asc and desc sorting\n\t\t\t\t\t// (column spanning cells)\n\t\t\t\t\tvar orderDirs = columns.order();\n\n\t\t\t\t\tcell.addClass(\n\t\t\t\t\t\torderDirs.includes('asc') ? orderClasses.isAsc : '' +\n\t\t\t\t\t\torderDirs.includes('desc') ? orderClasses.isDesc : ''\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Find the first visible column that has ordering applied to it - it get's\n\t\t\t\t// the aria information, as the ARIA spec says that only one column should\n\t\t\t\t// be marked with aria-sort\n\t\t\t\tvar firstVis = -1; // column index\n\n\t\t\t\tfor (i=0; i<orderedColumns.length; i++) {\n\t\t\t\t\tif (settings.aoColumns[orderedColumns[i]].bVisible) {\n\t\t\t\t\t\tfirstVis = orderedColumns[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (indexes[0] == firstVis) {\n\t\t\t\t\tvar firstSort = sorting[0];\n\t\t\t\t\tvar sortOrder = col.asSorting;\n\n\t\t\t\t\tcell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');\n\n\t\t\t\t\t// Determine if the next click will remove sorting or change the sort\n\t\t\t\t\tariaType = ! sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcell.removeAttr('aria-sort');\n\t\t\t\t}\n\n\t\t\t\tcell.attr('aria-label', orderable\n\t\t\t\t\t? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType)\n\t\t\t\t\t: col.ariaTitle\n\t\t\t\t);\n\n\t\t\t\t// Make the headers tab-able for keyboard navigation\n\t\t\t\tif (orderable) {\n\t\t\t\t\tcell.find('.dt-column-title').attr('role', 'button');\n\t\t\t\t\tcell.attr('tabindex', 0)\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t},\n\n\tlayout: {\n\t\t_: function ( settings, container, items ) {\n\t\t\tvar classes = settings.oClasses.layout;\n\t\t\tvar row = $('<div/>')\n\t\t\t\t.attr('id', items.id || null)\n\t\t\t\t.addClass(items.className || classes.row)\n\t\t\t\t.appendTo( container );\n\n\t\t\t$.each( items, function (key, val) {\n\t\t\t\tif (key === 'id' || key === 'className') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar klass = '';\n\n\t\t\t\tif (val.table) {\n\t\t\t\t\trow.addClass(classes.tableRow);\n\t\t\t\t\tklass += classes.tableCell + ' ';\n\t\t\t\t}\n\n\t\t\t\tif (key === 'start') {\n\t\t\t\t\tklass += classes.start;\n\t\t\t\t}\n\t\t\t\telse if (key === 'end') {\n\t\t\t\t\tklass += classes.end;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tklass += classes.full;\n\t\t\t\t}\n\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.attr({\n\t\t\t\t\t\tid: val.id || null,\n\t\t\t\t\t\t\"class\": val.className\n\t\t\t\t\t\t\t? val.className\n\t\t\t\t\t\t\t: classes.cell + ' ' + klass\n\t\t\t\t\t})\n\t\t\t\t\t.append( val.contents )\n\t\t\t\t\t.appendTo( row );\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n\nDataTable.feature = {};\n\n// Third parameter is internal only!\nDataTable.feature.register = function ( name, cb, legacy ) {\n\tDataTable.ext.features[ name ] = cb;\n\n\tif (legacy) {\n\t\t_ext.feature.push({\n\t\t\tcFeature: legacy,\n\t\t\tfnInit: cb\n\t\t});\n\t}\n};\n\nfunction _divProp(el, prop, val) {\n\tif (val) {\n\t\tel[prop] = val;\n\t}\n}\n\nDataTable.feature.register( 'div', function ( settings, opts ) {\n\tvar n = $('<div>')[0];\n\n\tif (opts) {\n\t\t_divProp(n, 'className', opts.className);\n\t\t_divProp(n, 'id', opts.id);\n\t\t_divProp(n, 'innerHTML', opts.html);\n\t\t_divProp(n, 'textContent', opts.text);\n\t}\n\n\treturn n;\n} );\n\nDataTable.feature.register( 'info', function ( settings, opts ) {\n\t// For compatibility with the legacy `info` top level option\n\tif (! settings.oFeatures.bInfo) {\n\t\treturn null;\n\t}\n\n\tvar\n\t\tlang  = settings.oLanguage,\n\t\ttid = settings.sTableId,\n\t\tn = $('<div/>', {\n\t\t\t'class': settings.oClasses.info.container,\n\t\t} );\n\n\topts = $.extend({\n\t\tcallback: lang.fnInfoCallback,\n\t\tempty: lang.sInfoEmpty,\n\t\tpostfix: lang.sInfoPostFix,\n\t\tsearch: lang.sInfoFiltered,\n\t\ttext: lang.sInfo,\n\t}, opts);\n\n\n\t// Update display on each draw\n\tsettings.aoDrawCallback.push(function (s) {\n\t\t_fnUpdateInfo(s, opts, n);\n\t});\n\n\t// For the first info display in the table, we add a callback and aria information.\n\tif (! settings._infoEl) {\n\t\tn.attr({\n\t\t\t'aria-live': 'polite',\n\t\t\tid: tid+'_info',\n\t\t\trole: 'status'\n\t\t});\n\n\t\t// Table is described by our info div\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\n\t\tsettings._infoEl = n;\n\t}\n\n\treturn n;\n}, 'i' );\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo ( settings, opts, node )\n{\n\tvar\n\t\tstart = settings._iDisplayStart+1,\n\t\tend   = settings.fnDisplayEnd(),\n\t\tmax   = settings.fnRecordsTotal(),\n\t\ttotal = settings.fnRecordsDisplay(),\n\t\tout   = total\n\t\t\t? opts.text\n\t\t\t: opts.empty;\n\n\tif ( total !== max ) {\n\t\t// Record set after filtering\n\t\tout += ' ' + opts.search;\n\t}\n\n\t// Convert the macros\n\tout += opts.postfix;\n\tout = _fnMacros( settings, out );\n\n\tif ( opts.callback ) {\n\t\tout = opts.callback.call( settings.oInstance,\n\t\t\tsettings, start, end, max, total, out\n\t\t);\n\t}\n\n\tnode.html( out );\n\n\t_fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\n}\n\nvar __searchCounter = 0;\n\n// opts\n// - text\n// - placeholder\nDataTable.feature.register( 'search', function ( settings, opts ) {\n\t// Don't show the input if filtering isn't available on the table\n\tif (! settings.oFeatures.bFilter) {\n\t\treturn null;\n\t}\n\n\tvar classes = settings.oClasses.search;\n\tvar tableId = settings.sTableId;\n\tvar language = settings.oLanguage;\n\tvar previousSearch = settings.oPreviousSearch;\n\tvar input = '<input type=\"search\" class=\"'+classes.input+'\"/>';\n\n\topts = $.extend({\n\t\tplaceholder: language.sSearchPlaceholder,\n\t\tprocessing: false,\n\t\ttext: language.sSearch\n\t}, opts);\n\n\t// The _INPUT_ is optional - is appended if not present\n\tif (opts.text.indexOf('_INPUT_') === -1) {\n\t\topts.text += '_INPUT_';\n\t}\n\n\topts.text = _fnMacros(settings, opts.text);\n\n\t// We can put the <input> outside of the label if it is at the start or end\n\t// which helps improve accessability (not all screen readers like implicit\n\t// for elements).\n\tvar end = opts.text.match(/_INPUT_$/);\n\tvar start = opts.text.match(/^_INPUT_/);\n\tvar removed = opts.text.replace(/_INPUT_/, '');\n\tvar str = '<label>' + opts.text + '</label>';\n\n\tif (start) {\n\t\tstr = '_INPUT_<label>' + removed + '</label>';\n\t}\n\telse if (end) {\n\t\tstr = '<label>' + removed + '</label>_INPUT_';\n\t}\n\n\tvar filter = $('<div>')\n\t\t.addClass(classes.container)\n\t\t.append(str.replace(/_INPUT_/, input));\n\n\t// add for and id to label and input\n\tfilter.find('label').attr('for', 'dt-search-' + __searchCounter);\n\tfilter.find('input').attr('id', 'dt-search-' + __searchCounter);\n\t__searchCounter++;\n\n\tvar searchFn = function(event) {\n\t\tvar val = this.value;\n\n\t\tif(previousSearch.return && event.key !== \"Enter\") {\n\t\t\treturn;\n\t\t}\n\n\t\t/* Now do the filter */\n\t\tif ( val != previousSearch.search ) {\n\t\t\t_fnProcessingRun(settings, opts.processing, function () {\n\t\t\t\tpreviousSearch.search = val;\n\t\t\n\t\t\t\t_fnFilterComplete( settings, previousSearch );\n\t\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t});\n\t\t}\n\t};\n\n\tvar searchDelay = settings.searchDelay !== null ?\n\t\tsettings.searchDelay :\n\t\t0;\n\n\tvar jqFilter = $('input', filter)\n\t\t.val( previousSearch.search )\n\t\t.attr( 'placeholder', opts.placeholder )\n\t\t.on(\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\tsearchDelay ?\n\t\t\t\tDataTable.util.debounce( searchFn, searchDelay ) :\n\t\t\t\tsearchFn\n\t\t)\n\t\t.on( 'mouseup.DT', function(e) {\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\tsetTimeout( function () {\n\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t}, 10);\n\t\t} )\n\t\t.on( 'keypress.DT', function(e) {\n\t\t\t/* Prevent form submission */\n\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} )\n\t\t.attr('aria-controls', tableId);\n\n\t// Update the input elements whenever the table is filtered\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\tif ( settings === s && jqFilter[0] !== document.activeElement ) {\n\t\t\tjqFilter.val( typeof previousSearch.search !== 'function'\n\t\t\t\t? previousSearch.search\n\t\t\t\t: ''\n\t\t\t);\n\t\t}\n\t} );\n\n\treturn filter;\n}, 'f' );\n\n// opts\n// - type - button configuration\n// - buttons - number of buttons to show - must be odd\nDataTable.feature.register( 'paging', function ( settings, opts ) {\n\t// Don't show the paging input if the table doesn't have paging enabled\n\tif (! settings.oFeatures.bPaginate) {\n\t\treturn null;\n\t}\n\n\topts = $.extend({\n\t\tbuttons: DataTable.ext.pager.numbers_length,\n\t\ttype: settings.sPaginationType,\n\t\tboundaryNumbers: true,\n\t\tfirstLast: true,\n\t\tpreviousNext: true,\n\t\tnumbers: true\n\t}, opts);\n\n\tvar host = $('<div/>')\n\t\t.addClass(settings.oClasses.paging.container + (opts.type ? ' paging_' + opts.type : ''))\n\t\t.append(\n\t\t\t$('<nav>')\n\t\t\t\t.attr('aria-label', 'pagination')\n\t\t\t\t.addClass(settings.oClasses.paging.nav)\n\t\t);\n\tvar draw = function () {\n\t\t_pagingDraw(settings, host.children(), opts);\n\t};\n\n\tsettings.aoDrawCallback.push(draw);\n\n\t// Responsive redraw of paging control\n\t$(settings.nTable).on('column-sizing.dt.DT', draw);\n\n\treturn host;\n}, 'p' );\n\n/**\n * Dynamically create the button type array based on the configuration options.\n * This will only happen if the paging type is not defined.\n */\nfunction _pagingDynamic(opts) {\n\tvar out = [];\n\n\tif (opts.numbers) {\n\t\tout.push('numbers');\n\t}\n\n\tif (opts.previousNext) {\n\t\tout.unshift('previous');\n\t\tout.push('next');\n\t}\n\n\tif (opts.firstLast) {\n\t\tout.unshift('first');\n\t\tout.push('last');\n\t}\n\n\treturn out;\n}\n\nfunction _pagingDraw(settings, host, opts) {\n\tif (! settings._bInitComplete) {\n\t\treturn;\n\t}\n\n\tvar\n\t\tplugin = opts.type\n\t\t\t? DataTable.ext.pager[ opts.type ]\n\t\t\t: _pagingDynamic,\n\t\taria = settings.oLanguage.oAria.paginate || {},\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings._iDisplayLength,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1,\n\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\tbuttons = [],\n\t\tbuttonEls = [],\n\t\tbuttonsNested = plugin(opts)\n\t\t\t.map(function (val) {\n\t\t\t\treturn val === 'numbers'\n\t\t\t\t\t? _pagingNumbers(page, pages, opts.buttons, opts.boundaryNumbers)\n\t\t\t\t\t: val;\n\t\t\t});\n\n\t// .flat() would be better, but not supported in old Safari\n\tbuttons = buttons.concat.apply(buttons, buttonsNested);\n\n\tfor (var i=0 ; i<buttons.length ; i++) {\n\t\tvar button = buttons[i];\n\n\t\tvar btnInfo = _pagingButtonInfo(settings, button, page, pages);\n\t\tvar btn = _fnRenderer( settings, 'pagingButton' )(\n\t\t\tsettings,\n\t\t\tbutton,\n\t\t\tbtnInfo.display,\n\t\t\tbtnInfo.active,\n\t\t\tbtnInfo.disabled\n\t\t);\n\n\t\tvar ariaLabel = typeof button === 'string'\n\t\t\t? aria[ button ]\n\t\t\t: aria.number\n\t\t\t\t? aria.number + (button+1)\n\t\t\t\t: null;\n\n\t\t// Common attributes\n\t\t$(btn.clicker).attr({\n\t\t\t'aria-controls': settings.sTableId,\n\t\t\t'aria-disabled': btnInfo.disabled ? 'true' : null,\n\t\t\t'aria-current': btnInfo.active ? 'page' : null,\n\t\t\t'aria-label': ariaLabel,\n\t\t\t'data-dt-idx': button,\n\t\t\t'tabIndex': btnInfo.disabled\n\t\t\t\t? -1\n\t\t\t\t: settings.iTabIndex\n\t\t\t\t\t? settings.iTabIndex\n\t\t\t\t\t: null, // `0` doesn't need a tabIndex since it is the default\n\t\t});\n\n\t\tif (typeof button !== 'number') {\n\t\t\t$(btn.clicker).addClass(button);\n\t\t}\n\n\t\t_fnBindAction(\n\t\t\tbtn.clicker, {action: button}, function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t}\n\t\t);\n\n\t\tbuttonEls.push(btn.display);\n\t}\n\n\tvar wrapped = _fnRenderer(settings, 'pagingContainer')(\n\t\tsettings, buttonEls\n\t);\n\n\tvar activeEl = host.find(document.activeElement).data('dt-idx');\n\n\thost.empty().append(wrapped);\n\n\tif ( activeEl !== undefined ) {\n\t\thost.find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t}\n\n\t// Responsive - check if the buttons are over two lines based on the\n\t// height of the buttons and the container.\n\tif (\n\t\tbuttonEls.length && // any buttons\n\t\topts.buttons > 1 && // prevent infinite\n\t\t$(host).height() >= ($(buttonEls[0]).outerHeight() * 2) - 10\n\t) {\n\t\t_pagingDraw(settings, host, $.extend({}, opts, { buttons: opts.buttons - 2 }));\n\t}\n}\n\n/**\n * Get properties for a button based on the current paging state of the table\n *\n * @param {*} settings DT settings object\n * @param {*} button The button type in question\n * @param {*} page Table's current page\n * @param {*} pages Number of pages\n * @returns Info object\n */\nfunction _pagingButtonInfo(settings, button, page, pages) {\n\tvar lang = settings.oLanguage.oPaginate;\n\tvar o = {\n\t\tdisplay: '',\n\t\tactive: false,\n\t\tdisabled: false\n\t};\n\n\tswitch ( button ) {\n\t\tcase 'ellipsis':\n\t\t\to.display = '&#x2026;';\n\t\t\to.disabled = true;\n\t\t\tbreak;\n\n\t\tcase 'first':\n\t\t\to.display = lang.sFirst;\n\n\t\t\tif (page === 0) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'previous':\n\t\t\to.display = lang.sPrevious;\n\n\t\t\tif ( page === 0 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'next':\n\t\t\to.display = lang.sNext;\n\n\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'last':\n\t\t\to.display = lang.sLast;\n\n\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tif ( typeof button === 'number' ) {\n\t\t\t\to.display = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\n\t\t\t\tif (page === button) {\n\t\t\t\t\to.active = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\treturn o;\n}\n\n/**\n * Compute what number buttons to show in the paging control\n *\n * @param {*} page Current page\n * @param {*} pages Total number of pages\n * @param {*} buttons Target number of number buttons\n * @param {boolean} addFirstLast Indicate if page 1 and end should be included\n * @returns Buttons to show\n */\nfunction _pagingNumbers ( page, pages, buttons, addFirstLast ) {\n\tvar\n\t\tnumbers = [],\n\t\thalf = Math.floor(buttons / 2),\n\t\tbefore = addFirstLast ? 2 : 1,\n\t\tafter = addFirstLast ? 1 : 0;\n\n\tif ( pages <= buttons ) {\n\t\tnumbers = _range(0, pages);\n\t}\n\telse if (buttons === 1) {\n\t\t// Single button - current page only\n\t\tnumbers = [page];\n\t}\n\telse if (buttons === 3) {\n\t\t// Special logic for just three buttons\n\t\tif (page <= 1) {\n\t\t\tnumbers = [0, 1, 'ellipsis'];\n\t\t}\n\t\telse if (page >= pages - 2) {\n\t\t\tnumbers = _range(pages-2, pages);\n\t\t\tnumbers.unshift('ellipsis');\n\t\t}\n\t\telse {\n\t\t\tnumbers = ['ellipsis', page, 'ellipsis'];\n\t\t}\n\t}\n\telse if ( page <= half ) {\n\t\tnumbers = _range(0, buttons-before);\n\t\tnumbers.push('ellipsis');\n\n\t\tif (addFirstLast) {\n\t\t\tnumbers.push(pages-1);\n\t\t}\n\t}\n\telse if ( page >= pages - 1 - half ) {\n\t\tnumbers = _range(pages-(buttons-before), pages);\n\t\tnumbers.unshift('ellipsis');\n\n\t\tif (addFirstLast) {\n\t\t\tnumbers.unshift(0);\n\t\t}\n\t}\n\telse {\n\t\tnumbers = _range(page-half+before, page+half-after);\n\t\tnumbers.push('ellipsis');\n\t\tnumbers.unshift('ellipsis');\n\n\t\tif (addFirstLast) {\n\t\t\tnumbers.push(pages-1);\n\t\t\tnumbers.unshift(0);\n\t\t}\n\t}\n\n\treturn numbers;\n}\n\nvar __lengthCounter = 0;\n\n// opts\n// - menu\n// - text\nDataTable.feature.register( 'pageLength', function ( settings, opts ) {\n\tvar features = settings.oFeatures;\n\n\t// For compatibility with the legacy `pageLength` top level option\n\tif (! features.bPaginate || ! features.bLengthChange) {\n\t\treturn null;\n\t}\n\n\topts = $.extend({\n\t\tmenu: settings.aLengthMenu,\n\t\ttext: settings.oLanguage.sLengthMenu\n\t}, opts);\n\n\tvar\n\t\tclasses  = settings.oClasses.length,\n\t\ttableId  = settings.sTableId,\n\t\tmenu     = opts.menu,\n\t\tlengths  = [],\n\t\tlanguage = [],\n\t\ti;\n\n\t// Options can be given in a number of ways\n\tif (Array.isArray( menu[0] )) {\n\t\t// Old 1.x style - 2D array\n\t\tlengths = menu[0];\n\t\tlanguage = menu[1];\n\t}\n\telse {\n\t\tfor ( i=0 ; i<menu.length ; i++ ) {\n\t\t\t// An object with different label and value\n\t\t\tif ($.isPlainObject(menu[i])) {\n\t\t\t\tlengths.push(menu[i].value);\n\t\t\t\tlanguage.push(menu[i].label);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Or just a number to display and use\n\t\t\t\tlengths.push(menu[i]);\n\t\t\t\tlanguage.push(menu[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// We can put the <select> outside of the label if it is at the start or\n\t// end which helps improve accessability (not all screen readers like\n\t// implicit for elements).\n\tvar end = opts.text.match(/_MENU_$/);\n\tvar start = opts.text.match(/^_MENU_/);\n\tvar removed = opts.text.replace(/_MENU_/, '');\n\tvar str = '<label>' + opts.text + '</label>';\n\n\tif (start) {\n\t\tstr = '_MENU_<label>' + removed + '</label>';\n\t}\n\telse if (end) {\n\t\tstr = '<label>' + removed + '</label>_MENU_';\n\t}\n\n\t// Wrapper element - use a span as a holder for where the select will go\n\tvar tmpId = 'tmp-' + (+new Date())\n\tvar div = $('<div/>')\n\t\t.addClass( classes.container )\n\t\t.append(\n\t\t\tstr.replace( '_MENU_', '<span id=\"'+tmpId+'\"></span>' )\n\t\t);\n\n\t// Save text node content for macro updating\n\tvar textNodes = [];\n\tArray.from(div.find('label')[0].childNodes).forEach(function (el) {\n\t\tif (el.nodeType === Node.TEXT_NODE) {\n\t\t\ttextNodes.push({\n\t\t\t\tel: el,\n\t\t\t\ttext: el.textContent\n\t\t\t});\n\t\t}\n\t});\n\n\t// Update the label text in case it has an entries value\n\tvar updateEntries = function (len) {\n\t\ttextNodes.forEach(function (node) {\n\t\t\tnode.el.textContent = _fnMacros(settings, node.text, len);\n\t\t});\n\t}\n\n\t// Next, the select itself, along with the options\n\tvar select = $('<select/>', {\n\t\t'name':          tableId+'_length',\n\t\t'aria-controls': tableId,\n\t\t'class':         classes.select\n\t} );\n\n\tfor ( i=0 ; i<lengths.length ; i++ ) {\n\t\tselect[0][ i ] = new Option(\n\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\tlanguage[i],\n\t\t\tlengths[i]\n\t\t);\n\t}\n\n\t// add for and id to label and input\n\tdiv.find('label').attr('for', 'dt-length-' + __lengthCounter);\n\tselect.attr('id', 'dt-length-' + __lengthCounter);\n\t__lengthCounter++;\n\n\t// Swap in the select list\n\tdiv.find('#' + tmpId).replaceWith(select);\n\n\t// Can't use `select` variable as user might provide their own and the\n\t// reference is broken by the use of outerHTML\n\t$('select', div)\n\t\t.val( settings._iDisplayLength )\n\t\t.on( 'change.DT', function() {\n\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t_fnDraw( settings );\n\t\t} );\n\n\t// Update node value whenever anything changes the table's length\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\tif ( settings === s ) {\n\t\t\t$('select', div).val( len );\n\n\t\t\t// Resolve plurals in the text for the new length\n\t\t\tupdateEntries(len);\n\t\t}\n\t} );\n\n\tupdateEntries(settings._iDisplayLength);\n\n\treturn div;\n}, 'l' );\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function ( opts ) {\n\treturn $(this).dataTable( opts ).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each( DataTable, function ( prop, val ) {\n\t$.fn.DataTable[ prop ] = val;\n} );\n\nexport default DataTable;\n"],"names":["_ext","_Api","_api_register","_api_registerPlural","$","DataTable","selector","options","factory","this","_that","emptyInit","undefined","len","length","api","each","iLen","oInit","_fnExtend","i","sId","getAttribute","defaults","$this","nodeName","toLowerCase","trigger","_fnCompatOpts","_fnCompatCols","column","_fnCamelToHungarian","extend","data","allSettings","settings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","Api","destroy","_fnLog","sTableId","id","splice","ext","_unique","oSettings","models","style","width","colgroup","prependTo","fastData","row","type","_fnGetCellData","push","dataTable","aLengthMenu","iDisplayLength","Array","isArray","isPlainObject","value","_fnMap","oFeatures","oScroll","oLanguage","_fnCallbackReg","fnDrawCallback","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","__browser","browser","n","css","position","top","left","window","pageXOffset","height","overflow","append","appendTo","outer","children","inner","barWidth","offsetWidth","clientWidth","bScrollbarLeft","Math","round","offset","remove","oBrowser","iBarWidth","_fnBrowserDetect","oClasses","classes","addClass","table","bPaginate","iDisplayStart","iInitDisplayStart","_iDisplayStart","defer","iDeferLoading","deferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","columnsInit","thead","getElementsByTagName","initHeaderLayout","_fnDetectHeader","aoColumns","_fnAddColumn","aoColDefs","aoCols","headerLayout","fn","j","jLen","k","kLen","def","columns","name","sName","aTargets","target","targets","indexOf","replace","forEach","cell","match","is","_fnApplyColumnDefs","aoColumnDefs","iCol","oDef","_fnColumnOptions","rowOne","find","eq","a","col","mData","sort","filter","_","_isArrayHost","_fnSaveState","features","bStateSave","aaSorting","sorting","asSorting","_fnSortingClasses","bSorted","_fnDataSource","bDeferRender","caption","html","_captionSide","captionNode","tbody","insertAfter","nTBody","tfoot","aiDisplay","aiDisplayMaster","slice","bInitialised","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","buttons","builder","errMode","feature","search","legacy","pager","renderer","pageButton","header","order","className","detect","render","fnVersionCheck","iApiIndex","sVersion","version","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","aoFeatures","oStdClasses","oPagination","container","empty","info","layout","tableRow","tableCell","start","end","full","select","canAsc","canDesc","isAsc","isDesc","none","processing","scrolling","body","footer","self","input","paging","active","button","disabled","nav","_re_dic","_re_new_lines","_re_html","_max_str_len","pow","_re_date","_re_escape_regex","RegExp","join","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","_isNumber","formatted","allowEmpty","strType","parseFloat","_htmlNumeric","_isHtml","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","_removeEmpty","Error","previous","_escapeHtml","_normalize","str","both","res","normalize","src","from","Set","sorted","last","_areAllUnique","val","again","_flatten","_addClass","el","split","classList","add","_fnHungarianMap","o","newKey","map","key","_hungarianMap","user","force","hungarianKey","charAt","util","diacritics","mixed","debounce","timeout","timer","that","args","arguments","clearTimeout","setTimeout","apply","throttle","freq","frequency","now","Date","escapeRegex","set","source","meta","setData","b","arrayNotation","funcNotation","innerSrc","_fnSplitObjNotation","aLast","__reArray","__reFn","get","t","fetchData","substring","stripHtml","escapeHtml","unique","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","serverSide","searchDelay","dataSort","aDataSort","oDefaults","oCol","oColumn","idx","searchFixed","colEl","attr","aoPreSearchCols","oOptions","mDataProp","sType","_sManualType","sClass","origClass","iDataSort","mDataSrc","mRender","copy","shift","_render","attrTest","_bAttrSrc","_setter","fnGetData","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSort","bSortable","_fnAdjustColumnSizing","bAutoWidth","columnIdx","scroll","scrollY","sY","sX","scrollXInner","sXInner","visibleColumns","_fnGetColumns","tableWidthAttr","tableContainer","styleWidth","visible","tmpTable","cloneNode","removeAttr","tr","clone","_fnColumnsSumWidth","margin","padding","border","longest","_fnGetMaxLenString","autoClass","text","sContentPadding","insert","document","createTextNode","holder","right","total","bodyCells","bounding","getBoundingClientRect","sWidth","_fnStringToCss","_reszEvt","on","sInstance","bDestroying","_fnCalculateColumnWidths","cols","_fnColumnSizes","_fnScrollDraw","_fnVisibleToColumnIndex","iMatch","aiVis","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","aoHeader","vis","bVisible","sParam","_typeResult","typeDetect","_name","_fnColumnTypes","jen","ken","detectedType","cache","aoData","types","oneOf","allOf","one","_columnAutoClass","aoFooter","_columnAutoRender","colIdx","nTr","display","displayData","_fnWriteCell","anCells","original","incVisible","_fnColumnsFromHeader","unit","sum","definedWidth","sWidthOrig","matched","closest","_fnAddData","dataIn","tds","rowIdx","rowModel","oRow","_aData","aIds","_fnCreateTr","_fnAddTr","trs","_fnGetRowElements","cells","draw","iDraw","defaultContent","sDefaultContent","cellData","innerHTML","iDrawError","call","fomatters","td","_fnGetDataMaster","_fnClearTable","_fnInvalidate","_aSortData","_aFilterData","_fnGetRowDisplay","maxLenString","_fnRowAttributes","contents","firstChild","objectRead","setter","cellProcess","trim","toUpperCase","nextSibling","rowNode","rowModal","iRow","nTrIn","anTds","nTd","create","trClass","createElement","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","removeChild","fnCreatedCell","DT_RowClass","__rowc","concat","removeClass","DT_RowAttr","DT_RowData","_fnBuildHead","side","titleProp","detected","_fnRenderer","_fnHeaderLayout","incColumns","rowspan","colspan","local","structure","columnCount","includes","titleSpan","title","_fnDrawHead","point","_fnDraw","ajaxComplete","bServerSide","fnRecordsDisplay","_fnStart","anRows","iRowCount","iDisplayEnd","fnDisplayEnd","bDrawing","_fnProcessingDisplay","_emptyRow","_fnBuildAjax","preSearch","oPreviousSearch","preColSearch","colData","searchable","bSearchable","orderable","regex","fixed","Object","keys","term","toString","_fnSortFlatten","dir","_iDisplayLength","_fnAjaxParameters","_fnAjaxDataSrc","_fnAjaxDataSrcParam","recordsTotal","recordsFiltered","_fnInitComplete","_fnAjaxUpdateDraw","iStart","iEnd","iDataIndex","nRow","replaceChildren","detach","nTableWrapper","toggleClass","bFiltered","_fnReDraw","holdPosition","recompute","bFilter","_fnSort","_fnFilterComplete","_drawHold","oLang","zero","sZeroRecords","dataSrc","sLoadingRecords","sEmptyTable","fnRecordsTotal","_layoutItems","align","items","rowCell","rowClass","opts","_layoutArray","rows","pos","parts","rowNum","_layoutGetRow","order1","order2","ret","reverse","_layoutResolve","getFeature","resolve","item","line","node","inst","write","l","shifted","isHeader","columnDef","sTitle","autoTitle","ariaTitle","childNodes","setAttribute","ajaxData","instance","callback","status","jqXHR","sError","JSON","parse","e","newData","baseAjax","sServerMethod","xhr","readyState","oAjaxData","dataProp","aaData","param","columnsSearch","filterData","__filter_div","__filter_div_textContent","textContent","innerText","_sFilterRow","_fnFilterData","_fnFilter","filters","displayRows","_fnFilterCustom","searchRows","searchFunc","rpSearch","inOpts","not","boundary","caseInsensitive","exact","smart","word","m","negative","_fnFilterCreateSearch","test","state","fnStateLoadCallback","_fnImplementState","_fnLoadState","iAjaxStart","insertBefore","sDom","dom","featureNode","option","newNode","next","parent","_fnFeatureHtmlTable","cFeature","fnInit","_fnLayoutDom","bottom","bProcessing","sProcessing","show","_processingHtml","_fnAddOptionsHtml","headerRows","querySelectorAll","legacyTop","bSortCellsTop","notSelector","_fnSortAttachListener","_fnSortResolve","_fnSortInit","_colGroup","aData","_bInitComplete","_fnLengthChange","_fnLengthOverflow","_fnPageChange","action","redraw","records","floor","changed","_fnProcessingRun","enable","run","captionSide","headerClone","footerClone","_div","size","scroller","scrollHead","scrollBody","scrollFoot","scrollLeft","bCollapse","nScrollHead","nScrollBody","nScrollFoot","aoDrawCallback","headerCopy","footerCopy","divHeaderInner","divHeaderTable","divBodyEl","divBody","divFooterInner","divFooterTable","scrollBarVis","scrollHeight","clientHeight","firstTr","colSizes","outerWidth","wrapAll","isScrolling","paddingSide","scrollTop","max","maxLen","cellString","nodeType","_fnBindAction","_fnSortAdd","shiftKey","_fnSortDisplay","master","masterMap","nestedSort","z","srcCol","aSort","extSort","aaSortingFixed","fixedObj","pre","post","_idx","index","formatter","sorter","aiOrig","displayMaster","_fnSortData","orderDescReverse","x","y","dataA","dataB","sortDetails","addIndex","nextSortIdx","bSortMulti","sortIdx","oldSort","aLastSort","sortClass","bSortClasses","customData","customSort","sSortDataType","_bLoadingState","time","oSavedState","fnStateSaveCallback","duration","iStateDuration","oLoadedState","page","adjust","level","msg","tn","console","log","sErrMode","alert","mappedName","extender","breakRefs","prototype","hasOwnProperty","which","preventDefault","store","callbackArr","eventName","bubbles","Event","dt","parents","result","host","_fnMacros","entries","fnFormatNumber","all","ceil","i18n","__apiStruct","__arrayProto","_api_scope","scope","struc","methodExt","_api_find","context","ctxSettings","jq","tables","toArray","v","_toSettings","any","count","flatten","ctx","iterator","alwaysNew","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","to$","toJQuery","unshift","obj","struct","__dt_wrapper","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","sel","nodes","indexes","prepend","visRecords","__reload","abort","resetPaging","_selector_run","selectFn","selectorType","_selector_opts","_selector_first","displayFiltered","displayFilteredMap","ordered","selInt","cellIdx","rowObj","__row_selector","r","hash","newRows","modRows","idFn","ids","_detailsShow","childRows","__details_state_load","loaded","every","__details_state","__details_remove","_details","__details_display","__details_events","namespace","drawEvent","colvisEvent","destroyEvent","off","_child_obj","_child_mth","klass","child","addRow","created","colSpan","__details_add","__re_column_selector","__columnData","r1","r2","__column_header","names","titles","visColumns","jqResult","__column_selector","span","calc","__setColumnVis","widths","visIdx","rowSelector","columnSelector","allCells","fnSelector","__cell_selector","internalOpts","cellsNoOpts","selected","columnVisible","directions","caseInsen","ignoreTime","setMutate","use","arg1","arg2","module","DateTime","__luxon","__moment","jquery","FixedOffsetZone","isMoment","root","versionCheck","version2","iThis","iThat","aThis","aThat","isDataTable","head","foot","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orderClasses","orig","removedMethod","sDestroyWidth","counter","selectedIdx","tableIdx","token","plural","resolved","toFormat","sThousands","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","first","number","topStart","topEnd","bottomStart","bottomEnd","pagingControls","min","extPagination","simple","numbers","simple_numbers","full_numbers","first_last","first_last_numbers","_numbers","_pagingNumbers","numbers_length","pagingButton","buttonType","content","btn","btnClasses","class","role","clicker","pagingContainer","_filterString","__mld","dtLib","momentFn","luxonFn","dateFn","__mlWarning","__mldObj","format","locale","luxon","moment","utc","isValid","fromFormat","fromISO","setLocale","__mlHelper","localeString","to","typeName","valueOf","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","date","thousands","decimal","precision","prefix","postfix","flo","abs","exp","toExponential","toFixed","intPart","floatPart","_extTypes","asc","desc","setProp","propVal","setDetect","defineProperty","findIndex","setOrder","__diacriticSort","localeCompare","navigator","languages","language","numeric","ignorePunctuation","parsed","ts","sDecimal","dp","__numericReplace","decimalPlace","re1","re2","_divProp","ariaType","sortDirs","orderedColumns","isOrdering","orderDirs","firstVis","firstSort","sortOrder","cb","bInfo","lang","tid","fnInfoCallback","sInfoEmpty","sInfoPostFix","sInfoFiltered","sInfo","_fnUpdateInfo","_infoEl","__searchCounter","_pagingDynamic","previousNext","firstLast","_pagingDraw","plugin","aria","oAria","pages","buttonEls","buttonsNested","boundaryNumbers","btnInfo","_pagingButtonInfo","ariaLabel","iTabIndex","wrapped","activeEl","activeElement","outerHeight","oPaginate","sFirst","sPrevious","sNext","sLast","addFirstLast","half","before","after","tableId","previousSearch","placeholder","sSearchPlaceholder","sSearch","removed","searchFn","event","return","jqFilter","keyCode","ev","sPaginationType","__lengthCounter","bLengthChange","menu","sLengthMenu","lengths","label","tmpId","div","textNodes","Node","TEXT_NODE","updateEntries","Option","replaceWith","dataTableSettings","dataTableExt"],"sourceRoot":""}